#!/usr/bin/env ruby

require 'tmpdir'

def exec(cmd)
  abort("Error encountered, aborting") unless system(cmd)
end

puts "CI=#{ENV['CI']}"
puts "CIRCLE_BRANCH=#{ENV['CIRCLE_BRANCH']}"
puts "CIRCLE_TAG=#{ENV['CIRCLE_TAG']}"
puts "CIRCLE_PULL_REQUEST=#{ENV['CIRCLE_PULL_REQUEST']}"
puts "PUBLISH=#{ENV['PUBLISH']}"
puts

unless ENV['CI'] == 'true'
  abort("ERROR: Not running on top of CI, aborting!")
end

branch = if ENV["CIRCLE_TAG"] && !ENV["CIRCLE_TAG"].empty?
  ENV["CIRCLE_TAG"]
else
  ENV['CIRCLE_BRANCH']
end

branch = branch || "<nil>"
puts "Detected branch or tag: " + branch

# Forcing a change to the root directory, if not there already
Dir.chdir(File.absolute_path(File.join(File.dirname(__FILE__), "..")))

exec("./scripts/sbt -J-XX:MetaspaceSize=2g -J-XX:MaxMetaspaceSize=2g -J-Xmx4g clean run")
exec("bundle exec jekyll build")

unless branch == "master" && not ENV['CIRCLE_PULL_REQUEST']
  puts "Only publishing on the `master` branch!"
  exit 0
end

repository = "github.com/monix/monix.io.git"
ghToken = ENV['GH_TOKEN']

unless ghToken
  puts "Missing GH_TOKEN environment value!"
  exit 1
end

destDir = Dir.mktmpdir + "/" + "monix.io"
begin
  puts "Synchronizing gh-pages branch!"

  exec("rm -rf \"#{destDir}\"")
  exec("git clone \"https://#{ghToken}@#{repository}\" \"#{destDir}\" -b gh-pages")
  exec("rsync --filter='P .*' --delete-excluded -Pacv _site/ \"#{destDir}/\"")

  Dir.chdir(destDir) do |path|
    exec("git add .")
    exec('git config user.name "Alexandru Nedelcu"')
    exec('git config user.email "noreply@alexn.org"')
    exec('git commit -m "docs: update gh-pages"')
    exec("git push --force --quiet \"https://#{ghToken}@#{repository}\" gh-pages:gh-pages")
  end
ensure
  exec("rm -rf \"#{destDir}\"")
end
