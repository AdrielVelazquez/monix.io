Index.PACKAGES = {"monix.cats" : [{"name" : "monix.cats.CatsToMonixConversions", "members_trait" : [{"label" : "CatsToMonixMonadRec", "tail" : "", "member" : "monix.cats.CatsCoreToMonix9.CatsToMonixMonadRec", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixMonadRec[F[_]]extendsMonadRec.Instance[F]withCatsCoreToMonix9.this.CatsToMonixMonad[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonoidK", "tail" : "", "member" : "monix.cats.CatsCoreToMonix8.CatsToMonixMonoidK", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixMonoidK[F[_]]extendsMonoidK.Instance[F]withCatsCoreToMonix8.this.CatsToMonixSemigroupK[F]", "kind" : "trait"}, {"label" : "CatsToMonixSemigroupK", "tail" : "", "member" : "monix.cats.CatsCoreToMonix7.CatsToMonixSemigroupK", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixSemigroupK[F[_]]extendsSemigroupK.Instance[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonadFilter", "tail" : "", "member" : "monix.cats.CatsCoreToMonix6.CatsToMonixMonadFilter", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixMonadFilter[F[_]]extendsMonadFilter.Instance[F]withCatsCoreToMonix6.this.CatsToMonixMonad[F]", "kind" : "trait"}, {"label" : "CatsToMonixComonad", "tail" : "", "member" : "monix.cats.CatsCoreToMonix5.CatsToMonixComonad", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixComonad[F[_]]extendsComonad.Instance[F]withCatsCoreToMonix5.this.CatsToMonixCobind[F]", "kind" : "trait"}, {"label" : "CatsToMonixCobind", "tail" : "", "member" : "monix.cats.CatsCoreToMonix4.CatsToMonixCobind", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixCobind[F[_]]extendsCobind.Instance[F]withCatsCoreToMonix4.this.CatsToMonixFunctor[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonadError", "tail" : "", "member" : "monix.cats.CatsCoreToMonix3.CatsToMonixMonadError", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixMonadError[F[_],E]extendsMonadError.Instance[F,E]withCatsCoreToMonix3.this.CatsToMonixMonad[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonad", "tail" : "", "member" : "monix.cats.CatsCoreToMonix2.CatsToMonixMonad", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixMonad[F[_]]extendsMonad.Instance[F]withCatsCoreToMonix2.this.CatsToMonixApplicative[F]", "kind" : "trait"}, {"label" : "CatsToMonixApplicative", "tail" : "", "member" : "monix.cats.CatsCoreToMonix1.CatsToMonixApplicative", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixApplicative[F[_]]extendsApplicative.Instance[F]withCatsCoreToMonix1.this.CatsToMonixFunctor[F]", "kind" : "trait"}, {"label" : "CatsToMonixFunctor", "tail" : "", "member" : "monix.cats.CatsCoreToMonix0.CatsToMonixFunctor", "link" : "monix\/cats\/CatsToMonixConversions.html#CatsToMonixFunctor[F[_]]extendsFunctor.Instance[F]", "kind" : "trait"}, {"label" : "catsToMonixMonadRec", "tail" : "(ev1: Monad[F]): MonadRec[F]", "member" : "monix.cats.CatsCoreToMonix9.catsToMonixMonadRec", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixMonadRec[F[_]](implicitev1:cats.Monad[F]):monix.types.MonadRec[F]", "kind" : "implicit def"}, {"label" : "catsToMonixMonoidK", "tail" : "(ev: MonoidK[F]): MonoidK[F]", "member" : "monix.cats.CatsCoreToMonix8.catsToMonixMonoidK", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixMonoidK[F[_]](implicitev:cats.MonoidK[F]):monix.types.MonoidK[F]", "kind" : "implicit def"}, {"label" : "catsToMonixSemigroupK", "tail" : "(ev: SemigroupK[F]): SemigroupK[F]", "member" : "monix.cats.CatsCoreToMonix7.catsToMonixSemigroupK", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixSemigroupK[F[_]](implicitev:cats.SemigroupK[F]):monix.types.SemigroupK[F]", "kind" : "implicit def"}, {"label" : "catsToMonixMonadFilter", "tail" : "(ev: MonadFilter[F]): MonadFilter[F]", "member" : "monix.cats.CatsCoreToMonix6.catsToMonixMonadFilter", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixMonadFilter[F[_]](implicitev:cats.MonadFilter[F]):monix.types.MonadFilter[F]", "kind" : "implicit def"}, {"label" : "catsToMonixComonad", "tail" : "(ev: Comonad[F]): Comonad[F]", "member" : "monix.cats.CatsCoreToMonix5.catsToMonixComonad", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixComonad[F[_]](implicitev:cats.Comonad[F]):monix.types.Comonad[F]", "kind" : "implicit def"}, {"label" : "catsToMonixCobind", "tail" : "(ev: CoflatMap[F]): Cobind[F]", "member" : "monix.cats.CatsCoreToMonix4.catsToMonixCobind", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixCobind[F[_]](implicitev:cats.CoflatMap[F]):monix.types.Cobind[F]", "kind" : "implicit def"}, {"label" : "catsToMonixMonadError", "tail" : "(ev: MonadError[F, E]): MonadError[F, E]", "member" : "monix.cats.CatsCoreToMonix3.catsToMonixMonadError", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixMonadError[F[_],E](implicitev:cats.MonadError[F,E]):monix.types.MonadError[F,E]", "kind" : "implicit def"}, {"label" : "catsToMonixMonad", "tail" : "(ev: Monad[F]): Monad[F]", "member" : "monix.cats.CatsCoreToMonix2.catsToMonixMonad", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixMonad[F[_]](implicitev:cats.Monad[F]):monix.types.Monad[F]", "kind" : "implicit def"}, {"label" : "catsToMonixApplicative", "tail" : "(ev: Applicative[F]): Applicative[F]", "member" : "monix.cats.CatsCoreToMonix1.catsToMonixApplicative", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixApplicative[F[_]](implicitev:cats.Applicative[F]):monix.types.Applicative[F]", "kind" : "implicit def"}, {"label" : "catsToMonixFunctor", "tail" : "(ev: Functor[F]): Functor[F]", "member" : "monix.cats.CatsCoreToMonix0.catsToMonixFunctor", "link" : "monix\/cats\/CatsToMonixConversions.html#catsToMonixFunctor[F[_]](implicitev:cats.Functor[F]):monix.types.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/cats\/CatsToMonixConversions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/cats\/CatsToMonixConversions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/cats\/CatsToMonixConversions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/cats\/CatsToMonixConversions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/cats\/CatsToMonixConversions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/cats\/CatsToMonixConversions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/cats\/CatsToMonixConversions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/CatsToMonixConversions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/CatsToMonixConversions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/CatsToMonixConversions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/cats\/CatsToMonixConversions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/cats\/CatsToMonixConversions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/cats\/CatsToMonixConversions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/cats\/CatsToMonixConversions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/cats\/CatsToMonixConversions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/cats\/CatsToMonixConversions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/cats\/CatsToMonixConversions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/cats\/CatsToMonixConversions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/cats\/CatsToMonixConversions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines conversions from Link(http:\/\/typelevel.org\/cats\/,Text(Cats))type-class instances to the Monix type-classes defined inmonix.types.", "trait" : "monix\/cats\/CatsToMonixConversions.html", "kind" : "trait"}, {"name" : "monix.cats.MonixToCatsConversions", "members_trait" : [{"label" : "MonixToCatsMonadRec", "tail" : "", "member" : "monix.cats.MonixToCatsCore11.MonixToCatsMonadRec", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsMonadRec[F[_]]extendsMonixToCatsCore11.this.MonixToCatsMonad[F]", "kind" : "class"}, {"label" : "MonixToCatsMonadCombine", "tail" : "", "member" : "monix.cats.MonixToCatsCore10.MonixToCatsMonadCombine", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsMonadCombine[F[_]]extendsMonixToCatsCore10.this.MonixToCatsMonadFilter[F]withMonadCombine[F]", "kind" : "class"}, {"label" : "MonixToCatsMonoidK", "tail" : "", "member" : "monix.cats.MonixToCatsCore9.MonixToCatsMonoidK", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsMonoidK[F[_]]extendsMonixToCatsCore9.this.MonixToCatsSemigroupK[F]withMonoidK[F]", "kind" : "class"}, {"label" : "MonixToCatsSemigroupK", "tail" : "", "member" : "monix.cats.MonixToCatsCore8.MonixToCatsSemigroupK", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsSemigroupK[F[_]]extendsSemigroupK[F]", "kind" : "class"}, {"label" : "MonixToCatsMonadFilter", "tail" : "", "member" : "monix.cats.MonixToCatsCore7.MonixToCatsMonadFilter", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsMonadFilter[F[_]]extendsMonixToCatsCore7.this.MonixToCatsMonad[F]withMonadFilter[F]", "kind" : "class"}, {"label" : "MonixToCatsBimonad", "tail" : "", "member" : "monix.cats.MonixToCatsCore6.MonixToCatsBimonad", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsBimonad[F[_]]extendsMonixToCatsCore6.this.MonixToCatsMonad[F]withBimonad[F]", "kind" : "class"}, {"label" : "MonixToCatsComonad", "tail" : "", "member" : "monix.cats.MonixToCatsCore5.MonixToCatsComonad", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsComonad[F[_]]extendsMonixToCatsCore5.this.MonixToCatsCoflatMap[F]withComonad[F]", "kind" : "class"}, {"label" : "MonixToCatsCoflatMap", "tail" : "", "member" : "monix.cats.MonixToCatsCore4.MonixToCatsCoflatMap", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsCoflatMap[F[_]]extendsMonixToCatsCore4.this.MonixToCatsFunctor[F]withCoflatMap[F]", "kind" : "class"}, {"label" : "MonixToCatsMonadError", "tail" : "", "member" : "monix.cats.MonixToCatsCore3.MonixToCatsMonadError", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsMonadError[F[_],E]extendsMonixToCatsCore3.this.MonixToCatsMonad[F]withMonadError[F,E]", "kind" : "class"}, {"label" : "MonixToCatsMonad", "tail" : "", "member" : "monix.cats.MonixToCatsCore2.MonixToCatsMonad", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsMonad[F[_]]extendsMonad[F]", "kind" : "class"}, {"label" : "MonixToCatsApplicative", "tail" : "", "member" : "monix.cats.MonixToCatsCore1.MonixToCatsApplicative", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsApplicative[F[_]]extendsApplicative[F]", "kind" : "class"}, {"label" : "MonixToCatsFunctor", "tail" : "", "member" : "monix.cats.MonixToCatsCore0.MonixToCatsFunctor", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixToCatsFunctor[F[_]]extendsFunctor[F]", "kind" : "class"}, {"label" : "MonixApplicativeHasCatsGroup", "tail" : "", "member" : "monix.cats.MonixToCatsKernel2.MonixApplicativeHasCatsGroup", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixApplicativeHasCatsGroup[F[_],A]extendsMonixToCatsKernel2.this.MonixApplicativeHasCatsMonoid[F,A]withGroup[F[A]]", "kind" : "class"}, {"label" : "MonixApplicativeHasCatsMonoid", "tail" : "", "member" : "monix.cats.MonixToCatsKernel1.MonixApplicativeHasCatsMonoid", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixApplicativeHasCatsMonoid[F[_],A]extendsMonixToCatsKernel1.this.MonixApplicativeHasCatsSemigroup[F,A]withMonoid[F[A]]", "kind" : "class"}, {"label" : "MonixApplicativeHasCatsSemigroup", "tail" : "", "member" : "monix.cats.MonixToCatsKernel0.MonixApplicativeHasCatsSemigroup", "link" : "monix\/cats\/MonixToCatsConversions.html#MonixApplicativeHasCatsSemigroup[F[_],A]extendsSemigroup[F[A]]", "kind" : "class"}, {"label" : "monixToCatsMonadRec", "tail" : "(arg0: MonadRec[F]): Monad[F]", "member" : "monix.cats.MonixToCatsCore11.monixToCatsMonadRec", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsMonadRec[F[_]](implicitevidence$13:monix.types.MonadRec[F]):cats.Monad[F]", "kind" : "implicit def"}, {"label" : "monixToCatsMonadCombine", "tail" : "(arg0: MonadFilter[F], arg1: MonoidK[F]): MonadCombine[F]", "member" : "monix.cats.MonixToCatsCore10.monixToCatsMonadCombine", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsMonadCombine[F[_]](implicitevidence$11:monix.types.MonadFilter[F],implicitevidence$12:monix.types.MonoidK[F]):cats.MonadCombine[F]", "kind" : "implicit def"}, {"label" : "monixToCatsMonoidK", "tail" : "(arg0: MonoidK[F]): MonoidK[F]", "member" : "monix.cats.MonixToCatsCore9.monixToCatsMonoidK", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsMonoidK[F[_]](implicitevidence$10:monix.types.MonoidK[F]):cats.MonoidK[F]", "kind" : "implicit def"}, {"label" : "monixToCatsSemigroupK", "tail" : "(arg0: SemigroupK[F]): SemigroupK[F]", "member" : "monix.cats.MonixToCatsCore8.monixToCatsSemigroupK", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsSemigroupK[F[_]](implicitevidence$9:monix.types.SemigroupK[F]):cats.SemigroupK[F]", "kind" : "implicit def"}, {"label" : "monixToCatsMonadFilter", "tail" : "(arg0: MonadFilter[F]): MonadFilter[F]", "member" : "monix.cats.MonixToCatsCore7.monixToCatsMonadFilter", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsMonadFilter[F[_]](implicitevidence$8:monix.types.MonadFilter[F]):cats.MonadFilter[F]", "kind" : "implicit def"}, {"label" : "monixToCatsBimonad", "tail" : "(arg0: Monad[F], arg1: Comonad[F]): Bimonad[F]", "member" : "monix.cats.MonixToCatsCore6.monixToCatsBimonad", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsBimonad[F[_]](implicitevidence$6:monix.types.Monad[F],implicitevidence$7:monix.types.Comonad[F]):cats.Bimonad[F]", "kind" : "implicit def"}, {"label" : "monixToCatsComonad", "tail" : "(arg0: Comonad[F]): Comonad[F]", "member" : "monix.cats.MonixToCatsCore5.monixToCatsComonad", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsComonad[F[_]](implicitevidence$5:monix.types.Comonad[F]):cats.Comonad[F]", "kind" : "implicit def"}, {"label" : "monixToCatsCoflatMap", "tail" : "(arg0: Cobind[F]): CoflatMap[F]", "member" : "monix.cats.MonixToCatsCore4.monixToCatsCoflatMap", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsCoflatMap[F[_]](implicitevidence$4:monix.types.Cobind[F]):cats.CoflatMap[F]", "kind" : "implicit def"}, {"label" : "monixToCatsMonadError", "tail" : "(ev: MonadError[F, E]): MonadError[F, E]", "member" : "monix.cats.MonixToCatsCore3.monixToCatsMonadError", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsMonadError[F[_],E](implicitev:monix.types.MonadError[F,E]):cats.MonadError[F,E]", "kind" : "implicit def"}, {"label" : "monixToCatsMonad", "tail" : "(arg0: Monad[F]): Monad[F]", "member" : "monix.cats.MonixToCatsCore2.monixToCatsMonad", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsMonad[F[_]](implicitevidence$3:monix.types.Monad[F]):cats.Monad[F]", "kind" : "implicit def"}, {"label" : "monixToCatsApplicative", "tail" : "(arg0: Applicative[F]): Applicative[F]", "member" : "monix.cats.MonixToCatsCore1.monixToCatsApplicative", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsApplicative[F[_]](implicitevidence$2:monix.types.Applicative[F]):cats.Applicative[F]", "kind" : "implicit def"}, {"label" : "monixToCatsFunctor", "tail" : "(arg0: Functor[F]): Functor[F]", "member" : "monix.cats.MonixToCatsCore0.monixToCatsFunctor", "link" : "monix\/cats\/MonixToCatsConversions.html#monixToCatsFunctor[F[_]](implicitevidence$1:monix.types.Functor[F]):cats.Functor[F]", "kind" : "implicit def"}, {"label" : "monixApplicativeHasCatsGroup", "tail" : "(F: Applicative[F], A: Group[A]): Group[F[A]]", "member" : "monix.cats.MonixToCatsKernel2.monixApplicativeHasCatsGroup", "link" : "monix\/cats\/MonixToCatsConversions.html#monixApplicativeHasCatsGroup[F[_],A](implicitF:monix.types.Applicative[F],implicitA:cats.kernel.Group[A]):cats.kernel.Group[F[A]]", "kind" : "implicit def"}, {"label" : "monixApplicativeHasCatsMonoid", "tail" : "(F: Applicative[F], A: Monoid[A]): Monoid[F[A]]", "member" : "monix.cats.MonixToCatsKernel1.monixApplicativeHasCatsMonoid", "link" : "monix\/cats\/MonixToCatsConversions.html#monixApplicativeHasCatsMonoid[F[_],A](implicitF:monix.types.Applicative[F],implicitA:cats.kernel.Monoid[A]):cats.kernel.Monoid[F[A]]", "kind" : "implicit def"}, {"label" : "monixApplicativeHasCatsSemigroup", "tail" : "(F: Applicative[F], A: Semigroup[A]): Semigroup[F[A]]", "member" : "monix.cats.MonixToCatsKernel0.monixApplicativeHasCatsSemigroup", "link" : "monix\/cats\/MonixToCatsConversions.html#monixApplicativeHasCatsSemigroup[F[_],A](implicitF:monix.types.Applicative[F],implicitA:cats.kernel.Semigroup[A]):cats.kernel.Semigroup[F[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/cats\/MonixToCatsConversions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/cats\/MonixToCatsConversions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/cats\/MonixToCatsConversions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/cats\/MonixToCatsConversions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/cats\/MonixToCatsConversions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/cats\/MonixToCatsConversions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/cats\/MonixToCatsConversions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/MonixToCatsConversions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/MonixToCatsConversions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/MonixToCatsConversions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/cats\/MonixToCatsConversions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/cats\/MonixToCatsConversions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/cats\/MonixToCatsConversions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/cats\/MonixToCatsConversions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/cats\/MonixToCatsConversions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/cats\/MonixToCatsConversions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/cats\/MonixToCatsConversions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/cats\/MonixToCatsConversions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/cats\/MonixToCatsConversions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines conversions from the Monix type-classes defined inmonix.types to type-class instances from theLink(http:\/\/typelevel.org\/cats\/,Text(Cats)) library.", "trait" : "monix\/cats\/MonixToCatsConversions.html", "kind" : "trait"}, {"name" : "monix.cats.reverse", "shortDescription" : "Defines conversions from Link(http:\/\/typelevel.org\/cats\/,Text(Cats))type-class instances to the Monix type-classes defined inmonix.types.", "object" : "monix\/cats\/reverse$.html", "members_object" : [{"label" : "CatsToMonixMonadRec", "tail" : "", "member" : "monix.cats.CatsCoreToMonix9.CatsToMonixMonadRec", "link" : "monix\/cats\/reverse$.html#CatsToMonixMonadRec[F[_]]extendsMonadRec.Instance[F]withCatsCoreToMonix9.this.CatsToMonixMonad[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonoidK", "tail" : "", "member" : "monix.cats.CatsCoreToMonix8.CatsToMonixMonoidK", "link" : "monix\/cats\/reverse$.html#CatsToMonixMonoidK[F[_]]extendsMonoidK.Instance[F]withCatsCoreToMonix8.this.CatsToMonixSemigroupK[F]", "kind" : "trait"}, {"label" : "CatsToMonixSemigroupK", "tail" : "", "member" : "monix.cats.CatsCoreToMonix7.CatsToMonixSemigroupK", "link" : "monix\/cats\/reverse$.html#CatsToMonixSemigroupK[F[_]]extendsSemigroupK.Instance[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonadFilter", "tail" : "", "member" : "monix.cats.CatsCoreToMonix6.CatsToMonixMonadFilter", "link" : "monix\/cats\/reverse$.html#CatsToMonixMonadFilter[F[_]]extendsMonadFilter.Instance[F]withCatsCoreToMonix6.this.CatsToMonixMonad[F]", "kind" : "trait"}, {"label" : "CatsToMonixComonad", "tail" : "", "member" : "monix.cats.CatsCoreToMonix5.CatsToMonixComonad", "link" : "monix\/cats\/reverse$.html#CatsToMonixComonad[F[_]]extendsComonad.Instance[F]withCatsCoreToMonix5.this.CatsToMonixCobind[F]", "kind" : "trait"}, {"label" : "CatsToMonixCobind", "tail" : "", "member" : "monix.cats.CatsCoreToMonix4.CatsToMonixCobind", "link" : "monix\/cats\/reverse$.html#CatsToMonixCobind[F[_]]extendsCobind.Instance[F]withCatsCoreToMonix4.this.CatsToMonixFunctor[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonadError", "tail" : "", "member" : "monix.cats.CatsCoreToMonix3.CatsToMonixMonadError", "link" : "monix\/cats\/reverse$.html#CatsToMonixMonadError[F[_],E]extendsMonadError.Instance[F,E]withCatsCoreToMonix3.this.CatsToMonixMonad[F]", "kind" : "trait"}, {"label" : "CatsToMonixMonad", "tail" : "", "member" : "monix.cats.CatsCoreToMonix2.CatsToMonixMonad", "link" : "monix\/cats\/reverse$.html#CatsToMonixMonad[F[_]]extendsMonad.Instance[F]withCatsCoreToMonix2.this.CatsToMonixApplicative[F]", "kind" : "trait"}, {"label" : "CatsToMonixApplicative", "tail" : "", "member" : "monix.cats.CatsCoreToMonix1.CatsToMonixApplicative", "link" : "monix\/cats\/reverse$.html#CatsToMonixApplicative[F[_]]extendsApplicative.Instance[F]withCatsCoreToMonix1.this.CatsToMonixFunctor[F]", "kind" : "trait"}, {"label" : "CatsToMonixFunctor", "tail" : "", "member" : "monix.cats.CatsCoreToMonix0.CatsToMonixFunctor", "link" : "monix\/cats\/reverse$.html#CatsToMonixFunctor[F[_]]extendsFunctor.Instance[F]", "kind" : "trait"}, {"label" : "catsToMonixMonadRec", "tail" : "(ev1: Monad[F]): MonadRec[F]", "member" : "monix.cats.CatsCoreToMonix9.catsToMonixMonadRec", "link" : "monix\/cats\/reverse$.html#catsToMonixMonadRec[F[_]](implicitev1:cats.Monad[F]):monix.types.MonadRec[F]", "kind" : "implicit def"}, {"label" : "catsToMonixMonoidK", "tail" : "(ev: MonoidK[F]): MonoidK[F]", "member" : "monix.cats.CatsCoreToMonix8.catsToMonixMonoidK", "link" : "monix\/cats\/reverse$.html#catsToMonixMonoidK[F[_]](implicitev:cats.MonoidK[F]):monix.types.MonoidK[F]", "kind" : "implicit def"}, {"label" : "catsToMonixSemigroupK", "tail" : "(ev: SemigroupK[F]): SemigroupK[F]", "member" : "monix.cats.CatsCoreToMonix7.catsToMonixSemigroupK", "link" : "monix\/cats\/reverse$.html#catsToMonixSemigroupK[F[_]](implicitev:cats.SemigroupK[F]):monix.types.SemigroupK[F]", "kind" : "implicit def"}, {"label" : "catsToMonixMonadFilter", "tail" : "(ev: MonadFilter[F]): MonadFilter[F]", "member" : "monix.cats.CatsCoreToMonix6.catsToMonixMonadFilter", "link" : "monix\/cats\/reverse$.html#catsToMonixMonadFilter[F[_]](implicitev:cats.MonadFilter[F]):monix.types.MonadFilter[F]", "kind" : "implicit def"}, {"label" : "catsToMonixComonad", "tail" : "(ev: Comonad[F]): Comonad[F]", "member" : "monix.cats.CatsCoreToMonix5.catsToMonixComonad", "link" : "monix\/cats\/reverse$.html#catsToMonixComonad[F[_]](implicitev:cats.Comonad[F]):monix.types.Comonad[F]", "kind" : "implicit def"}, {"label" : "catsToMonixCobind", "tail" : "(ev: CoflatMap[F]): Cobind[F]", "member" : "monix.cats.CatsCoreToMonix4.catsToMonixCobind", "link" : "monix\/cats\/reverse$.html#catsToMonixCobind[F[_]](implicitev:cats.CoflatMap[F]):monix.types.Cobind[F]", "kind" : "implicit def"}, {"label" : "catsToMonixMonadError", "tail" : "(ev: MonadError[F, E]): MonadError[F, E]", "member" : "monix.cats.CatsCoreToMonix3.catsToMonixMonadError", "link" : "monix\/cats\/reverse$.html#catsToMonixMonadError[F[_],E](implicitev:cats.MonadError[F,E]):monix.types.MonadError[F,E]", "kind" : "implicit def"}, {"label" : "catsToMonixMonad", "tail" : "(ev: Monad[F]): Monad[F]", "member" : "monix.cats.CatsCoreToMonix2.catsToMonixMonad", "link" : "monix\/cats\/reverse$.html#catsToMonixMonad[F[_]](implicitev:cats.Monad[F]):monix.types.Monad[F]", "kind" : "implicit def"}, {"label" : "catsToMonixApplicative", "tail" : "(ev: Applicative[F]): Applicative[F]", "member" : "monix.cats.CatsCoreToMonix1.catsToMonixApplicative", "link" : "monix\/cats\/reverse$.html#catsToMonixApplicative[F[_]](implicitev:cats.Applicative[F]):monix.types.Applicative[F]", "kind" : "implicit def"}, {"label" : "catsToMonixFunctor", "tail" : "(ev: Functor[F]): Functor[F]", "member" : "monix.cats.CatsCoreToMonix0.catsToMonixFunctor", "link" : "monix\/cats\/reverse$.html#catsToMonixFunctor[F[_]](implicitev:cats.Functor[F]):monix.types.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/cats\/reverse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/cats\/reverse$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/cats\/reverse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/cats\/reverse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/cats\/reverse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/cats\/reverse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/cats\/reverse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/reverse$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/reverse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/cats\/reverse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/cats\/reverse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/cats\/reverse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/cats\/reverse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/cats\/reverse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/cats\/reverse$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/cats\/reverse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/cats\/reverse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/cats\/reverse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/cats\/reverse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "monix.types.utils" : [{"name" : "monix.types.utils.IsEqArrow", "shortDescription" : "Syntax for expressing equivalence in laws.", "members_class" : [{"label" : "<->", "tail" : "(rhs: A): IsEquiv[A]", "member" : "monix.types.utils.IsEqArrow.<->", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#<->(rhs:A):monix.types.utils.IsEquiv[A]", "kind" : "def"}, {"member" : "monix.types.utils.IsEqArrow#<init>", "error" : "unsupported entity"}, {"label" : "lhs", "tail" : ": A", "member" : "monix.types.utils.IsEqArrow.lhs", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#lhs:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "monix\/types\/utils\/package$$IsEqArrow.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "monix\/types\/utils\/package$$IsEqArrow.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "monix\/types\/utils\/package$$IsEqArrow.html", "kind" : "class"}, {"name" : "monix.types.utils.IsEquiv", "shortDescription" : "For expressing equivalence in laws.", "members_case class" : [{"member" : "monix.types.utils.IsEquiv#<init>", "error" : "unsupported entity"}, {"label" : "rh", "tail" : ": A", "member" : "monix.types.utils.IsEquiv.rh", "link" : "monix\/types\/utils\/IsEquiv.html#rh:A", "kind" : "val"}, {"label" : "lh", "tail" : ": A", "member" : "monix.types.utils.IsEquiv.lh", "link" : "monix\/types\/utils\/IsEquiv.html#lh:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/utils\/IsEquiv.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/utils\/IsEquiv.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/utils\/IsEquiv.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/utils\/IsEquiv.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/utils\/IsEquiv.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/utils\/IsEquiv.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/utils\/IsEquiv.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/utils\/IsEquiv.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/utils\/IsEquiv.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/utils\/IsEquiv.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/utils\/IsEquiv.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/utils\/IsEquiv.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/utils\/IsEquiv.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/utils\/IsEquiv.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/utils\/IsEquiv.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/utils\/IsEquiv.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "monix\/types\/utils\/IsEquiv.html", "kind" : "case class"}, {"name" : "monix.types.utils.Macros", "shortDescription" : "Macro implementations for the syntaxexposed for the various type-classes, used in order toreduce overhead.", "members_class" : [{"label" : "monadFilter", "tail" : "(f: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadFilter", "link" : "monix\/types\/utils\/Macros.html#monadFilter(f:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "monadErrorRecover", "tail" : "(pf: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadErrorRecover", "link" : "monix\/types\/utils\/Macros.html#monadErrorRecover(pf:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "monadErrorRecoverWith", "tail" : "(pf: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadErrorRecoverWith", "link" : "monix\/types\/utils\/Macros.html#monadErrorRecoverWith(pf:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "monadErrorHandle", "tail" : "(f: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadErrorHandle", "link" : "monix\/types\/utils\/Macros.html#monadErrorHandle(f:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "monadErrorHandleWith", "tail" : "(f: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadErrorHandleWith", "link" : "monix\/types\/utils\/Macros.html#monadErrorHandleWith(f:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "monadFlatten", "tail" : "(ev: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadFlatten", "link" : "monix\/types\/utils\/Macros.html#monadFlatten(ev:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "monadFlatMap", "tail" : "(f: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.monadFlatMap", "link" : "monix\/types\/utils\/Macros.html#monadFlatMap(f:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "applicativeAP", "tail" : "(ff: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.applicativeAP", "link" : "monix\/types\/utils\/Macros.html#applicativeAP(ff:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "functorMap", "tail" : "(f: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.types.utils.Macros.functorMap", "link" : "monix\/types\/utils\/Macros.html#functorMap(f:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"member" : "monix.types.utils.Macros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "monix.types.utils.Macros.c", "link" : "monix\/types\/utils\/Macros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/utils\/Macros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/utils\/Macros.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/utils\/Macros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/utils\/Macros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/utils\/Macros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/utils\/Macros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/utils\/Macros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/utils\/Macros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/utils\/Macros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/utils\/Macros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/utils\/Macros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/utils\/Macros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/utils\/Macros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/utils\/Macros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/utils\/Macros.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/utils\/Macros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/utils\/Macros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/utils\/Macros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/utils\/Macros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/types\/utils\/Macros.html", "kind" : "class"}], "monix.execution.atomic" : [{"name" : "monix.execution.atomic.Atomic", "shortDescription" : "Base trait of all atomic references, no matter the type.", "object" : "monix\/execution\/atomic\/Atomic$.html", "members_class" : [{"label" : "transform", "tail" : "(cb: (A) â‡’ A): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/Atomic.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (A) â‡’ A): A", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/Atomic.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (A) â‡’ A): A", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/Atomic.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (A) â‡’ (U, A)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/Atomic.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: A): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/Atomic.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: A): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/Atomic.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): A", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/Atomic.html#apply():A", "kind" : "final macro def"}, {"member" : "monix.execution.atomic.Atomic#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/Atomic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/Atomic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/Atomic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/Atomic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/Atomic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/Atomic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/Atomic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/Atomic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/Atomic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/Atomic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/Atomic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/Atomic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/Atomic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/Atomic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/Atomic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/Atomic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/Atomic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/Atomic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/Atomic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lazySet", "tail" : "(update: A): Unit", "member" : "monix.execution.atomic.Atomic.lazySet", "link" : "monix\/execution\/atomic\/Atomic.html#lazySet(update:A):Unit", "kind" : "abstract def"}, {"label" : "getAndSet", "tail" : "(update: A): A", "member" : "monix.execution.atomic.Atomic.getAndSet", "link" : "monix\/execution\/atomic\/Atomic.html#getAndSet(update:A):A", "kind" : "abstract def"}, {"label" : "compareAndSet", "tail" : "(expect: A, update: A): Boolean", "member" : "monix.execution.atomic.Atomic.compareAndSet", "link" : "monix\/execution\/atomic\/Atomic.html#compareAndSet(expect:A,update:A):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(update: A): Unit", "member" : "monix.execution.atomic.Atomic.set", "link" : "monix\/execution\/atomic\/Atomic.html#set(update:A):Unit", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): A", "member" : "monix.execution.atomic.Atomic.get", "link" : "monix\/execution\/atomic\/Atomic.html#get:A", "kind" : "abstract def"}], "members_object" : [{"label" : "Macros", "tail" : "", "member" : "monix.execution.atomic.Atomic.Macros", "link" : "monix\/execution\/atomic\/Atomic$.html#MacrosextendsHygieneUtilMacroswithInlineMacros", "kind" : "class"}, {"label" : "builderFor", "tail" : "(initialValue: T)(builder: AtomicBuilder[T, R]): AtomicBuilder[T, R]", "member" : "monix.execution.atomic.Atomic.builderFor", "link" : "monix\/execution\/atomic\/Atomic$.html#builderFor[T,R<:monix.execution.atomic.Atomic[T]](initialValue:T)(implicitbuilder:monix.execution.atomic.AtomicBuilder[T,R]):monix.execution.atomic.AtomicBuilder[T,R]", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: T, padding: PaddingStrategy)(builder: AtomicBuilder[T, R]): R", "member" : "monix.execution.atomic.Atomic.withPadding", "link" : "monix\/execution\/atomic\/Atomic$.html#withPadding[T,R<:monix.execution.atomic.Atomic[T]](initialValue:T,padding:monix.execution.atomic.PaddingStrategy)(implicitbuilder:monix.execution.atomic.AtomicBuilder[T,R]):R", "kind" : "macro def"}, {"label" : "apply", "tail" : "(initialValue: T)(builder: AtomicBuilder[T, R]): R", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/Atomic$.html#apply[T,R<:monix.execution.atomic.Atomic[T]](initialValue:T)(implicitbuilder:monix.execution.atomic.AtomicBuilder[T,R]):R", "kind" : "macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/Atomic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/Atomic$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/Atomic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/Atomic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/Atomic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/Atomic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/Atomic$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/Atomic$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/Atomic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/Atomic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/Atomic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/Atomic$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/Atomic$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/Atomic$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/Atomic$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/Atomic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/Atomic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/Atomic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/Atomic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/Atomic.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicAny", "shortDescription" : "Atomic references wrapping AnyRef values.", "object" : "monix\/execution\/atomic\/AtomicAny$.html", "members_class" : [{"label" : "lazySet", "tail" : "(update: T): Unit", "member" : "monix.execution.atomic.AtomicAny.lazySet", "link" : "monix\/execution\/atomic\/AtomicAny.html#lazySet(update:T):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: T): T", "member" : "monix.execution.atomic.AtomicAny.getAndSet", "link" : "monix\/execution\/atomic\/AtomicAny.html#getAndSet(update:T):T", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: T, update: T): Boolean", "member" : "monix.execution.atomic.AtomicAny.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicAny.html#compareAndSet(expect:T,update:T):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(update: T): Unit", "member" : "monix.execution.atomic.AtomicAny.set", "link" : "monix\/execution\/atomic\/AtomicAny.html#set(update:T):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): T", "member" : "monix.execution.atomic.AtomicAny.get", "link" : "monix\/execution\/atomic\/AtomicAny.html#get:T", "kind" : "def"}, {"label" : "transform", "tail" : "(cb: (T) â‡’ T): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicAny.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (T) â‡’ T): T", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicAny.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (T) â‡’ T): T", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicAny.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (T) â‡’ (U, T)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicAny.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicAny.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicAny.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): T", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicAny.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicAny.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicAny.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicAny.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicAny.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicAny.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicAny.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicAny.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicAny.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicAny.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicAny.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicAny.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicAny.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicAny.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicAny.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicAny.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicAny.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicAny.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicAny.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicAny.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: A, padding: PaddingStrategy): AtomicAny[A]", "member" : "monix.execution.atomic.AtomicAny.safe", "link" : "monix\/execution\/atomic\/AtomicAny$.html#safe[A<:AnyRef](initialValue:A,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicAny[A]", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: A, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicAny[A]", "member" : "monix.execution.atomic.AtomicAny.create", "link" : "monix\/execution\/atomic\/AtomicAny$.html#create[A<:AnyRef](initialValue:A,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicAny[A]", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: A, padding: PaddingStrategy): AtomicAny[A]", "member" : "monix.execution.atomic.AtomicAny.withPadding", "link" : "monix\/execution\/atomic\/AtomicAny$.html#withPadding[A<:AnyRef](initialValue:A,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicAny[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: A): AtomicAny[A]", "member" : "monix.execution.atomic.AtomicAny.apply", "link" : "monix\/execution\/atomic\/AtomicAny$.html#apply[A<:AnyRef](initialValue:A):monix.execution.atomic.AtomicAny[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicAny$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicAny$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicAny$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicAny$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicAny$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicAny$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicAny$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicAny$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicAny$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicAny$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicAny$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicAny$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicAny$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicAny$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicAny$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicAny$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicAny$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicAny$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicAny$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicAny.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicBoolean", "shortDescription" : "Atomic references wrapping Boolean values.", "object" : "monix\/execution\/atomic\/AtomicBoolean$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "monix.execution.atomic.AtomicBoolean.toString", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#toString():String", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Boolean): Unit", "member" : "monix.execution.atomic.AtomicBoolean.lazySet", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#lazySet(update:Boolean):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Boolean): Boolean", "member" : "monix.execution.atomic.AtomicBoolean.getAndSet", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#getAndSet(update:Boolean):Boolean", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Boolean, update: Boolean): Boolean", "member" : "monix.execution.atomic.AtomicBoolean.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#compareAndSet(expect:Boolean,update:Boolean):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(update: Boolean): Unit", "member" : "monix.execution.atomic.AtomicBoolean.set", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#set(update:Boolean):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Boolean", "member" : "monix.execution.atomic.AtomicBoolean.get", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#get:Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(cb: (Boolean) â‡’ Boolean): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Boolean) â‡’ Boolean): Boolean", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Boolean) â‡’ Boolean): Boolean", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Boolean) â‡’ (U, Boolean)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Boolean): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Boolean): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Boolean", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicBoolean.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBoolean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Boolean, padding: PaddingStrategy): AtomicBoolean", "member" : "monix.execution.atomic.AtomicBoolean.safe", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#safe(initialValue:Boolean,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicBoolean", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Boolean, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicBoolean", "member" : "monix.execution.atomic.AtomicBoolean.create", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#create(initialValue:Boolean,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicBoolean", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Boolean, padding: PaddingStrategy): AtomicBoolean", "member" : "monix.execution.atomic.AtomicBoolean.withPadding", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#withPadding(initialValue:Boolean,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicBoolean", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Boolean): AtomicBoolean", "member" : "monix.execution.atomic.AtomicBoolean.apply", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#apply(initialValue:Boolean):monix.execution.atomic.AtomicBoolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBoolean$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicBoolean.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildSafeInstance", "tail" : "(initialValue: A, padding: PaddingStrategy): R", "member" : "monix.execution.atomic.AtomicBuilder.buildSafeInstance", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#buildSafeInstance(initialValue:A,padding:monix.execution.atomic.PaddingStrategy):R", "kind" : "abstract def"}, {"label" : "buildInstance", "tail" : "(initialValue: A, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): R", "member" : "monix.execution.atomic.AtomicBuilder.buildInstance", "link" : "monix\/execution\/atomic\/AtomicBuilder.html#buildInstance(initialValue:A,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):R", "kind" : "abstract def"}], "shortDescription" : "For a given A indicates the most specific Atomic[A]reference type to use.", "object" : "monix\/execution\/atomic\/AtomicBuilder$.html", "members_object" : [{"label" : "AtomicDoubleBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicDoubleBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicDoubleBuilder", "kind" : "implicit object"}, {"label" : "AtomicFloatBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicFloatBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicFloatBuilder", "kind" : "implicit object"}, {"label" : "AtomicShortBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicShortBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicShortBuilder", "kind" : "implicit object"}, {"label" : "AtomicCharBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicCharBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicCharBuilder", "kind" : "implicit object"}, {"label" : "AtomicByteBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicByteBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicByteBuilder", "kind" : "implicit object"}, {"label" : "AtomicBooleanBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicBooleanBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicBooleanBuilder", "kind" : "implicit object"}, {"label" : "AtomicLongBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicLongBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicLongBuilder", "kind" : "implicit object"}, {"label" : "AtomicIntBuilder", "tail" : "", "member" : "monix.execution.atomic.AtomicBuilder.AtomicIntBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicIntBuilder", "kind" : "implicit object"}, {"label" : "AtomicNumberBuilder", "tail" : "(arg0: Numeric[A]): AtomicBuilder[A, AtomicNumberAny[A]]", "member" : "monix.execution.atomic.Implicits.Level2.AtomicNumberBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicNumberBuilder[A<:AnyRef](implicitevidence$1:Numeric[A]):monix.execution.atomic.AtomicBuilder[A,monix.execution.atomic.AtomicNumberAny[A]]", "kind" : "implicit def"}, {"label" : "AtomicRefBuilder", "tail" : "(): AtomicBuilder[A, AtomicAny[A]]", "member" : "monix.execution.atomic.Implicits.Level1.AtomicRefBuilder", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#AtomicRefBuilder[A<:AnyRef]:monix.execution.atomic.AtomicBuilder[A,monix.execution.atomic.AtomicAny[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/atomic\/AtomicBuilder.html", "kind" : "trait"}, {"name" : "monix.execution.atomic.AtomicByte", "shortDescription" : "Atomic references wrapping Byte values.", "object" : "monix\/execution\/atomic\/AtomicByte$.html", "members_class" : [{"label" : "getAndDecrement", "tail" : "(v: Int): Byte", "member" : "monix.execution.atomic.AtomicByte.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicByte.html#getAndDecrement(v:Int):Byte", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Byte", "member" : "monix.execution.atomic.AtomicByte.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicByte.html#decrementAndGet(v:Int):Byte", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicByte.decrement", "link" : "monix\/execution\/atomic\/AtomicByte.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Byte): Byte", "member" : "monix.execution.atomic.AtomicByte.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicByte.html#getAndSubtract(v:Byte):Byte", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Byte): Byte", "member" : "monix.execution.atomic.AtomicByte.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicByte.html#subtractAndGet(v:Byte):Byte", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Byte): Unit", "member" : "monix.execution.atomic.AtomicByte.subtract", "link" : "monix\/execution\/atomic\/AtomicByte.html#subtract(v:Byte):Unit", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Byte): Byte", "member" : "monix.execution.atomic.AtomicByte.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicByte.html#getAndAdd(v:Byte):Byte", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Byte", "member" : "monix.execution.atomic.AtomicByte.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicByte.html#getAndIncrement(v:Int):Byte", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Byte): Byte", "member" : "monix.execution.atomic.AtomicByte.addAndGet", "link" : "monix\/execution\/atomic\/AtomicByte.html#addAndGet(v:Byte):Byte", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Byte", "member" : "monix.execution.atomic.AtomicByte.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicByte.html#incrementAndGet(v:Int):Byte", "kind" : "def"}, {"label" : "add", "tail" : "(v: Byte): Unit", "member" : "monix.execution.atomic.AtomicByte.add", "link" : "monix\/execution\/atomic\/AtomicByte.html#add(v:Byte):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicByte.increment", "link" : "monix\/execution\/atomic\/AtomicByte.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Byte): Byte", "member" : "monix.execution.atomic.AtomicByte.getAndSet", "link" : "monix\/execution\/atomic\/AtomicByte.html#getAndSet(update:Byte):Byte", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Byte, update: Byte): Boolean", "member" : "monix.execution.atomic.AtomicByte.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicByte.html#compareAndSet(expect:Byte,update:Byte):Boolean", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Byte): Unit", "member" : "monix.execution.atomic.AtomicByte.lazySet", "link" : "monix\/execution\/atomic\/AtomicByte.html#lazySet(update:Byte):Unit", "kind" : "def"}, {"label" : "set", "tail" : "(update: Byte): Unit", "member" : "monix.execution.atomic.AtomicByte.set", "link" : "monix\/execution\/atomic\/AtomicByte.html#set(update:Byte):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Byte", "member" : "monix.execution.atomic.AtomicByte.get", "link" : "monix\/execution\/atomic\/AtomicByte.html#get:Byte", "kind" : "def"}, {"label" : "+=", "tail" : "(value: Byte): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicByte.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Byte): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicByte.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Byte) â‡’ Byte): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicByte.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Byte) â‡’ Byte): Byte", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicByte.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Byte) â‡’ Byte): Byte", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicByte.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Byte) â‡’ (U, Byte)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicByte.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Byte): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicByte.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Byte): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicByte.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Byte", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicByte.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicByte.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicByte.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicByte.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicByte.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicByte.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicByte.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicByte.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicByte.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicByte.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicByte.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicByte.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicByte.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicByte.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicByte.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicByte.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicByte.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicByte.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicByte.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicByte.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Byte, padding: PaddingStrategy): AtomicByte", "member" : "monix.execution.atomic.AtomicByte.safe", "link" : "monix\/execution\/atomic\/AtomicByte$.html#safe(initialValue:Byte,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicByte", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Byte, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicByte", "member" : "monix.execution.atomic.AtomicByte.create", "link" : "monix\/execution\/atomic\/AtomicByte$.html#create(initialValue:Byte,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicByte", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Byte, padding: PaddingStrategy): AtomicByte", "member" : "monix.execution.atomic.AtomicByte.withPadding", "link" : "monix\/execution\/atomic\/AtomicByte$.html#withPadding(initialValue:Byte,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicByte", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Byte): AtomicByte", "member" : "monix.execution.atomic.AtomicByte.apply", "link" : "monix\/execution\/atomic\/AtomicByte$.html#apply(initialValue:Byte):monix.execution.atomic.AtomicByte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicByte$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicByte$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicByte$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicByte$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicByte$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicByte$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicByte$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicByte$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicByte$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicByte$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicByte$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicByte$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicByte$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicByte$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicByte$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicByte$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicByte$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicByte$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicByte$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicByte.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicChar", "shortDescription" : "Atomic references wrapping Char values.", "object" : "monix\/execution\/atomic\/AtomicChar$.html", "members_class" : [{"label" : "getAndDecrement", "tail" : "(v: Int): Char", "member" : "monix.execution.atomic.AtomicChar.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicChar.html#getAndDecrement(v:Int):Char", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Char", "member" : "monix.execution.atomic.AtomicChar.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicChar.html#decrementAndGet(v:Int):Char", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicChar.decrement", "link" : "monix\/execution\/atomic\/AtomicChar.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Char): Char", "member" : "monix.execution.atomic.AtomicChar.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicChar.html#getAndSubtract(v:Char):Char", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Char): Char", "member" : "monix.execution.atomic.AtomicChar.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicChar.html#subtractAndGet(v:Char):Char", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Char): Unit", "member" : "monix.execution.atomic.AtomicChar.subtract", "link" : "monix\/execution\/atomic\/AtomicChar.html#subtract(v:Char):Unit", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Char): Char", "member" : "monix.execution.atomic.AtomicChar.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicChar.html#getAndAdd(v:Char):Char", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Char", "member" : "monix.execution.atomic.AtomicChar.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicChar.html#getAndIncrement(v:Int):Char", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Char): Char", "member" : "monix.execution.atomic.AtomicChar.addAndGet", "link" : "monix\/execution\/atomic\/AtomicChar.html#addAndGet(v:Char):Char", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Char", "member" : "monix.execution.atomic.AtomicChar.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicChar.html#incrementAndGet(v:Int):Char", "kind" : "def"}, {"label" : "add", "tail" : "(v: Char): Unit", "member" : "monix.execution.atomic.AtomicChar.add", "link" : "monix\/execution\/atomic\/AtomicChar.html#add(v:Char):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicChar.increment", "link" : "monix\/execution\/atomic\/AtomicChar.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Char): Char", "member" : "monix.execution.atomic.AtomicChar.getAndSet", "link" : "monix\/execution\/atomic\/AtomicChar.html#getAndSet(update:Char):Char", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Char, update: Char): Boolean", "member" : "monix.execution.atomic.AtomicChar.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicChar.html#compareAndSet(expect:Char,update:Char):Boolean", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Char): Unit", "member" : "monix.execution.atomic.AtomicChar.lazySet", "link" : "monix\/execution\/atomic\/AtomicChar.html#lazySet(update:Char):Unit", "kind" : "def"}, {"label" : "set", "tail" : "(update: Char): Unit", "member" : "monix.execution.atomic.AtomicChar.set", "link" : "monix\/execution\/atomic\/AtomicChar.html#set(update:Char):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Char", "member" : "monix.execution.atomic.AtomicChar.get", "link" : "monix\/execution\/atomic\/AtomicChar.html#get:Char", "kind" : "def"}, {"label" : "+=", "tail" : "(value: Char): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicChar.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Char): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicChar.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Char) â‡’ Char): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicChar.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Char) â‡’ Char): Char", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicChar.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Char) â‡’ Char): Char", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicChar.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Char) â‡’ (U, Char)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicChar.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Char): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicChar.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Char): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicChar.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Char", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicChar.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicChar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicChar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicChar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicChar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicChar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicChar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicChar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicChar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicChar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicChar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicChar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicChar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicChar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicChar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicChar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicChar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicChar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicChar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicChar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Char, padding: PaddingStrategy): AtomicChar", "member" : "monix.execution.atomic.AtomicChar.safe", "link" : "monix\/execution\/atomic\/AtomicChar$.html#safe(initialValue:Char,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicChar", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Char, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicChar", "member" : "monix.execution.atomic.AtomicChar.create", "link" : "monix\/execution\/atomic\/AtomicChar$.html#create(initialValue:Char,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicChar", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Char, padding: PaddingStrategy): AtomicChar", "member" : "monix.execution.atomic.AtomicChar.withPadding", "link" : "monix\/execution\/atomic\/AtomicChar$.html#withPadding(initialValue:Char,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicChar", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Char): AtomicChar", "member" : "monix.execution.atomic.AtomicChar.apply", "link" : "monix\/execution\/atomic\/AtomicChar$.html#apply(initialValue:Char):monix.execution.atomic.AtomicChar", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicChar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicChar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicChar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicChar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicChar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicChar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicChar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicChar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicChar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicChar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicChar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicChar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicChar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicChar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicChar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicChar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicChar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicChar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicChar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicChar.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicDouble", "shortDescription" : "Atomic references wrapping Double values.", "object" : "monix\/execution\/atomic\/AtomicDouble$.html", "members_class" : [{"label" : "getAndDecrement", "tail" : "(v: Int): Double", "member" : "monix.execution.atomic.AtomicDouble.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getAndDecrement(v:Int):Double", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Double", "member" : "monix.execution.atomic.AtomicDouble.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#decrementAndGet(v:Int):Double", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicDouble.decrement", "link" : "monix\/execution\/atomic\/AtomicDouble.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Double): Double", "member" : "monix.execution.atomic.AtomicDouble.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getAndSubtract(v:Double):Double", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Double): Double", "member" : "monix.execution.atomic.AtomicDouble.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#subtractAndGet(v:Double):Double", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Double): Unit", "member" : "monix.execution.atomic.AtomicDouble.subtract", "link" : "monix\/execution\/atomic\/AtomicDouble.html#subtract(v:Double):Unit", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Double): Double", "member" : "monix.execution.atomic.AtomicDouble.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getAndAdd(v:Double):Double", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Double", "member" : "monix.execution.atomic.AtomicDouble.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getAndIncrement(v:Int):Double", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Double): Double", "member" : "monix.execution.atomic.AtomicDouble.addAndGet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#addAndGet(v:Double):Double", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Double", "member" : "monix.execution.atomic.AtomicDouble.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#incrementAndGet(v:Int):Double", "kind" : "def"}, {"label" : "add", "tail" : "(v: Double): Unit", "member" : "monix.execution.atomic.AtomicDouble.add", "link" : "monix\/execution\/atomic\/AtomicDouble.html#add(v:Double):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicDouble.increment", "link" : "monix\/execution\/atomic\/AtomicDouble.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Double): Double", "member" : "monix.execution.atomic.AtomicDouble.getAndSet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getAndSet(update:Double):Double", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Double, update: Double): Boolean", "member" : "monix.execution.atomic.AtomicDouble.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#compareAndSet(expect:Double,update:Double):Boolean", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Double): Unit", "member" : "monix.execution.atomic.AtomicDouble.lazySet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#lazySet(update:Double):Unit", "kind" : "def"}, {"label" : "set", "tail" : "(update: Double): Unit", "member" : "monix.execution.atomic.AtomicDouble.set", "link" : "monix\/execution\/atomic\/AtomicDouble.html#set(update:Double):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Double", "member" : "monix.execution.atomic.AtomicDouble.get", "link" : "monix\/execution\/atomic\/AtomicDouble.html#get:Double", "kind" : "def"}, {"label" : "ref", "tail" : ": BoxedLong", "member" : "monix.execution.atomic.AtomicDouble.ref", "link" : "monix\/execution\/atomic\/AtomicDouble.html#ref:monix.execution.internals.atomic.BoxedLong", "kind" : "val"}, {"label" : "+=", "tail" : "(value: Double): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicDouble.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Double): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicDouble.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Double) â‡’ Double): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicDouble.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Double) â‡’ Double): Double", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Double) â‡’ Double): Double", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicDouble.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Double) â‡’ (U, Double)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicDouble.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Double): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicDouble.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Double): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicDouble.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Double", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicDouble.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicDouble.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicDouble.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicDouble.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicDouble.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicDouble.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicDouble.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicDouble.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicDouble.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicDouble.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicDouble.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicDouble.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicDouble.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicDouble.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicDouble.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicDouble.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicDouble.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicDouble.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicDouble.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicDouble.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Double, padding: PaddingStrategy): AtomicDouble", "member" : "monix.execution.atomic.AtomicDouble.safe", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#safe(initialValue:Double,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicDouble", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Double, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicDouble", "member" : "monix.execution.atomic.AtomicDouble.create", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#create(initialValue:Double,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicDouble", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Double, padding: PaddingStrategy): AtomicDouble", "member" : "monix.execution.atomic.AtomicDouble.withPadding", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#withPadding(initialValue:Double,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicDouble", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Double): AtomicDouble", "member" : "monix.execution.atomic.AtomicDouble.apply", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#apply(initialValue:Double):monix.execution.atomic.AtomicDouble", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicDouble$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicDouble$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicDouble.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicFloat", "shortDescription" : "Atomic references wrapping Float values.", "object" : "monix\/execution\/atomic\/AtomicFloat$.html", "members_class" : [{"label" : "getAndDecrement", "tail" : "(v: Int): Float", "member" : "monix.execution.atomic.AtomicFloat.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getAndDecrement(v:Int):Float", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Float", "member" : "monix.execution.atomic.AtomicFloat.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#decrementAndGet(v:Int):Float", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicFloat.decrement", "link" : "monix\/execution\/atomic\/AtomicFloat.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Float): Float", "member" : "monix.execution.atomic.AtomicFloat.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getAndSubtract(v:Float):Float", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Float): Float", "member" : "monix.execution.atomic.AtomicFloat.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#subtractAndGet(v:Float):Float", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Float): Unit", "member" : "monix.execution.atomic.AtomicFloat.subtract", "link" : "monix\/execution\/atomic\/AtomicFloat.html#subtract(v:Float):Unit", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Float): Float", "member" : "monix.execution.atomic.AtomicFloat.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getAndAdd(v:Float):Float", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Float", "member" : "monix.execution.atomic.AtomicFloat.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getAndIncrement(v:Int):Float", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Float): Float", "member" : "monix.execution.atomic.AtomicFloat.addAndGet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#addAndGet(v:Float):Float", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Float", "member" : "monix.execution.atomic.AtomicFloat.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#incrementAndGet(v:Int):Float", "kind" : "def"}, {"label" : "add", "tail" : "(v: Float): Unit", "member" : "monix.execution.atomic.AtomicFloat.add", "link" : "monix\/execution\/atomic\/AtomicFloat.html#add(v:Float):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicFloat.increment", "link" : "monix\/execution\/atomic\/AtomicFloat.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Float): Float", "member" : "monix.execution.atomic.AtomicFloat.getAndSet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getAndSet(update:Float):Float", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Float, update: Float): Boolean", "member" : "monix.execution.atomic.AtomicFloat.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#compareAndSet(expect:Float,update:Float):Boolean", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Float): Unit", "member" : "monix.execution.atomic.AtomicFloat.lazySet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#lazySet(update:Float):Unit", "kind" : "def"}, {"label" : "set", "tail" : "(update: Float): Unit", "member" : "monix.execution.atomic.AtomicFloat.set", "link" : "monix\/execution\/atomic\/AtomicFloat.html#set(update:Float):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Float", "member" : "monix.execution.atomic.AtomicFloat.get", "link" : "monix\/execution\/atomic\/AtomicFloat.html#get:Float", "kind" : "def"}, {"label" : "+=", "tail" : "(value: Float): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicFloat.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Float): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicFloat.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Float) â‡’ Float): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicFloat.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Float) â‡’ Float): Float", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Float) â‡’ Float): Float", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicFloat.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Float) â‡’ (U, Float)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicFloat.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Float): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicFloat.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Float): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicFloat.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Float", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicFloat.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicFloat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicFloat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicFloat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicFloat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicFloat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicFloat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicFloat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicFloat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicFloat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicFloat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicFloat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicFloat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicFloat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicFloat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicFloat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicFloat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicFloat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicFloat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicFloat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Float, padding: PaddingStrategy): AtomicFloat", "member" : "monix.execution.atomic.AtomicFloat.safe", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#safe(initialValue:Float,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicFloat", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Float, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicFloat", "member" : "monix.execution.atomic.AtomicFloat.create", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#create(initialValue:Float,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicFloat", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Float, padding: PaddingStrategy): AtomicFloat", "member" : "monix.execution.atomic.AtomicFloat.withPadding", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#withPadding(initialValue:Float,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicFloat", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Float): AtomicFloat", "member" : "monix.execution.atomic.AtomicFloat.apply", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#apply(initialValue:Float):monix.execution.atomic.AtomicFloat", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicFloat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicFloat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicFloat.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicInt", "shortDescription" : "Atomic references wrapping Int values.", "object" : "monix\/execution\/atomic\/AtomicInt$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "monix.execution.atomic.AtomicInt.toString", "link" : "monix\/execution\/atomic\/AtomicInt.html#toString():String", "kind" : "def"}, {"label" : "getAndDecrement", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicInt.html#getAndDecrement(v:Int):Int", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicInt.html#decrementAndGet(v:Int):Int", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicInt.decrement", "link" : "monix\/execution\/atomic\/AtomicInt.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicInt.html#subtractAndGet(v:Int):Int", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicInt.html#getAndSubtract(v:Int):Int", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicInt.subtract", "link" : "monix\/execution\/atomic\/AtomicInt.html#subtract(v:Int):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicInt.add", "link" : "monix\/execution\/atomic\/AtomicInt.html#add(v:Int):Unit", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.addAndGet", "link" : "monix\/execution\/atomic\/AtomicInt.html#addAndGet(v:Int):Int", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicInt.html#getAndAdd(v:Int):Int", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicInt.html#getAndIncrement(v:Int):Int", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Int", "member" : "monix.execution.atomic.AtomicInt.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicInt.html#incrementAndGet(v:Int):Int", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicInt.increment", "link" : "monix\/execution\/atomic\/AtomicInt.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Int): Unit", "member" : "monix.execution.atomic.AtomicInt.lazySet", "link" : "monix\/execution\/atomic\/AtomicInt.html#lazySet(update:Int):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Int): Int", "member" : "monix.execution.atomic.AtomicInt.getAndSet", "link" : "monix\/execution\/atomic\/AtomicInt.html#getAndSet(update:Int):Int", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Int, update: Int): Boolean", "member" : "monix.execution.atomic.AtomicInt.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicInt.html#compareAndSet(expect:Int,update:Int):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(update: Int): Unit", "member" : "monix.execution.atomic.AtomicInt.set", "link" : "monix\/execution\/atomic\/AtomicInt.html#set(update:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Int", "member" : "monix.execution.atomic.AtomicInt.get", "link" : "monix\/execution\/atomic\/AtomicInt.html#get:Int", "kind" : "def"}, {"label" : "+=", "tail" : "(value: Int): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicInt.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Int): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicInt.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Int) â‡’ Int): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicInt.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Int) â‡’ Int): Int", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicInt.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Int) â‡’ Int): Int", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicInt.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Int) â‡’ (U, Int)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicInt.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Int): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicInt.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Int): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicInt.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Int", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicInt.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicInt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicInt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicInt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicInt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicInt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicInt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicInt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicInt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicInt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicInt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicInt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicInt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicInt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicInt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicInt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicInt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicInt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicInt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Int, padding: PaddingStrategy): AtomicInt", "member" : "monix.execution.atomic.AtomicInt.safe", "link" : "monix\/execution\/atomic\/AtomicInt$.html#safe(initialValue:Int,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicInt", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Int, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicInt", "member" : "monix.execution.atomic.AtomicInt.create", "link" : "monix\/execution\/atomic\/AtomicInt$.html#create(initialValue:Int,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicInt", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Int, padding: PaddingStrategy): AtomicInt", "member" : "monix.execution.atomic.AtomicInt.withPadding", "link" : "monix\/execution\/atomic\/AtomicInt$.html#withPadding(initialValue:Int,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicInt", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Int): AtomicInt", "member" : "monix.execution.atomic.AtomicInt.apply", "link" : "monix\/execution\/atomic\/AtomicInt$.html#apply(initialValue:Int):monix.execution.atomic.AtomicInt", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicInt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicInt$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicInt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicInt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicInt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicInt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicInt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicInt$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicInt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicInt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicInt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicInt$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicInt$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicInt$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicInt$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicInt$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicInt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicInt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicInt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicInt.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicLong", "shortDescription" : "Atomic references wrapping Long values.", "object" : "monix\/execution\/atomic\/AtomicLong$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "monix.execution.atomic.AtomicLong.toString", "link" : "monix\/execution\/atomic\/AtomicLong.html#toString():String", "kind" : "def"}, {"label" : "getAndDecrement", "tail" : "(v: Int): Long", "member" : "monix.execution.atomic.AtomicLong.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicLong.html#getAndDecrement(v:Int):Long", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Long", "member" : "monix.execution.atomic.AtomicLong.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicLong.html#decrementAndGet(v:Int):Long", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicLong.decrement", "link" : "monix\/execution\/atomic\/AtomicLong.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Long): Long", "member" : "monix.execution.atomic.AtomicLong.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicLong.html#subtractAndGet(v:Long):Long", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Long): Long", "member" : "monix.execution.atomic.AtomicLong.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicLong.html#getAndSubtract(v:Long):Long", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Long): Unit", "member" : "monix.execution.atomic.AtomicLong.subtract", "link" : "monix\/execution\/atomic\/AtomicLong.html#subtract(v:Long):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(v: Long): Unit", "member" : "monix.execution.atomic.AtomicLong.add", "link" : "monix\/execution\/atomic\/AtomicLong.html#add(v:Long):Unit", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Long): Long", "member" : "monix.execution.atomic.AtomicLong.addAndGet", "link" : "monix\/execution\/atomic\/AtomicLong.html#addAndGet(v:Long):Long", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Long): Long", "member" : "monix.execution.atomic.AtomicLong.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicLong.html#getAndAdd(v:Long):Long", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Long", "member" : "monix.execution.atomic.AtomicLong.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicLong.html#getAndIncrement(v:Int):Long", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Long", "member" : "monix.execution.atomic.AtomicLong.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicLong.html#incrementAndGet(v:Int):Long", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicLong.increment", "link" : "monix\/execution\/atomic\/AtomicLong.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Long): Unit", "member" : "monix.execution.atomic.AtomicLong.lazySet", "link" : "monix\/execution\/atomic\/AtomicLong.html#lazySet(update:Long):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Long): Long", "member" : "monix.execution.atomic.AtomicLong.getAndSet", "link" : "monix\/execution\/atomic\/AtomicLong.html#getAndSet(update:Long):Long", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Long, update: Long): Boolean", "member" : "monix.execution.atomic.AtomicLong.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicLong.html#compareAndSet(expect:Long,update:Long):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(update: Long): Unit", "member" : "monix.execution.atomic.AtomicLong.set", "link" : "monix\/execution\/atomic\/AtomicLong.html#set(update:Long):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Long", "member" : "monix.execution.atomic.AtomicLong.get", "link" : "monix\/execution\/atomic\/AtomicLong.html#get:Long", "kind" : "def"}, {"label" : "+=", "tail" : "(value: Long): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicLong.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Long): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicLong.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Long) â‡’ Long): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicLong.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Long) â‡’ Long): Long", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicLong.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Long) â‡’ Long): Long", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicLong.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Long) â‡’ (U, Long)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicLong.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Long): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicLong.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Long): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicLong.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Long", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicLong.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicLong.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicLong.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicLong.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicLong.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicLong.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicLong.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicLong.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicLong.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicLong.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicLong.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicLong.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicLong.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicLong.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicLong.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicLong.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicLong.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicLong.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicLong.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Long, padding: PaddingStrategy): AtomicLong", "member" : "monix.execution.atomic.AtomicLong.safe", "link" : "monix\/execution\/atomic\/AtomicLong$.html#safe(initialValue:Long,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicLong", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Long, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicLong", "member" : "monix.execution.atomic.AtomicLong.create", "link" : "monix\/execution\/atomic\/AtomicLong$.html#create(initialValue:Long,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicLong", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Long, padding: PaddingStrategy): AtomicLong", "member" : "monix.execution.atomic.AtomicLong.withPadding", "link" : "monix\/execution\/atomic\/AtomicLong$.html#withPadding(initialValue:Long,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicLong", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Long): AtomicLong", "member" : "monix.execution.atomic.AtomicLong.apply", "link" : "monix\/execution\/atomic\/AtomicLong$.html#apply(initialValue:Long):monix.execution.atomic.AtomicLong", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicLong$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicLong$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicLong$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicLong$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicLong$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicLong$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicLong$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicLong$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicLong$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicLong$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicLong$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicLong$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicLong$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicLong$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicLong$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicLong$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicLong$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicLong$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicLong$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicLong.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicNumber", "shortDescription" : "Represents an Atomic reference holding a number, providing helpersfor easily incrementing and decrementing it.", "members_class" : [{"label" : "+=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicNumber.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicNumber.html#-=(value:T):Unit", "kind" : "final macro def"}, {"member" : "monix.execution.atomic.AtomicNumber#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : "(cb: (T) â‡’ T): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicNumber.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (T) â‡’ T): T", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (T) â‡’ T): T", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (T) â‡’ (U, T)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicNumber.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicNumber.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicNumber.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): T", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicNumber.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicNumber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicNumber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicNumber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicNumber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicNumber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicNumber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicNumber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicNumber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicNumber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicNumber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicNumber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicNumber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicNumber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicNumber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicNumber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getAndSubtract", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumber.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getAndSubtract(v:T):T", "kind" : "abstract def"}, {"label" : "getAndDecrement", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumber.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getAndDecrement(v:Int):T", "kind" : "abstract def"}, {"label" : "getAndAdd", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumber.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getAndAdd(v:T):T", "kind" : "abstract def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumber.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getAndIncrement(v:Int):T", "kind" : "abstract def"}, {"label" : "subtractAndGet", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumber.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#subtractAndGet(v:T):T", "kind" : "abstract def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumber.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#decrementAndGet(v:Int):T", "kind" : "abstract def"}, {"label" : "addAndGet", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumber.addAndGet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#addAndGet(v:T):T", "kind" : "abstract def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumber.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#incrementAndGet(v:Int):T", "kind" : "abstract def"}, {"label" : "subtract", "tail" : "(v: T): Unit", "member" : "monix.execution.atomic.AtomicNumber.subtract", "link" : "monix\/execution\/atomic\/AtomicNumber.html#subtract(v:T):Unit", "kind" : "abstract def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicNumber.decrement", "link" : "monix\/execution\/atomic\/AtomicNumber.html#decrement(v:Int):Unit", "kind" : "abstract def"}, {"label" : "add", "tail" : "(v: T): Unit", "member" : "monix.execution.atomic.AtomicNumber.add", "link" : "monix\/execution\/atomic\/AtomicNumber.html#add(v:T):Unit", "kind" : "abstract def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicNumber.increment", "link" : "monix\/execution\/atomic\/AtomicNumber.html#increment(v:Int):Unit", "kind" : "abstract def"}, {"label" : "lazySet", "tail" : "(update: T): Unit", "member" : "monix.execution.atomic.Atomic.lazySet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#lazySet(update:A):Unit", "kind" : "abstract def"}, {"label" : "getAndSet", "tail" : "(update: T): T", "member" : "monix.execution.atomic.Atomic.getAndSet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#getAndSet(update:A):A", "kind" : "abstract def"}, {"label" : "compareAndSet", "tail" : "(expect: T, update: T): Boolean", "member" : "monix.execution.atomic.Atomic.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicNumber.html#compareAndSet(expect:A,update:A):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(update: T): Unit", "member" : "monix.execution.atomic.Atomic.set", "link" : "monix\/execution\/atomic\/AtomicNumber.html#set(update:A):Unit", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): T", "member" : "monix.execution.atomic.Atomic.get", "link" : "monix\/execution\/atomic\/AtomicNumber.html#get:A", "kind" : "abstract def"}], "class" : "monix\/execution\/atomic\/AtomicNumber.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicNumberAny", "shortDescription" : "Atomic references wrapping any values implementingScala's Numeric type-class.", "object" : "monix\/execution\/atomic\/AtomicNumberAny$.html", "members_class" : [{"label" : "getAndDecrement", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumberAny.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getAndDecrement(v:Int):T", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumberAny.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#decrementAndGet(v:Int):T", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicNumberAny.decrement", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumberAny.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#subtractAndGet(v:T):T", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumberAny.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getAndSubtract(v:T):T", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: T): Unit", "member" : "monix.execution.atomic.AtomicNumberAny.subtract", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#subtract(v:T):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(v: T): Unit", "member" : "monix.execution.atomic.AtomicNumberAny.add", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#add(v:T):Unit", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumberAny.addAndGet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#addAndGet(v:T):T", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: T): T", "member" : "monix.execution.atomic.AtomicNumberAny.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getAndAdd(v:T):T", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumberAny.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getAndIncrement(v:Int):T", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): T", "member" : "monix.execution.atomic.AtomicNumberAny.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#incrementAndGet(v:Int):T", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicNumberAny.increment", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: T): Unit", "member" : "monix.execution.atomic.AtomicNumberAny.lazySet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#lazySet(update:T):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: T): T", "member" : "monix.execution.atomic.AtomicNumberAny.getAndSet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getAndSet(update:T):T", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: T, update: T): Boolean", "member" : "monix.execution.atomic.AtomicNumberAny.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#compareAndSet(expect:T,update:T):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(update: T): Unit", "member" : "monix.execution.atomic.AtomicNumberAny.set", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#set(update:T):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): T", "member" : "monix.execution.atomic.AtomicNumberAny.get", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#get:T", "kind" : "def"}, {"label" : "+=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (T) â‡’ T): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (T) â‡’ T): T", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (T) â‡’ T): T", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (T) â‡’ (U, T)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: T): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): T", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicNumberAny.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: A, padding: PaddingStrategy)(arg0: Numeric[A]): AtomicNumberAny[A]", "member" : "monix.execution.atomic.AtomicNumberAny.safe", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#safe[A<:AnyRef](initialValue:A,padding:monix.execution.atomic.PaddingStrategy)(implicitevidence$5:Numeric[A]):monix.execution.atomic.AtomicNumberAny[A]", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: A, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean)(arg0: Numeric[A]): AtomicNumberAny[A]", "member" : "monix.execution.atomic.AtomicNumberAny.create", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#create[A<:AnyRef](initialValue:A,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean)(implicitevidence$4:Numeric[A]):monix.execution.atomic.AtomicNumberAny[A]", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: A, padding: PaddingStrategy)(arg0: Numeric[A]): AtomicNumberAny[A]", "member" : "monix.execution.atomic.AtomicNumberAny.withPadding", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#withPadding[A<:AnyRef](initialValue:A,padding:monix.execution.atomic.PaddingStrategy)(implicitevidence$3:Numeric[A]):monix.execution.atomic.AtomicNumberAny[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: A)(arg0: Numeric[A]): AtomicNumberAny[A]", "member" : "monix.execution.atomic.AtomicNumberAny.apply", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#apply[A<:AnyRef](initialValue:A)(implicitevidence$2:Numeric[A]):monix.execution.atomic.AtomicNumberAny[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicNumberAny$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicNumberAny.html", "kind" : "class"}, {"name" : "monix.execution.atomic.AtomicShort", "shortDescription" : "Atomic references wrapping Short values.", "object" : "monix\/execution\/atomic\/AtomicShort$.html", "members_class" : [{"label" : "getAndDecrement", "tail" : "(v: Int): Short", "member" : "monix.execution.atomic.AtomicShort.getAndDecrement", "link" : "monix\/execution\/atomic\/AtomicShort.html#getAndDecrement(v:Int):Short", "kind" : "def"}, {"label" : "decrementAndGet", "tail" : "(v: Int): Short", "member" : "monix.execution.atomic.AtomicShort.decrementAndGet", "link" : "monix\/execution\/atomic\/AtomicShort.html#decrementAndGet(v:Int):Short", "kind" : "def"}, {"label" : "decrement", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicShort.decrement", "link" : "monix\/execution\/atomic\/AtomicShort.html#decrement(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSubtract", "tail" : "(v: Short): Short", "member" : "monix.execution.atomic.AtomicShort.getAndSubtract", "link" : "monix\/execution\/atomic\/AtomicShort.html#getAndSubtract(v:Short):Short", "kind" : "def"}, {"label" : "subtractAndGet", "tail" : "(v: Short): Short", "member" : "monix.execution.atomic.AtomicShort.subtractAndGet", "link" : "monix\/execution\/atomic\/AtomicShort.html#subtractAndGet(v:Short):Short", "kind" : "def"}, {"label" : "subtract", "tail" : "(v: Short): Unit", "member" : "monix.execution.atomic.AtomicShort.subtract", "link" : "monix\/execution\/atomic\/AtomicShort.html#subtract(v:Short):Unit", "kind" : "def"}, {"label" : "getAndAdd", "tail" : "(v: Short): Short", "member" : "monix.execution.atomic.AtomicShort.getAndAdd", "link" : "monix\/execution\/atomic\/AtomicShort.html#getAndAdd(v:Short):Short", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(v: Int): Short", "member" : "monix.execution.atomic.AtomicShort.getAndIncrement", "link" : "monix\/execution\/atomic\/AtomicShort.html#getAndIncrement(v:Int):Short", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(v: Short): Short", "member" : "monix.execution.atomic.AtomicShort.addAndGet", "link" : "monix\/execution\/atomic\/AtomicShort.html#addAndGet(v:Short):Short", "kind" : "def"}, {"label" : "incrementAndGet", "tail" : "(v: Int): Short", "member" : "monix.execution.atomic.AtomicShort.incrementAndGet", "link" : "monix\/execution\/atomic\/AtomicShort.html#incrementAndGet(v:Int):Short", "kind" : "def"}, {"label" : "add", "tail" : "(v: Short): Unit", "member" : "monix.execution.atomic.AtomicShort.add", "link" : "monix\/execution\/atomic\/AtomicShort.html#add(v:Short):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(v: Int): Unit", "member" : "monix.execution.atomic.AtomicShort.increment", "link" : "monix\/execution\/atomic\/AtomicShort.html#increment(v:Int):Unit", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(update: Short): Short", "member" : "monix.execution.atomic.AtomicShort.getAndSet", "link" : "monix\/execution\/atomic\/AtomicShort.html#getAndSet(update:Short):Short", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(expect: Short, update: Short): Boolean", "member" : "monix.execution.atomic.AtomicShort.compareAndSet", "link" : "monix\/execution\/atomic\/AtomicShort.html#compareAndSet(expect:Short,update:Short):Boolean", "kind" : "def"}, {"label" : "lazySet", "tail" : "(update: Short): Unit", "member" : "monix.execution.atomic.AtomicShort.lazySet", "link" : "monix\/execution\/atomic\/AtomicShort.html#lazySet(update:Short):Unit", "kind" : "def"}, {"label" : "set", "tail" : "(update: Short): Unit", "member" : "monix.execution.atomic.AtomicShort.set", "link" : "monix\/execution\/atomic\/AtomicShort.html#set(update:Short):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): Short", "member" : "monix.execution.atomic.AtomicShort.get", "link" : "monix\/execution\/atomic\/AtomicShort.html#get:Short", "kind" : "def"}, {"label" : "+=", "tail" : "(value: Short): Unit", "member" : "monix.execution.atomic.AtomicNumber.+=", "link" : "monix\/execution\/atomic\/AtomicShort.html#+=(value:T):Unit", "kind" : "final macro def"}, {"label" : "-=", "tail" : "(value: Short): Unit", "member" : "monix.execution.atomic.AtomicNumber.-=", "link" : "monix\/execution\/atomic\/AtomicShort.html#-=(value:T):Unit", "kind" : "final macro def"}, {"label" : "transform", "tail" : "(cb: (Short) â‡’ Short): Unit", "member" : "monix.execution.atomic.Atomic.transform", "link" : "monix\/execution\/atomic\/AtomicShort.html#transform(cb:A=>A):Unit", "kind" : "final macro def"}, {"label" : "getAndTransform", "tail" : "(cb: (Short) â‡’ Short): Short", "member" : "monix.execution.atomic.Atomic.getAndTransform", "link" : "monix\/execution\/atomic\/AtomicShort.html#getAndTransform(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndGet", "tail" : "(cb: (Short) â‡’ Short): Short", "member" : "monix.execution.atomic.Atomic.transformAndGet", "link" : "monix\/execution\/atomic\/AtomicShort.html#transformAndGet(cb:A=>A):A", "kind" : "final macro def"}, {"label" : "transformAndExtract", "tail" : "(cb: (Short) â‡’ (U, Short)): U", "member" : "monix.execution.atomic.Atomic.transformAndExtract", "link" : "monix\/execution\/atomic\/AtomicShort.html#transformAndExtract[U](cb:A=>(U,A)):U", "kind" : "final macro def"}, {"label" : ":=", "tail" : "(value: Short): Unit", "member" : "monix.execution.atomic.Atomic.:=", "link" : "monix\/execution\/atomic\/AtomicShort.html#:=(value:A):Unit", "kind" : "final macro def"}, {"label" : "update", "tail" : "(value: Short): Unit", "member" : "monix.execution.atomic.Atomic.update", "link" : "monix\/execution\/atomic\/AtomicShort.html#update(value:A):Unit", "kind" : "final macro def"}, {"label" : "apply", "tail" : "(): Short", "member" : "monix.execution.atomic.Atomic.apply", "link" : "monix\/execution\/atomic\/AtomicShort.html#apply():A", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicShort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicShort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicShort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicShort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicShort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicShort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicShort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicShort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicShort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicShort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicShort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicShort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicShort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicShort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicShort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicShort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicShort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicShort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicShort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "safe", "tail" : "(initialValue: Short, padding: PaddingStrategy): AtomicShort", "member" : "monix.execution.atomic.AtomicShort.safe", "link" : "monix\/execution\/atomic\/AtomicShort$.html#safe(initialValue:Short,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicShort", "kind" : "def"}, {"label" : "create", "tail" : "(initialValue: Short, padding: PaddingStrategy, allowPlatformIntrinsics: Boolean): AtomicShort", "member" : "monix.execution.atomic.AtomicShort.create", "link" : "monix\/execution\/atomic\/AtomicShort$.html#create(initialValue:Short,padding:monix.execution.atomic.PaddingStrategy,allowPlatformIntrinsics:Boolean):monix.execution.atomic.AtomicShort", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initialValue: Short, padding: PaddingStrategy): AtomicShort", "member" : "monix.execution.atomic.AtomicShort.withPadding", "link" : "monix\/execution\/atomic\/AtomicShort$.html#withPadding(initialValue:Short,padding:monix.execution.atomic.PaddingStrategy):monix.execution.atomic.AtomicShort", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Short): AtomicShort", "member" : "monix.execution.atomic.AtomicShort.apply", "link" : "monix\/execution\/atomic\/AtomicShort$.html#apply(initialValue:Short):monix.execution.atomic.AtomicShort", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/AtomicShort$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/AtomicShort$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/AtomicShort$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/AtomicShort$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/AtomicShort$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/AtomicShort$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/AtomicShort$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicShort$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicShort$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/AtomicShort$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/AtomicShort$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/AtomicShort$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/AtomicShort$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/AtomicShort$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/AtomicShort$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/AtomicShort$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/AtomicShort$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/AtomicShort$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/AtomicShort$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/AtomicShort.html", "kind" : "class"}, {"name" : "monix.execution.atomic.PaddingStrategy", "shortDescription" : "For applying padding to atomic references, in order to reducecache contention.", "object" : "monix\/execution\/atomic\/PaddingStrategy$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/PaddingStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/PaddingStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LeftRight256", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.LeftRight256", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#LeftRight256", "kind" : "object"}, {"label" : "Right128", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.Right128", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#Right128", "kind" : "object"}, {"label" : "Left128", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.Left128", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#Left128", "kind" : "object"}, {"label" : "LeftRight128", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.LeftRight128", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#LeftRight128", "kind" : "object"}, {"label" : "Right64", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.Right64", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#Right64", "kind" : "object"}, {"label" : "Left64", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.Left64", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#Left64", "kind" : "object"}, {"label" : "NoPadding", "tail" : "", "member" : "monix.execution.atomic.PaddingStrategy.NoPadding", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#NoPadding", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/atomic\/PaddingStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/atomic\/PaddingStrategy.html", "kind" : "class"}], "monix.execution.exceptions" : [{"name" : "monix.execution.exceptions.APIContractViolationException", "shortDescription" : "Generic exception thrown on API contract violations.", "object" : "monix\/execution\/exceptions\/APIContractViolationException$.html", "members_class" : [{"member" : "monix.execution.exceptions.APIContractViolationException#<init>", "error" : "unsupported entity"}, {"member" : "monix.execution.exceptions.APIContractViolationException#<init>", "error" : "unsupported entity"}, {"member" : "monix.execution.exceptions.APIContractViolationException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "monix.execution.exceptions.APIContractViolationException.message", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/APIContractViolationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(message: String): APIContractViolationException", "member" : "monix.execution.exceptions.APIContractViolationException.apply", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#apply(message:String):monix.execution.exceptions.APIContractViolationException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (APIContractViolationException) â‡’ A): (String) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ String): (A) â‡’ APIContractViolationException", "member" : "scala.Function1.compose", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/APIContractViolationException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/exceptions\/APIContractViolationException.html", "kind" : "class"}, {"name" : "monix.execution.exceptions.BufferOverflowException", "shortDescription" : "An exception emitted on buffer overflows, like when usingOverflowStrategy.Fail.", "object" : "monix\/execution\/exceptions\/BufferOverflowException$.html", "members_class" : [{"member" : "monix.execution.exceptions.BufferOverflowException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "monix.execution.exceptions.BufferOverflowException.message", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/BufferOverflowException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(message: String): BufferOverflowException", "member" : "monix.execution.exceptions.BufferOverflowException.apply", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#apply(message:String):monix.execution.exceptions.BufferOverflowException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (BufferOverflowException) â‡’ A): (String) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ String): (A) â‡’ BufferOverflowException", "member" : "scala.Function1.compose", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/BufferOverflowException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/exceptions\/BufferOverflowException.html", "kind" : "class"}, {"name" : "monix.execution.exceptions.CompositeException", "shortDescription" : "A composite exception represents a list of exceptionsthat were caught while delaying errors.", "object" : "monix\/execution\/exceptions\/CompositeException$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "monix.execution.exceptions.CompositeException.toString", "link" : "monix\/execution\/exceptions\/CompositeException.html#toString():String", "kind" : "def"}, {"member" : "monix.execution.exceptions.CompositeException#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": Seq[Throwable]", "member" : "monix.execution.exceptions.CompositeException.errors", "link" : "monix\/execution\/exceptions\/CompositeException.html#errors:Seq[Throwable]", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/CompositeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/CompositeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/CompositeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/CompositeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/CompositeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/CompositeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/CompositeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/CompositeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/CompositeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/CompositeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/CompositeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/CompositeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/CompositeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/CompositeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/CompositeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/CompositeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/CompositeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/CompositeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/CompositeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/CompositeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/CompositeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/CompositeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/CompositeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/CompositeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/CompositeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/CompositeException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/CompositeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/CompositeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/CompositeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/CompositeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ref: CompositeException): Option[Seq[Throwable]]", "member" : "monix.execution.exceptions.CompositeException.unapply", "link" : "monix\/execution\/exceptions\/CompositeException$.html#unapply(ref:monix.execution.exceptions.CompositeException):Option[Seq[Throwable]]", "kind" : "def"}, {"label" : "apply", "tail" : "(errors: Seq[Throwable]): CompositeException", "member" : "monix.execution.exceptions.CompositeException.apply", "link" : "monix\/execution\/exceptions\/CompositeException$.html#apply(errors:Seq[Throwable]):monix.execution.exceptions.CompositeException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/execution\/exceptions\/CompositeException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (CompositeException) â‡’ A): (Seq[Throwable]) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/execution\/exceptions\/CompositeException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Seq[Throwable]): (A) â‡’ CompositeException", "member" : "scala.Function1.compose", "link" : "monix\/execution\/exceptions\/CompositeException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/CompositeException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/CompositeException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/CompositeException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/CompositeException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/CompositeException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/CompositeException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/CompositeException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/CompositeException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/CompositeException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/CompositeException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/CompositeException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/CompositeException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/CompositeException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/CompositeException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/CompositeException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/CompositeException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/CompositeException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/CompositeException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/exceptions\/CompositeException.html", "kind" : "class"}, {"name" : "monix.execution.exceptions.DownstreamTimeoutException", "shortDescription" : "Exception thrown whenever a downstream listener on aback-pressured data-source is taking too long to processa received event.", "object" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html", "members_class" : [{"member" : "monix.execution.exceptions.DownstreamTimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "timeout", "tail" : ": FiniteDuration", "member" : "monix.execution.exceptions.DownstreamTimeoutException.timeout", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#timeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ex: DownstreamTimeoutException): Option[FiniteDuration]", "member" : "monix.execution.exceptions.DownstreamTimeoutException.unapply", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#unapply(ex:monix.execution.exceptions.DownstreamTimeoutException):Option[scala.concurrent.duration.FiniteDuration]", "kind" : "def"}, {"label" : "apply", "tail" : "(timeout: FiniteDuration): DownstreamTimeoutException", "member" : "monix.execution.exceptions.DownstreamTimeoutException.apply", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#apply(timeout:scala.concurrent.duration.FiniteDuration):monix.execution.exceptions.DownstreamTimeoutException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (DownstreamTimeoutException) â‡’ A): (FiniteDuration) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ FiniteDuration): (A) â‡’ DownstreamTimeoutException", "member" : "scala.Function1.compose", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/DownstreamTimeoutException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/exceptions\/DownstreamTimeoutException.html", "kind" : "class"}, {"name" : "monix.execution.exceptions.DummyException", "shortDescription" : "Used in testing to trigger dummy exceptions.", "members_case class" : [{"member" : "monix.execution.exceptions.DummyException#<init>", "error" : "unsupported entity"}, {"member" : "monix.execution.exceptions.DummyException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "monix.execution.exceptions.DummyException.message", "link" : "monix\/execution\/exceptions\/DummyException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/DummyException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/DummyException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/DummyException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/DummyException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/DummyException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/DummyException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/DummyException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/DummyException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/execution\/exceptions\/DummyException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/DummyException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/DummyException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/DummyException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/DummyException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/DummyException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/DummyException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/DummyException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/DummyException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/DummyException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/DummyException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/DummyException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DummyException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DummyException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/DummyException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/DummyException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/DummyException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/DummyException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/DummyException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/DummyException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/DummyException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "monix\/execution\/exceptions\/DummyException.html", "kind" : "case class"}, {"name" : "monix.execution.exceptions.ExecutionRejectedException", "shortDescription" : "Exception thrown whenever an execution attempt was rejected.", "object" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html", "members_class" : [{"member" : "monix.execution.exceptions.ExecutionRejectedException#<init>", "error" : "unsupported entity"}, {"member" : "monix.execution.exceptions.ExecutionRejectedException#<init>", "error" : "unsupported entity"}, {"member" : "monix.execution.exceptions.ExecutionRejectedException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "monix.execution.exceptions.ExecutionRejectedException.message", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(message: String): ExecutionRejectedException", "member" : "monix.execution.exceptions.ExecutionRejectedException.apply", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#apply(message:String):monix.execution.exceptions.ExecutionRejectedException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (ExecutionRejectedException) â‡’ A): (String) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ String): (A) â‡’ ExecutionRejectedException", "member" : "scala.Function1.compose", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/ExecutionRejectedException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/exceptions\/ExecutionRejectedException.html", "kind" : "class"}, {"name" : "monix.execution.exceptions.UpstreamTimeoutException", "shortDescription" : "Exception thrown whenever a upstream listener on aback-pressured data-source is taking too long to processa received event.", "object" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html", "members_class" : [{"member" : "monix.execution.exceptions.UpstreamTimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "timeout", "tail" : ": FiniteDuration", "member" : "monix.execution.exceptions.UpstreamTimeoutException.timeout", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#timeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ex: UpstreamTimeoutException): Option[FiniteDuration]", "member" : "monix.execution.exceptions.UpstreamTimeoutException.unapply", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#unapply(ex:monix.execution.exceptions.UpstreamTimeoutException):Option[scala.concurrent.duration.FiniteDuration]", "kind" : "def"}, {"label" : "apply", "tail" : "(timeout: FiniteDuration): UpstreamTimeoutException", "member" : "monix.execution.exceptions.UpstreamTimeoutException.apply", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#apply(timeout:scala.concurrent.duration.FiniteDuration):monix.execution.exceptions.UpstreamTimeoutException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (UpstreamTimeoutException) â‡’ A): (FiniteDuration) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ FiniteDuration): (A) â‡’ UpstreamTimeoutException", "member" : "scala.Function1.compose", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/exceptions\/UpstreamTimeoutException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/exceptions\/UpstreamTimeoutException.html", "kind" : "class"}], "monix.execution.misc" : [{"name" : "monix.execution.misc.AsyncQueue", "shortDescription" : "And asynchronous queue implementation.", "object" : "monix\/execution\/misc\/AsyncQueue$.html", "members_class" : [{"label" : "clearAndOffer", "tail" : "(elem: T): Unit", "member" : "monix.execution.misc.AsyncQueue.clearAndOffer", "link" : "monix\/execution\/misc\/AsyncQueue.html#clearAndOffer(elem:T):Unit", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "monix.execution.misc.AsyncQueue.clear", "link" : "monix\/execution\/misc\/AsyncQueue.html#clear():Unit", "kind" : "def"}, {"label" : "offer", "tail" : "(elem: T): Unit", "member" : "monix.execution.misc.AsyncQueue.offer", "link" : "monix\/execution\/misc\/AsyncQueue.html#offer(elem:T):Unit", "kind" : "def"}, {"label" : "poll", "tail" : "(): Future[T]", "member" : "monix.execution.misc.AsyncQueue.poll", "link" : "monix\/execution\/misc\/AsyncQueue.html#poll():scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/AsyncQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/AsyncQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/AsyncQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/AsyncQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/AsyncQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/AsyncQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/AsyncQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/AsyncQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/AsyncQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/AsyncQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/AsyncQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/AsyncQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/AsyncQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/AsyncQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/AsyncQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/AsyncQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "from", "tail" : "(queue: Queue[T]): AsyncQueue[T]", "member" : "monix.execution.misc.AsyncQueue.from", "link" : "monix\/execution\/misc\/AsyncQueue$.html#from[T](queue:scala.collection.immutable.Queue[T]):monix.execution.misc.AsyncQueue[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): AsyncQueue[T]", "member" : "monix.execution.misc.AsyncQueue.empty", "link" : "monix\/execution\/misc\/AsyncQueue$.html#empty[T]:monix.execution.misc.AsyncQueue[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: T*): AsyncQueue[T]", "member" : "monix.execution.misc.AsyncQueue.apply", "link" : "monix\/execution\/misc\/AsyncQueue$.html#apply[T](elems:T*):monix.execution.misc.AsyncQueue[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/AsyncQueue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/AsyncQueue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/AsyncQueue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/AsyncQueue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/AsyncQueue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/AsyncQueue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/AsyncQueue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncQueue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncQueue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncQueue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/AsyncQueue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/AsyncQueue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/AsyncQueue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/AsyncQueue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/AsyncQueue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/AsyncQueue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/AsyncQueue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/AsyncQueue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/AsyncQueue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/misc\/AsyncQueue.html", "kind" : "class"}, {"name" : "monix.execution.misc.AsyncSemaphore", "shortDescription" : "The AsyncSemaphore is an asynchronous semaphore implementation thatlimits the parallelism on Future execution.", "object" : "monix\/execution\/misc\/AsyncSemaphore$.html", "members_class" : [{"label" : "awaitAllReleased", "tail" : "(): Future[Unit]", "member" : "monix.execution.misc.AsyncSemaphore.awaitAllReleased", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#awaitAllReleased():scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "monix.execution.misc.AsyncSemaphore.release", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#release():Unit", "kind" : "def"}, {"label" : "acquire", "tail" : "(): CancelableFuture[Unit]", "member" : "monix.execution.misc.AsyncSemaphore.acquire", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#acquire():monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "greenLight", "tail" : "(f: () â‡’ Future[A])(ec: ExecutionContext): Future[A]", "member" : "monix.execution.misc.AsyncSemaphore.greenLight", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#greenLight[A](f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "activeCount", "tail" : "(): Int", "member" : "monix.execution.misc.AsyncSemaphore.activeCount", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#activeCount:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/AsyncSemaphore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/AsyncSemaphore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(maxParallelism: Int): AsyncSemaphore", "member" : "monix.execution.misc.AsyncSemaphore.apply", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#apply(maxParallelism:Int):monix.execution.misc.AsyncSemaphore", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/AsyncSemaphore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/misc\/AsyncSemaphore.html", "kind" : "class"}, {"name" : "monix.execution.misc.AsyncVar", "shortDescription" : "Asynchronous mutable location, that is either empty or containsa value of type A.", "object" : "monix\/execution\/misc\/AsyncVar$.html", "members_class" : [{"label" : "unsafeRead", "tail" : "(await: Listener[A]): A", "member" : "monix.execution.misc.AsyncVar.unsafeRead", "link" : "monix\/execution\/misc\/AsyncVar.html#unsafeRead(await:monix.execution.Listener[A]):A", "kind" : "def"}, {"label" : "read", "tail" : "(): Future[A]", "member" : "monix.execution.misc.AsyncVar.read", "link" : "monix\/execution\/misc\/AsyncVar.html#read:scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "unsafeTake", "tail" : "(await: Listener[A]): A", "member" : "monix.execution.misc.AsyncVar.unsafeTake", "link" : "monix\/execution\/misc\/AsyncVar.html#unsafeTake(await:monix.execution.Listener[A]):A", "kind" : "def"}, {"label" : "take", "tail" : "(): Future[A]", "member" : "monix.execution.misc.AsyncVar.take", "link" : "monix\/execution\/misc\/AsyncVar.html#take:scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "unsafePut", "tail" : "(a: A, await: Listener[Unit]): Boolean", "member" : "monix.execution.misc.AsyncVar.unsafePut", "link" : "monix\/execution\/misc\/AsyncVar.html#unsafePut(a:A,await:monix.execution.Listener[Unit]):Boolean", "kind" : "def"}, {"label" : "put", "tail" : "(a: A): Future[Unit]", "member" : "monix.execution.misc.AsyncVar.put", "link" : "monix\/execution\/misc\/AsyncVar.html#put(a:A):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/AsyncVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/AsyncVar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/AsyncVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/AsyncVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/AsyncVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/AsyncVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/AsyncVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/AsyncVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/AsyncVar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/AsyncVar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/AsyncVar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/AsyncVar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/AsyncVar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/AsyncVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/AsyncVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/AsyncVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "withPadding", "tail" : "(ps: PaddingStrategy): AsyncVar[A]", "member" : "monix.execution.misc.AsyncVar.withPadding", "link" : "monix\/execution\/misc\/AsyncVar$.html#withPadding[A](ps:monix.execution.atomic.PaddingStrategy):monix.execution.misc.AsyncVar[A]", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initial: A, ps: PaddingStrategy): AsyncVar[A]", "member" : "monix.execution.misc.AsyncVar.withPadding", "link" : "monix\/execution\/misc\/AsyncVar$.html#withPadding[A](initial:A,ps:monix.execution.atomic.PaddingStrategy):monix.execution.misc.AsyncVar[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): AsyncVar[A]", "member" : "monix.execution.misc.AsyncVar.empty", "link" : "monix\/execution\/misc\/AsyncVar$.html#empty[A]:monix.execution.misc.AsyncVar[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(initial: A): AsyncVar[A]", "member" : "monix.execution.misc.AsyncVar.apply", "link" : "monix\/execution\/misc\/AsyncVar$.html#apply[A](initial:A):monix.execution.misc.AsyncVar[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/AsyncVar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/AsyncVar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/AsyncVar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/AsyncVar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/AsyncVar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/AsyncVar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/AsyncVar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncVar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncVar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/AsyncVar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/AsyncVar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/AsyncVar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/AsyncVar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/AsyncVar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/AsyncVar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/AsyncVar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/AsyncVar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/AsyncVar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/AsyncVar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/misc\/AsyncVar.html", "kind" : "class"}, {"name" : "monix.execution.misc.HygieneUtilMacros", "members_trait" : [{"label" : "util", "tail" : "", "member" : "monix.execution.misc.HygieneUtilMacros.util", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#util", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "c", "tail" : ": Context", "member" : "monix.execution.misc.HygieneUtilMacros.c", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "abstract val"}], "shortDescription" : "Utilities for macro-hygiene.", "trait" : "monix\/execution\/misc\/HygieneUtilMacros.html", "kind" : "trait"}, {"name" : "monix.execution.misc.InlineMacros", "members_trait" : [{"label" : "stripUnApplyNodes", "tail" : "(): scala.reflect.macros.Universe.Transformer", "member" : "monix.execution.misc.InlineMacros.stripUnApplyNodes", "link" : "monix\/execution\/misc\/InlineMacros.html#stripUnApplyNodes():InlineMacros.this.c.universe.Transformer", "kind" : "def"}, {"label" : "inlineApplyRecursive", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.misc.InlineMacros.inlineApplyRecursive", "link" : "monix\/execution\/misc\/InlineMacros.html#inlineApplyRecursive(tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "resetTree", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.misc.InlineMacros.resetTree", "link" : "monix\/execution\/misc\/InlineMacros.html#resetTree(tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "inlineAndResetTree", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.misc.InlineMacros.inlineAndResetTree", "link" : "monix\/execution\/misc\/InlineMacros.html#inlineAndResetTree(tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "inlineAndReset", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.whitebox.Context.Expr[T]", "member" : "monix.execution.misc.InlineMacros.inlineAndReset", "link" : "monix\/execution\/misc\/InlineMacros.html#inlineAndReset[T](tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.Expr[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/InlineMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/InlineMacros.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/InlineMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/InlineMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/InlineMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/InlineMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/InlineMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/InlineMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/InlineMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/InlineMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/InlineMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/InlineMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/InlineMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/InlineMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/InlineMacros.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/InlineMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/InlineMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/InlineMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/InlineMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "c", "tail" : ": Context", "member" : "monix.execution.misc.InlineMacros.c", "link" : "monix\/execution\/misc\/InlineMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "monix\/execution\/misc\/InlineMacros.html", "kind" : "trait"}, {"name" : "monix.execution.misc.ThreadLocal", "shortDescription" : "Cross-platform equivalent for java.lang.ThreadLocal,for specifying thread-local variables.", "object" : "monix\/execution\/misc\/ThreadLocal$.html", "members_class" : [{"label" : "reset", "tail" : "(): Unit", "member" : "monix.execution.misc.ThreadLocal.reset", "link" : "monix\/execution\/misc\/ThreadLocal.html#reset():Unit", "kind" : "def"}, {"label" : "set", "tail" : "(value: A): Unit", "member" : "monix.execution.misc.ThreadLocal.set", "link" : "monix\/execution\/misc\/ThreadLocal.html#set(value:A):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): A", "member" : "monix.execution.misc.ThreadLocal.get", "link" : "monix\/execution\/misc\/ThreadLocal.html#get():A", "kind" : "def"}, {"label" : "initial", "tail" : ": A", "member" : "monix.execution.misc.ThreadLocal.initial", "link" : "monix\/execution\/misc\/ThreadLocal.html#initial:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/ThreadLocal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/ThreadLocal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/ThreadLocal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/ThreadLocal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/ThreadLocal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/ThreadLocal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/ThreadLocal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/ThreadLocal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/ThreadLocal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/ThreadLocal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/ThreadLocal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/ThreadLocal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/ThreadLocal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/ThreadLocal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/ThreadLocal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/ThreadLocal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/ThreadLocal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/ThreadLocal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/ThreadLocal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(initial: A): ThreadLocal[A]", "member" : "monix.execution.misc.ThreadLocal.apply", "link" : "monix\/execution\/misc\/ThreadLocal$.html#apply[A](initial:A):monix.execution.misc.ThreadLocal[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(): ThreadLocal[A]", "member" : "monix.execution.misc.ThreadLocal.apply", "link" : "monix\/execution\/misc\/ThreadLocal$.html#apply[A<:AnyRef]():monix.execution.misc.ThreadLocal[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/misc\/ThreadLocal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/misc\/ThreadLocal$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/misc\/ThreadLocal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/misc\/ThreadLocal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/misc\/ThreadLocal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/misc\/ThreadLocal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/misc\/ThreadLocal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/ThreadLocal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/ThreadLocal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/misc\/ThreadLocal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/misc\/ThreadLocal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/misc\/ThreadLocal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/misc\/ThreadLocal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/misc\/ThreadLocal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/misc\/ThreadLocal$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/misc\/ThreadLocal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/misc\/ThreadLocal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/misc\/ThreadLocal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/misc\/ThreadLocal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/misc\/ThreadLocal.html", "kind" : "class"}], "monix.execution.internal.forkJoin" : [{"name" : "monix.execution.internal.forkJoin.ForkJoinPool", "shortDescription" : "", "object" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html", "members_object" : [{"label" : "managedBlock", "tail" : "(blocker: ManagedBlocker): Unit", "member" : "monix.execution.internal.forkJoin.ForkJoinPool.managedBlock", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#managedBlock(blocker:monix.execution.internal.forkJoin.package.ManagedBlocker):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/internal\/forkJoin\/package$$ForkJoinPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "monix.reactive.observers" : [{"name" : "monix.reactive.observers.BufferedSubscriber", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "scheduler", "tail" : "(): Scheduler", "member" : "monix.reactive.observers.Subscriber.scheduler", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#scheduler:monix.execution.Scheduler", "kind" : "implicit abstract def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.Observer.onComplete", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#onComplete():Unit", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.Observer.onError", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#onError(ex:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.Observer.onNext", "link" : "monix\/reactive\/observers\/BufferedSubscriber.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "abstract def"}], "shortDescription" : "Interface describing Observer wrappersthat are thread-safe (can receive concurrent events) and thatreturn an immediate Continue when receiving onNextevents.", "object" : "monix\/reactive\/observers\/BufferedSubscriber$.html", "members_object" : [{"label" : "batched", "tail" : "(underlying: Subscriber[List[A]], bufferSize: Int): Subscriber[A]", "member" : "monix.reactive.observers.buffers.BuildersImpl.batched", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#batched[A](underlying:monix.reactive.observers.Subscriber[List[A]],bufferSize:Int):monix.reactive.observers.Subscriber[A]", "kind" : "def"}, {"label" : "synchronous", "tail" : "(subscriber: Subscriber[A], bufferPolicy: Synchronous[A]): Sync[A]", "member" : "monix.reactive.observers.buffers.BuildersImpl.synchronous", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#synchronous[A](subscriber:monix.reactive.observers.Subscriber[A],bufferPolicy:monix.reactive.OverflowStrategy.Synchronous[A]):monix.reactive.observers.Subscriber.Sync[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(subscriber: Subscriber[A], bufferPolicy: OverflowStrategy[A]): Subscriber[A]", "member" : "monix.reactive.observers.buffers.BuildersImpl.apply", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#apply[A](subscriber:monix.reactive.observers.Subscriber[A],bufferPolicy:monix.reactive.OverflowStrategy[A]):monix.reactive.observers.Subscriber[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/BufferedSubscriber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/observers\/BufferedSubscriber.html", "kind" : "trait"}, {"name" : "monix.reactive.observers.CacheUntilConnectSubscriber", "shortDescription" : "Wraps an underlying Subscriber into an implementation that cachesall events until the call to connect() happens.", "object" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html", "members_class" : [{"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.observers.CacheUntilConnectSubscriber.onError", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.observers.CacheUntilConnectSubscriber.onComplete", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#onComplete():Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.observers.CacheUntilConnectSubscriber.onNext", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "connect", "tail" : "(): CancelableFuture[Ack]", "member" : "monix.reactive.observers.CacheUntilConnectSubscriber.connect", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#connect():monix.execution.CancelableFuture[monix.execution.Ack]", "kind" : "def"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "monix.reactive.observers.CacheUntilConnectSubscriber.scheduler", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#scheduler:monix.execution.Scheduler", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(underlying: Subscriber[T]): CacheUntilConnectSubscriber[T]", "member" : "monix.reactive.observers.CacheUntilConnectSubscriber.apply", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#apply[T](underlying:monix.reactive.observers.Subscriber[T]):monix.reactive.observers.CacheUntilConnectSubscriber[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/observers\/CacheUntilConnectSubscriber.html", "kind" : "class"}, {"name" : "monix.reactive.observers.ConnectableSubscriber", "shortDescription" : "Wraps a Subscriber into an implementation that abstains from emitting items until the callto connect() happens.", "object" : "monix\/reactive\/observers\/ConnectableSubscriber$.html", "members_class" : [{"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.observers.ConnectableSubscriber.onError", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.observers.ConnectableSubscriber.onComplete", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#onComplete():Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.observers.ConnectableSubscriber.onNext", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "pushError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.observers.ConnectableSubscriber.pushError", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#pushError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "pushComplete", "tail" : "(): Unit", "member" : "monix.reactive.observers.ConnectableSubscriber.pushComplete", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#pushComplete():Unit", "kind" : "def"}, {"label" : "pushFirstAll", "tail" : "(xs: TraversableOnce[U]): Unit", "member" : "monix.reactive.observers.ConnectableSubscriber.pushFirstAll", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#pushFirstAll[U<:T](xs:TraversableOnce[U]):Unit", "kind" : "def"}, {"label" : "pushFirst", "tail" : "(elem: T): Unit", "member" : "monix.reactive.observers.ConnectableSubscriber.pushFirst", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#pushFirst(elem:T):Unit", "kind" : "def"}, {"label" : "connect", "tail" : "(): CancelableFuture[Ack]", "member" : "monix.reactive.observers.ConnectableSubscriber.connect", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#connect():monix.execution.CancelableFuture[monix.execution.Ack]", "kind" : "def"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "monix.reactive.observers.ConnectableSubscriber.scheduler", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#scheduler:monix.execution.Scheduler", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/ConnectableSubscriber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(subscriber: Subscriber[T]): ConnectableSubscriber[T]", "member" : "monix.reactive.observers.ConnectableSubscriber.apply", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#apply[T](subscriber:monix.reactive.observers.Subscriber[T]):monix.reactive.observers.ConnectableSubscriber[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/ConnectableSubscriber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/observers\/ConnectableSubscriber.html", "kind" : "class"}, {"name" : "monix.reactive.observers.SafeSubscriber", "shortDescription" : "A safe subscriber safe guards subscriber implementations, such that:", "object" : "monix\/reactive\/observers\/SafeSubscriber$.html", "members_class" : [{"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.observers.SafeSubscriber.onComplete", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.observers.SafeSubscriber.onError", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.observers.SafeSubscriber.onNext", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "monix.reactive.observers.SafeSubscriber.scheduler", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#scheduler:monix.execution.Scheduler", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/SafeSubscriber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/SafeSubscriber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(subscriber: Subscriber[T]): SafeSubscriber[T]", "member" : "monix.reactive.observers.SafeSubscriber.apply", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#apply[T](subscriber:monix.reactive.observers.Subscriber[T]):monix.reactive.observers.SafeSubscriber[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/SafeSubscriber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/observers\/SafeSubscriber.html", "kind" : "class"}, {"name" : "monix.reactive.observers.Subscriber", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/Subscriber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/Subscriber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/Subscriber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/Subscriber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/Subscriber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/Subscriber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/Subscriber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/Subscriber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/Subscriber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/Subscriber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/Subscriber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/Subscriber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/Subscriber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/Subscriber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/Subscriber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/Subscriber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/Subscriber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/Subscriber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/Subscriber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "scheduler", "tail" : "(): Scheduler", "member" : "monix.reactive.observers.Subscriber.scheduler", "link" : "monix\/reactive\/observers\/Subscriber.html#scheduler:monix.execution.Scheduler", "kind" : "implicit abstract def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.Observer.onComplete", "link" : "monix\/reactive\/observers\/Subscriber.html#onComplete():Unit", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.Observer.onError", "link" : "monix\/reactive\/observers\/Subscriber.html#onError(ex:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.Observer.onNext", "link" : "monix\/reactive\/observers\/Subscriber.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "abstract def"}], "shortDescription" : "A Subscriber is an Observer with an attached Scheduler.", "object" : "monix\/reactive\/observers\/Subscriber$.html", "members_object" : [{"label" : "Extensions", "tail" : "", "member" : "monix.reactive.observers.Subscriber.Extensions", "link" : "monix\/reactive\/observers\/Subscriber$.html#Extensions[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "toReactiveSubscriber", "tail" : "(source: Subscriber[T], bufferSize: Int): org.reactivestreams.Subscriber[T]", "member" : "monix.reactive.observers.Subscriber.toReactiveSubscriber", "link" : "monix\/reactive\/observers\/Subscriber$.html#toReactiveSubscriber[T](source:monix.reactive.observers.Subscriber[T],bufferSize:Int):org.reactivestreams.Subscriber[T]", "kind" : "def"}, {"label" : "toReactiveSubscriber", "tail" : "(subscriber: Subscriber[T]): org.reactivestreams.Subscriber[T]", "member" : "monix.reactive.observers.Subscriber.toReactiveSubscriber", "link" : "monix\/reactive\/observers\/Subscriber$.html#toReactiveSubscriber[T](subscriber:monix.reactive.observers.Subscriber[T]):org.reactivestreams.Subscriber[T]", "kind" : "def"}, {"label" : "fromReactiveSubscriber", "tail" : "(subscriber: org.reactivestreams.Subscriber[T], subscription: Cancelable)(s: Scheduler): Subscriber[T]", "member" : "monix.reactive.observers.Subscriber.fromReactiveSubscriber", "link" : "monix\/reactive\/observers\/Subscriber$.html#fromReactiveSubscriber[T](subscriber:org.reactivestreams.Subscriber[T],subscription:monix.execution.Cancelable)(implicits:monix.execution.Scheduler):monix.reactive.observers.Subscriber[T]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream)(s: Scheduler): Sync[A]", "member" : "monix.reactive.observers.Subscriber.dump", "link" : "monix\/reactive\/observers\/Subscriber$.html#dump[A](prefix:String,out:java.io.PrintStream)(implicits:monix.execution.Scheduler):monix.reactive.observers.Subscriber.Sync[A]", "kind" : "def"}, {"label" : "canceled", "tail" : "(s: Scheduler): Sync[A]", "member" : "monix.reactive.observers.Subscriber.canceled", "link" : "monix\/reactive\/observers\/Subscriber$.html#canceled[A](implicits:monix.execution.Scheduler):monix.reactive.observers.Subscriber.Sync[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(s: Scheduler): Sync[A]", "member" : "monix.reactive.observers.Subscriber.empty", "link" : "monix\/reactive\/observers\/Subscriber$.html#empty[A](implicits:monix.execution.Scheduler):monix.reactive.observers.Subscriber.Sync[A]", "kind" : "def"}, {"label" : "Sync", "tail" : "", "member" : "monix.reactive.observers.Subscriber.Sync", "link" : "monix\/reactive\/observers\/Subscriber$.html#Sync", "kind" : "object"}, {"label" : "Sync", "tail" : "", "member" : "monix.reactive.observers.Subscriber.Sync", "link" : "monix\/reactive\/observers\/Subscriber$.html#Sync[-T]extendsSubscriber[T]withObserver.Sync[T]", "kind" : "trait"}, {"label" : "apply", "tail" : "(observer: Observer[T], scheduler: Scheduler): Subscriber[T]", "member" : "monix.reactive.observers.Subscriber.apply", "link" : "monix\/reactive\/observers\/Subscriber$.html#apply[T](observer:monix.reactive.Observer[T],scheduler:monix.execution.Scheduler):monix.reactive.observers.Subscriber[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observers\/Subscriber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observers\/Subscriber$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observers\/Subscriber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observers\/Subscriber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observers\/Subscriber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observers\/Subscriber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observers\/Subscriber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/Subscriber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/Subscriber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observers\/Subscriber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observers\/Subscriber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observers\/Subscriber$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observers\/Subscriber$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observers\/Subscriber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observers\/Subscriber$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observers\/Subscriber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observers\/Subscriber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observers\/Subscriber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observers\/Subscriber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/observers\/Subscriber.html", "kind" : "trait"}], "monix.execution" : [{"name" : "monix.execution.Ack", "shortDescription" : "Represents an acknowledgement of processing that a consumersends back upstream.", "object" : "monix\/execution\/Ack$.html", "members_class" : [{"label" : "andThen", "tail" : "(pf: PartialFunction[Try[Ack], U])(executor: ExecutionContext): Future[Ack]", "member" : "scala.concurrent.Future.andThen", "link" : "monix\/execution\/Ack.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "monix\/execution\/Ack.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "monix\/execution\/Ack.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (Ack, U) â‡’ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "monix\/execution\/Ack.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(Ack, U)]", "member" : "scala.concurrent.Future.zip", "link" : "monix\/execution\/Ack.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "monix\/execution\/Ack.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "monix\/execution\/Ack.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Ack, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "monix\/execution\/Ack.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Ack) â‡’ Boolean)(executor: ExecutionContext): Future[Ack]", "member" : "scala.concurrent.Future.withFilter", "link" : "monix\/execution\/Ack.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (Ack) â‡’ Boolean)(executor: ExecutionContext): Future[Ack]", "member" : "scala.concurrent.Future.filter", "link" : "monix\/execution\/Ack.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[Ack, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "monix\/execution\/Ack.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Ack) â‡’ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "monix\/execution\/Ack.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Ack) â‡’ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "monix\/execution\/Ack.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (Ack) â‡’ S, f: (Throwable) â‡’ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "monix\/execution\/Ack.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Ack) â‡’ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "monix\/execution\/Ack.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "monix\/execution\/Ack.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "monix\/execution\/Ack.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[Ack, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "monix\/execution\/Ack.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Ack.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Ack.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Ack.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Ack.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Ack.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Ack.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Ack.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Ack.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Ack.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Ack.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Ack.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Ack.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Ack.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Ack.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Ack.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Ack.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Ack.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Ack.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Ack.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transformWith", "tail" : "(f: (Try[Ack]) â‡’ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transformWith", "link" : "monix\/execution\/Ack.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (Try[Ack]) â‡’ Try[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "monix\/execution\/Ack.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[Ack]]", "member" : "scala.concurrent.Future.value", "link" : "monix\/execution\/Ack.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "monix\/execution\/Ack.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[Ack]) â‡’ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "monix\/execution\/Ack.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): Ack", "member" : "scala.concurrent.Awaitable.result", "link" : "monix\/execution\/Ack.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): Ack.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "monix\/execution\/Ack.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "members_object" : [{"label" : "AckExtensions", "tail" : "", "member" : "monix.execution.Ack.AckExtensions", "link" : "monix\/execution\/Ack$.html#AckExtensions[Self<:scala.concurrent.Future[monix.execution.Ack]]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Stop", "tail" : "", "member" : "monix.execution.Ack.Stop", "link" : "monix\/execution\/Ack$.html#Stop", "kind" : "object"}, {"label" : "Stop", "tail" : "", "member" : "monix.execution.Ack.Stop", "link" : "monix\/execution\/Ack$.html#StopextendsAck", "kind" : "sealed abstract class"}, {"label" : "Continue", "tail" : "", "member" : "monix.execution.Ack.Continue", "link" : "monix\/execution\/Ack$.html#Continue", "kind" : "object"}, {"label" : "Continue", "tail" : "", "member" : "monix.execution.Ack.Continue", "link" : "monix\/execution\/Ack$.html#ContinueextendsAck", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Ack$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Ack$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Ack$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Ack$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Ack$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Ack$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Ack$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Ack$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Ack$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Ack$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Ack$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Ack$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Ack$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Ack$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Ack$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Ack$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Ack$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Ack$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Ack$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/Ack.html", "kind" : "class"}, {"name" : "monix.execution.Cancelable", "members_trait" : [{"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "monix\/execution\/Cancelable.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Cancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Cancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "monix\/execution\/Cancelable.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Any.hashCode", "link" : "monix\/execution\/Cancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.equals", "link" : "monix\/execution\/Cancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "monix\/execution\/Cancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "monix\/execution\/Cancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.Cancelable.cancel", "link" : "monix\/execution\/Cancelable.html#cancel():Unit", "kind" : "abstract def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.Any.getClass", "link" : "monix\/execution\/Cancelable.html#getClass():Class[_]", "kind" : "abstract def"}], "shortDescription" : "Represents a one-time idempotent action that can be usedto cancel async computations, or to release resources thatactive data sources are holding.", "object" : "monix\/execution\/Cancelable$.html", "members_object" : [{"label" : "IsDummy", "tail" : "", "member" : "monix.execution.Cancelable.IsDummy", "link" : "monix\/execution\/Cancelable$.html#IsDummyextendsAnyRef", "kind" : "trait"}, {"label" : "cancelAll", "tail" : "(seq: Iterable[Cancelable]): Unit", "member" : "monix.execution.Cancelable.cancelAll", "link" : "monix\/execution\/Cancelable$.html#cancelAll(seq:Iterable[monix.execution.Cancelable]):Unit", "kind" : "def"}, {"label" : "collection", "tail" : "(refs: Iterable[Cancelable]): Cancelable", "member" : "monix.execution.Cancelable.collection", "link" : "monix\/execution\/Cancelable$.html#collection(refs:Iterable[monix.execution.Cancelable]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "empty", "tail" : ": Cancelable", "member" : "monix.execution.Cancelable.empty", "link" : "monix\/execution\/Cancelable$.html#empty:monix.execution.Cancelable", "kind" : "val"}, {"label" : "apply", "tail" : "(callback: () â‡’ Unit): Cancelable", "member" : "monix.execution.Cancelable.apply", "link" : "monix\/execution\/Cancelable$.html#apply(callback:()=>Unit):monix.execution.Cancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(): Cancelable", "member" : "monix.execution.Cancelable.apply", "link" : "monix\/execution\/Cancelable$.html#apply():monix.execution.Cancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Cancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Cancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Cancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Cancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Cancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Cancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Cancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Cancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Cancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Cancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Cancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Cancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Cancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Cancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Cancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Cancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Cancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Cancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Cancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/Cancelable.html", "kind" : "trait"}, {"name" : "monix.execution.CancelableFuture", "members_trait" : [{"label" : "transformWith", "tail" : "(f: (Try[T]) â‡’ Future[S])(executor: ExecutionContext): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.transformWith", "link" : "monix\/execution\/CancelableFuture.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Try[T]) â‡’ Try[S])(executor: ExecutionContext): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.transform", "link" : "monix\/execution\/CancelableFuture.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[T], U])(executor: ExecutionContext): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.andThen", "link" : "monix\/execution\/CancelableFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.mapTo", "link" : "monix\/execution\/CancelableFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): CancelableFuture[U]", "member" : "monix.execution.CancelableFuture.fallbackTo", "link" : "monix\/execution\/CancelableFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):monix.execution.CancelableFuture[U]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): CancelableFuture[(T, U)]", "member" : "monix.execution.CancelableFuture.zip", "link" : "monix\/execution\/CancelableFuture.html#zip[U](that:scala.concurrent.Future[U]):monix.execution.CancelableFuture[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): CancelableFuture[U]", "member" : "monix.execution.CancelableFuture.recoverWith", "link" : "monix\/execution\/CancelableFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): CancelableFuture[U]", "member" : "monix.execution.CancelableFuture.recover", "link" : "monix\/execution\/CancelableFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, S])(executor: ExecutionContext): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.collect", "link" : "monix\/execution\/CancelableFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean)(executor: ExecutionContext): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.filter", "link" : "monix\/execution\/CancelableFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Future[S])(executor: ExecutionContext): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.flatMap", "link" : "monix\/execution\/CancelableFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ S)(executor: ExecutionContext): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.map", "link" : "monix\/execution\/CancelableFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (T) â‡’ S, f: (Throwable) â‡’ Throwable)(executor: ExecutionContext): CancelableFuture[S]", "member" : "monix.execution.CancelableFuture.transform", "link" : "monix\/execution\/CancelableFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[S]", "kind" : "def"}, {"label" : "failed", "tail" : "(): CancelableFuture[Throwable]", "member" : "monix.execution.CancelableFuture.failed", "link" : "monix\/execution\/CancelableFuture.html#failed:monix.execution.CancelableFuture[Throwable]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (T, U) â‡’ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "monix\/execution\/CancelableFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) â‡’ Boolean)(executor: ExecutionContext): Future[T]", "member" : "scala.concurrent.Future.withFilter", "link" : "monix\/execution\/CancelableFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "monix\/execution\/CancelableFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) â‡’ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "monix\/execution\/CancelableFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "monix\/execution\/CancelableFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[T, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "monix\/execution\/CancelableFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/CancelableFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/CancelableFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/CancelableFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/CancelableFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/CancelableFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/CancelableFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/CancelableFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/CancelableFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/CancelableFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/CancelableFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/CancelableFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/CancelableFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/CancelableFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/CancelableFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/CancelableFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/CancelableFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/CancelableFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/CancelableFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/CancelableFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.Cancelable.cancel", "link" : "monix\/execution\/CancelableFuture.html#cancel():Unit", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[T]]", "member" : "scala.concurrent.Future.value", "link" : "monix\/execution\/CancelableFuture.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "monix\/execution\/CancelableFuture.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[T]) â‡’ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "monix\/execution\/CancelableFuture.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): T", "member" : "scala.concurrent.Awaitable.result", "link" : "monix\/execution\/CancelableFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): CancelableFuture.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "monix\/execution\/CancelableFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "shortDescription" : "Represents an asynchronous computation that can be canceledas long as it isn't complete.", "object" : "monix\/execution\/CancelableFuture$.html", "members_object" : [{"label" : "fromTry", "tail" : "(value: Try[T]): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.fromTry", "link" : "monix\/execution\/CancelableFuture$.html#fromTry[T](value:scala.util.Try[T]):monix.execution.CancelableFuture[T]", "kind" : "def"}, {"label" : "never", "tail" : "(): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.never", "link" : "monix\/execution\/CancelableFuture$.html#never[T]:monix.execution.CancelableFuture[T]", "kind" : "final def"}, {"label" : "unit", "tail" : ": CancelableFuture[Unit]", "member" : "monix.execution.CancelableFuture.unit", "link" : "monix\/execution\/CancelableFuture$.html#unit:monix.execution.CancelableFuture[Unit]", "kind" : "final val"}, {"label" : "failed", "tail" : "(ex: Throwable): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.failed", "link" : "monix\/execution\/CancelableFuture$.html#failed[T](ex:Throwable):monix.execution.CancelableFuture[T]", "kind" : "def"}, {"label" : "successful", "tail" : "(value: T): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.successful", "link" : "monix\/execution\/CancelableFuture$.html#successful[T](value:T):monix.execution.CancelableFuture[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(underlying: Future[T], cancelable: Cancelable): CancelableFuture[T]", "member" : "monix.execution.CancelableFuture.apply", "link" : "monix\/execution\/CancelableFuture$.html#apply[T](underlying:scala.concurrent.Future[T],cancelable:monix.execution.Cancelable):monix.execution.CancelableFuture[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/CancelableFuture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/CancelableFuture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/CancelableFuture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/CancelableFuture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/CancelableFuture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/CancelableFuture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/CancelableFuture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/CancelableFuture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/CancelableFuture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/CancelableFuture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/CancelableFuture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/CancelableFuture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/CancelableFuture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/CancelableFuture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/CancelableFuture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/CancelableFuture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/CancelableFuture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/CancelableFuture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/CancelableFuture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/CancelableFuture.html", "kind" : "trait"}, {"name" : "monix.execution.ExecutionModel", "shortDescription" : "Specification for run-loops, imposed by the Scheduler.", "object" : "monix\/execution\/ExecutionModel$.html", "members_class" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "monix\/execution\/ExecutionModel.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "monix\/execution\/ExecutionModel.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/ExecutionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/ExecutionModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/ExecutionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/ExecutionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/ExecutionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/ExecutionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/ExecutionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/ExecutionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/ExecutionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/ExecutionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/ExecutionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/ExecutionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/ExecutionModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/ExecutionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/ExecutionModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/ExecutionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/ExecutionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/ExecutionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/ExecutionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nextFrameIndex", "tail" : "(current: Int): Int", "member" : "monix.execution.ExecutionModel.nextFrameIndex", "link" : "monix\/execution\/ExecutionModel.html#nextFrameIndex(current:Int):Int", "kind" : "abstract def"}, {"label" : "batchedExecutionModulus", "tail" : ": Int", "member" : "monix.execution.ExecutionModel.batchedExecutionModulus", "link" : "monix\/execution\/ExecutionModel.html#batchedExecutionModulus:Int", "kind" : "abstract val"}, {"label" : "recommendedBatchSize", "tail" : ": Int", "member" : "monix.execution.ExecutionModel.recommendedBatchSize", "link" : "monix\/execution\/ExecutionModel.html#recommendedBatchSize:Int", "kind" : "abstract val"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "monix\/execution\/ExecutionModel.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "monix\/execution\/ExecutionModel.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "monix\/execution\/ExecutionModel.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Default", "tail" : ": ExecutionModel", "member" : "monix.execution.ExecutionModel.Default", "link" : "monix\/execution\/ExecutionModel$.html#Default:monix.execution.ExecutionModel", "kind" : "final val"}, {"label" : "Extensions", "tail" : "", "member" : "monix.execution.ExecutionModel.Extensions", "link" : "monix\/execution\/ExecutionModel$.html#ExtensionsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "BatchedExecution", "tail" : "", "member" : "monix.execution.ExecutionModel.BatchedExecution", "link" : "monix\/execution\/ExecutionModel$.html#BatchedExecutionextendsExecutionModelwithProductwithSerializable", "kind" : "final case class"}, {"label" : "AlwaysAsyncExecution", "tail" : "", "member" : "monix.execution.ExecutionModel.AlwaysAsyncExecution", "link" : "monix\/execution\/ExecutionModel$.html#AlwaysAsyncExecution", "kind" : "object"}, {"label" : "SynchronousExecution", "tail" : "", "member" : "monix.execution.ExecutionModel.SynchronousExecution", "link" : "monix\/execution\/ExecutionModel$.html#SynchronousExecution", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/ExecutionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/ExecutionModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/ExecutionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/ExecutionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/ExecutionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/ExecutionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/ExecutionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/ExecutionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/ExecutionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/ExecutionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/ExecutionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/ExecutionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/ExecutionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/ExecutionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/ExecutionModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/ExecutionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/ExecutionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/ExecutionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/ExecutionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/ExecutionModel.html", "kind" : "class"}, {"name" : "monix.execution.FutureUtils", "shortDescription" : "Utilities for Scala's standard concurrent.Future.", "object" : "monix\/execution\/FutureUtils$.html", "members_object" : [{"label" : "extensions", "tail" : "", "member" : "monix.execution.FutureUtils.extensions", "link" : "monix\/execution\/FutureUtils$.html#extensions", "kind" : "object"}, {"label" : "delayedResult", "tail" : "(delay: FiniteDuration)(result: â‡’ T)(s: Scheduler): Future[T]", "member" : "monix.execution.FutureUtils.delayedResult", "link" : "monix\/execution\/FutureUtils$.html#delayedResult[T](delay:scala.concurrent.duration.FiniteDuration)(result:=>T)(implicits:monix.execution.Scheduler):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(source: Future[Try[T]])(ec: ExecutionContext): Future[T]", "member" : "monix.execution.FutureUtils.dematerialize", "link" : "monix\/execution\/FutureUtils$.html#dematerialize[T](source:scala.concurrent.Future[scala.util.Try[T]])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(source: Future[T], f: (Try[T]) â‡’ Future[S])(ec: ExecutionContext): Future[S]", "member" : "monix.execution.FutureUtils.transformWith", "link" : "monix\/execution\/FutureUtils$.html#transformWith[T,S](source:scala.concurrent.Future[T],f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(source: Future[T], f: (Try[T]) â‡’ Try[S])(ec: ExecutionContext): Future[S]", "member" : "monix.execution.FutureUtils.transform", "link" : "monix\/execution\/FutureUtils$.html#transform[T,S](source:scala.concurrent.Future[T],f:scala.util.Try[T]=>scala.util.Try[S])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "materialize", "tail" : "(source: Future[T])(ec: ExecutionContext): Future[Try[T]]", "member" : "monix.execution.FutureUtils.materialize", "link" : "monix\/execution\/FutureUtils$.html#materialize[T](source:scala.concurrent.Future[T])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[scala.util.Try[T]]", "kind" : "def"}, {"label" : "timeoutTo", "tail" : "(source: Future[T], atMost: FiniteDuration, fallback: â‡’ Future[T])(s: Scheduler): Future[T]", "member" : "monix.execution.FutureUtils.timeoutTo", "link" : "monix\/execution\/FutureUtils$.html#timeoutTo[T](source:scala.concurrent.Future[T],atMost:scala.concurrent.duration.FiniteDuration,fallback:=>scala.concurrent.Future[T])(implicits:monix.execution.Scheduler):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "timeout", "tail" : "(source: Future[T], atMost: FiniteDuration)(s: Scheduler): Future[T]", "member" : "monix.execution.FutureUtils.timeout", "link" : "monix\/execution\/FutureUtils$.html#timeout[T](source:scala.concurrent.Future[T],atMost:scala.concurrent.duration.FiniteDuration)(implicits:monix.execution.Scheduler):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/FutureUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/FutureUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/FutureUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/FutureUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/FutureUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/FutureUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/FutureUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/FutureUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/FutureUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/FutureUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/FutureUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/FutureUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/FutureUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/FutureUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/FutureUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/FutureUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/FutureUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/FutureUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/FutureUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "monix.execution.Listener", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Listener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Listener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Listener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Listener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Listener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Listener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Listener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Listener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Listener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Listener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Listener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Listener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Listener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Listener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Listener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Listener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Listener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Listener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Listener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onValue", "tail" : "(value: A): Unit", "member" : "monix.execution.Listener.onValue", "link" : "monix\/execution\/Listener.html#onValue(value:A):Unit", "kind" : "abstract def"}], "shortDescription" : "A simple listener interface, to be used in observer patternimplementations or for specifying asynchronous callbacks.", "object" : "monix\/execution\/Listener$.html", "members_object" : [{"label" : "fromPromise", "tail" : "(p: Promise[A]): Listener[A]", "member" : "monix.execution.Listener.fromPromise", "link" : "monix\/execution\/Listener$.html#fromPromise[A](p:scala.concurrent.Promise[A]):monix.execution.Listener[A]", "kind" : "def"}, {"label" : "unit", "tail" : "(f: () â‡’ Unit): Listener[Unit]", "member" : "monix.execution.Listener.unit", "link" : "monix\/execution\/Listener$.html#unit(f:()=>Unit):monix.execution.Listener[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (A) â‡’ U): Listener[A]", "member" : "monix.execution.Listener.apply", "link" : "monix\/execution\/Listener$.html#apply[A,U](f:A=>U):monix.execution.Listener[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Listener$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Listener$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Listener$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Listener$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Listener$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Listener$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Listener$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Listener$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Listener$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Listener$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Listener$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Listener$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Listener$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Listener$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Listener$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Listener$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Listener$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Listener$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Listener$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/Listener.html", "kind" : "trait"}, {"name" : "monix.execution.Macros", "shortDescription" : "Various implementations forAckExtensions andScheduler.", "members_class" : [{"label" : "util", "tail" : "", "member" : "monix.execution.misc.HygieneUtilMacros.util", "link" : "monix\/execution\/misc\/HygieneUtilMacros.html#util", "kind" : "object"}, {"label" : "executeAsyncBatch", "tail" : "(cb: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.Macros.executeAsyncBatch", "link" : "monix\/execution\/Macros.html#executeAsyncBatch(cb:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "executeTrampolined", "tail" : "(cb: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.Macros.executeTrampolined", "link" : "monix\/execution\/Macros.html#executeTrampolined(cb:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "executeAsync", "tail" : "(cb: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.Macros.executeAsync", "link" : "monix\/execution\/Macros.html#executeAsync(cb:Macros.this.c.universe.Tree):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "syncOnComplete", "tail" : "(f: scala.reflect.macros.whitebox.Context.Expr[(Try[Ack]) â‡’ Unit])(s: scala.reflect.macros.whitebox.Context.Expr[Scheduler])(arg0: scala.reflect.macros.whitebox.Context.WeakTypeTag[Self]): scala.reflect.macros.whitebox.Context.Expr[Unit]", "member" : "monix.execution.Macros.syncOnComplete", "link" : "monix\/execution\/Macros.html#syncOnComplete[Self<:scala.concurrent.Future[monix.execution.Ack]](f:Macros.this.c.Expr[scala.util.Try[monix.execution.Ack]=>Unit])(s:Macros.this.c.Expr[monix.execution.Scheduler])(implicitevidence$6:Macros.this.c.WeakTypeTag[Self]):Macros.this.c.Expr[Unit]", "kind" : "def"}, {"label" : "syncFlatMap", "tail" : "(f: scala.reflect.macros.whitebox.Context.Expr[(Ack) â‡’ Future[Ack]])(s: scala.reflect.macros.whitebox.Context.Expr[Scheduler])(arg0: scala.reflect.macros.whitebox.Context.WeakTypeTag[Self]): scala.reflect.macros.whitebox.Context.Expr[Future[Ack]]", "member" : "monix.execution.Macros.syncFlatMap", "link" : "monix\/execution\/Macros.html#syncFlatMap[Self<:scala.concurrent.Future[monix.execution.Ack]](f:Macros.this.c.Expr[monix.execution.Ack=>scala.concurrent.Future[monix.execution.Ack]])(s:Macros.this.c.Expr[monix.execution.Scheduler])(implicitevidence$5:Macros.this.c.WeakTypeTag[Self]):Macros.this.c.Expr[scala.concurrent.Future[monix.execution.Ack]]", "kind" : "def"}, {"label" : "syncMap", "tail" : "(f: scala.reflect.macros.whitebox.Context.Expr[(Ack) â‡’ Ack])(s: scala.reflect.macros.whitebox.Context.Expr[Scheduler])(arg0: scala.reflect.macros.whitebox.Context.WeakTypeTag[Self]): scala.reflect.macros.whitebox.Context.Expr[Future[Ack]]", "member" : "monix.execution.Macros.syncMap", "link" : "monix\/execution\/Macros.html#syncMap[Self<:scala.concurrent.Future[monix.execution.Ack]](f:Macros.this.c.Expr[monix.execution.Ack=>monix.execution.Ack])(s:Macros.this.c.Expr[monix.execution.Scheduler])(implicitevidence$4:Macros.this.c.WeakTypeTag[Self]):Macros.this.c.Expr[scala.concurrent.Future[monix.execution.Ack]]", "kind" : "def"}, {"label" : "syncOnStopOrFailure", "tail" : "(callback: scala.reflect.macros.Universe.Tree)(s: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.whitebox.Context.WeakTypeTag[Self]): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.Macros.syncOnStopOrFailure", "link" : "monix\/execution\/Macros.html#syncOnStopOrFailure[Self<:scala.concurrent.Future[monix.execution.Ack]](callback:Macros.this.c.universe.Tree)(s:Macros.this.c.universe.Tree)(implicitevidence$3:Macros.this.c.WeakTypeTag[Self]):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "syncOnContinue", "tail" : "(callback: scala.reflect.macros.Universe.Tree)(s: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.whitebox.Context.WeakTypeTag[Self]): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.Macros.syncOnContinue", "link" : "monix\/execution\/Macros.html#syncOnContinue[Self<:scala.concurrent.Future[monix.execution.Ack]](callback:Macros.this.c.universe.Tree)(s:Macros.this.c.universe.Tree)(implicitevidence$2:Macros.this.c.WeakTypeTag[Self]):Macros.this.c.universe.Tree", "kind" : "def"}, {"label" : "isSynchronous", "tail" : "(arg0: scala.reflect.macros.whitebox.Context.WeakTypeTag[Self]): scala.reflect.macros.whitebox.Context.Expr[Boolean]", "member" : "monix.execution.Macros.isSynchronous", "link" : "monix\/execution\/Macros.html#isSynchronous[Self<:scala.concurrent.Future[monix.execution.Ack]](implicitevidence$1:Macros.this.c.WeakTypeTag[Self]):Macros.this.c.Expr[Boolean]", "kind" : "def"}, {"member" : "monix.execution.Macros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "monix.execution.Macros.c", "link" : "monix\/execution\/Macros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "stripUnApplyNodes", "tail" : "(): scala.reflect.macros.Universe.Transformer", "member" : "monix.execution.misc.InlineMacros.stripUnApplyNodes", "link" : "monix\/execution\/Macros.html#stripUnApplyNodes():InlineMacros.this.c.universe.Transformer", "kind" : "def"}, {"label" : "inlineApplyRecursive", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.misc.InlineMacros.inlineApplyRecursive", "link" : "monix\/execution\/Macros.html#inlineApplyRecursive(tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "resetTree", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.misc.InlineMacros.resetTree", "link" : "monix\/execution\/Macros.html#resetTree(tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "inlineAndResetTree", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "monix.execution.misc.InlineMacros.inlineAndResetTree", "link" : "monix\/execution\/Macros.html#inlineAndResetTree(tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "inlineAndReset", "tail" : "(tree: scala.reflect.macros.Universe.Tree): scala.reflect.macros.whitebox.Context.Expr[T]", "member" : "monix.execution.misc.InlineMacros.inlineAndReset", "link" : "monix\/execution\/Macros.html#inlineAndReset[T](tree:InlineMacros.this.c.universe.Tree):InlineMacros.this.c.Expr[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Macros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Macros.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Macros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Macros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Macros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Macros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Macros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Macros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Macros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Macros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Macros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Macros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Macros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Macros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Macros.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Macros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Macros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Macros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Macros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/Macros.html", "kind" : "class"}, {"name" : "monix.execution.Scheduler", "members_trait" : [{"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/Scheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Scheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Scheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Scheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Scheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Scheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Scheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Scheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Scheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Scheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Scheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Scheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Scheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Scheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Scheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Scheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Scheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Scheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Scheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Scheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withExecutionModel", "tail" : "(em: ExecutionModel): Scheduler", "member" : "monix.execution.Scheduler.withExecutionModel", "link" : "monix\/execution\/Scheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "abstract def"}, {"label" : "executionModel", "tail" : "(): ExecutionModel", "member" : "monix.execution.Scheduler.executionModel", "link" : "monix\/execution\/Scheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "abstract def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.Scheduler.currentTimeMillis", "link" : "monix\/execution\/Scheduler.html#currentTimeMillis():Long", "kind" : "abstract def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleAtFixedRate", "link" : "monix\/execution\/Scheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/Scheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleOnce", "link" : "monix\/execution\/Scheduler.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.Scheduler.reportFailure", "link" : "monix\/execution\/Scheduler.html#reportFailure(t:Throwable):Unit", "kind" : "abstract def"}, {"label" : "execute", "tail" : "(command: Runnable): Unit", "member" : "monix.execution.Scheduler.execute", "link" : "monix\/execution\/Scheduler.html#execute(command:Runnable):Unit", "kind" : "abstract def"}], "shortDescription" : "A Scheduler is an scala.concurrent.ExecutionContext that additionally canschedule the execution of units of work to run with a delay or periodically.", "object" : "monix\/execution\/Scheduler$.html", "members_object" : [{"label" : "Implicits", "tail" : "", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.Implicits", "link" : "monix\/execution\/Scheduler$.html#Implicits", "kind" : "object"}, {"label" : "ImplicitsLike", "tail" : "", "member" : "monix.execution.SchedulerCompanion.ImplicitsLike", "link" : "monix\/execution\/Scheduler$.html#ImplicitsLikeextendsAnyRef", "kind" : "trait"}, {"label" : "Extensions", "tail" : "", "member" : "monix.execution.Scheduler.Extensions", "link" : "monix\/execution\/Scheduler$.html#ExtensionsextendsAnyValwithExecuteExtensions", "kind" : "implicit final class"}, {"label" : "global", "tail" : "(): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.global", "link" : "monix\/execution\/Scheduler$.html#global:monix.execution.Scheduler", "kind" : "def"}, {"label" : "DefaultScheduledExecutor", "tail" : ": ScheduledExecutorService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.DefaultScheduledExecutor", "link" : "monix\/execution\/Scheduler$.html#DefaultScheduledExecutor:java.util.concurrent.ScheduledExecutorService", "kind" : "lazy val"}, {"label" : "fixedPool", "tail" : "(name: String, poolSize: Int, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.fixedPool", "link" : "monix\/execution\/Scheduler$.html#fixedPool(name:String,poolSize:Int,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "singleThread", "tail" : "(name: String, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.singleThread", "link" : "monix\/execution\/Scheduler$.html#singleThread(name:String,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "cached", "tail" : "(name: String, minThreads: Int, maxThreads: Int, keepAliveTime: FiniteDuration, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.cached", "link" : "monix\/execution\/Scheduler$.html#cached(name:String,minThreads:Int,maxThreads:Int,keepAliveTime:scala.concurrent.duration.FiniteDuration,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "io", "tail" : "(name: String, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.io", "link" : "monix\/execution\/Scheduler$.html#io(name:String,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "forkJoin", "tail" : "(parallelism: Int, maxThreads: Int, name: String, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.forkJoin", "link" : "monix\/execution\/Scheduler$.html#forkJoin(parallelism:Int,maxThreads:Int,name:String,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "computation", "tail" : "(parallelism: Int, name: String, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.computation", "link" : "monix\/execution\/Scheduler$.html#computation(parallelism:Int,name:String,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "trampoline", "tail" : "(underlying: Scheduler, executionModel: ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.trampoline", "link" : "monix\/execution\/Scheduler$.html#trampoline(underlying:monix.execution.Scheduler,executionModel:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(executionModel: ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executionModel:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(ec: ExecutionContext, executionModel: ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(ec:scala.concurrent.ExecutionContext,executionModel:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(ec: ExecutionContext): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(ec:scala.concurrent.ExecutionContext):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(executor: ExecutorService, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executor:java.util.concurrent.ExecutorService,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "apply", "tail" : "(executor: ExecutorService): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executor:java.util.concurrent.ExecutorService):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "apply", "tail" : "(executor: ExecutorService, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executor:java.util.concurrent.ExecutorService,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "apply", "tail" : "(executor: ExecutorService, reporter: UncaughtExceptionReporter): SchedulerService", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executor:java.util.concurrent.ExecutorService,reporter:monix.execution.UncaughtExceptionReporter):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "apply", "tail" : "(ec: ExecutionContext, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(ec:scala.concurrent.ExecutionContext,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(ec: ExecutionContext, reporter: UncaughtExceptionReporter): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(ec:scala.concurrent.ExecutionContext,reporter:monix.execution.UncaughtExceptionReporter):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(executor: ScheduledExecutorService, ec: ExecutionContext): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executor:java.util.concurrent.ScheduledExecutorService,ec:scala.concurrent.ExecutionContext):monix.execution.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(executor: ScheduledExecutorService, ec: ExecutionContext, reporter: UncaughtExceptionReporter, executionModel: ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.SchedulerCompanionImpl.apply", "link" : "monix\/execution\/Scheduler$.html#apply(executor:java.util.concurrent.ScheduledExecutorService,ec:scala.concurrent.ExecutionContext,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/Scheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/Scheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/Scheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/Scheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/Scheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/Scheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/Scheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Scheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Scheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/Scheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/Scheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/Scheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/Scheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/Scheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/Scheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/Scheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/Scheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/Scheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/Scheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/Scheduler.html", "kind" : "trait"}, {"name" : "monix.execution.UncaughtExceptionReporter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/UncaughtExceptionReporter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/UncaughtExceptionReporter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/UncaughtExceptionReporter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/UncaughtExceptionReporter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/UncaughtExceptionReporter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/UncaughtExceptionReporter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/UncaughtExceptionReporter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/UncaughtExceptionReporter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/UncaughtExceptionReporter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/UncaughtExceptionReporter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/UncaughtExceptionReporter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/UncaughtExceptionReporter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/UncaughtExceptionReporter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/UncaughtExceptionReporter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/UncaughtExceptionReporter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/UncaughtExceptionReporter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/UncaughtExceptionReporter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/UncaughtExceptionReporter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/UncaughtExceptionReporter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportFailure", "tail" : "(ex: Throwable): Unit", "member" : "monix.execution.UncaughtExceptionReporter.reportFailure", "link" : "monix\/execution\/UncaughtExceptionReporter.html#reportFailure(ex:Throwable):Unit", "kind" : "abstract def"}], "shortDescription" : "An exception reporter is a function that logs an uncaught error.", "object" : "monix\/execution\/UncaughtExceptionReporter$.html", "members_object" : [{"label" : "LogExceptionsToStandardErr", "tail" : ": UncaughtExceptionReporter", "member" : "monix.execution.UncaughtExceptionReporter.LogExceptionsToStandardErr", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#LogExceptionsToStandardErr:monix.execution.UncaughtExceptionReporter", "kind" : "val"}, {"label" : "apply", "tail" : "(reporter: (Throwable) â‡’ Unit): UncaughtExceptionReporter", "member" : "monix.execution.UncaughtExceptionReporter.apply", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#apply(reporter:Throwable=>Unit):monix.execution.UncaughtExceptionReporter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/UncaughtExceptionReporter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/UncaughtExceptionReporter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/UncaughtExceptionReporter.html", "kind" : "trait"}], "monix.reactive.subjects" : [{"name" : "monix.reactive.subjects.AsyncSubject", "shortDescription" : "An AsyncSubject emits the last value (and only the last value) emitted bythe source and only after the source completes.", "object" : "monix\/reactive\/subjects\/AsyncSubject$.html", "members_class" : [{"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.subjects.AsyncSubject.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[T]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.subjects.AsyncSubject.onComplete", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.subjects.AsyncSubject.onError", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Ack", "member" : "monix.reactive.subjects.AsyncSubject.onNext", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onNext(elem:T):monix.execution.Ack", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.AsyncSubject.size", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#size:Int", "kind" : "def"}, {"member" : "monix.reactive.subjects.AsyncSubject#<init>", "error" : "unsupported entity"}, {"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/AsyncSubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/AsyncSubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): AsyncSubject[T]", "member" : "monix.reactive.subjects.AsyncSubject.apply", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#apply[T]():monix.reactive.subjects.AsyncSubject[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/AsyncSubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/AsyncSubject.html", "kind" : "class"}, {"name" : "monix.reactive.subjects.BehaviorSubject", "shortDescription" : "BehaviorSubject when subscribed, will emit the most recently emitted item by the source,or the initialValue (as the seed) in case no value has yet been emitted, then continuingto emit events subsequent to the time of invocation.", "object" : "monix\/reactive\/subjects\/BehaviorSubject$.html", "members_class" : [{"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.subjects.BehaviorSubject.onComplete", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.subjects.BehaviorSubject.onError", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.subjects.BehaviorSubject.onNext", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.subjects.BehaviorSubject.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[T]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.BehaviorSubject.size", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#size:Int", "kind" : "def"}, {"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/BehaviorSubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(initialValue: T): BehaviorSubject[T]", "member" : "monix.reactive.subjects.BehaviorSubject.apply", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#apply[T](initialValue:T):monix.reactive.subjects.BehaviorSubject[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/BehaviorSubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/BehaviorSubject.html", "kind" : "class"}, {"name" : "monix.reactive.subjects.ConcurrentSubject", "shortDescription" : "A concurrent subject is meant for imperative style feeding of events.", "object" : "monix\/reactive\/subjects\/ConcurrentSubject$.html", "members_class" : [{"member" : "monix.reactive.subjects.ConcurrentSubject#<init>", "error" : "unsupported entity"}, {"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[I, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[I, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (O) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (O) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[O]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Task[Option[O]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Task[Option[O]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[O]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[O]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[O]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[O]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[O]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[O]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (O) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (O) â‡’ Boolean): Task[Option[O]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (O) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[O]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[O]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[O]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[O]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[O]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[O, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[O, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[O, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[O, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (O) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (O) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (O) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[O])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[O]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[O])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(O, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(O, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (O, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (O, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (O, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (O, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (O, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, O) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[O]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (O) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[O, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[O, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[O]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (O) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (O) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (O) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (O) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (O) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (O) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, O]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (O) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (O) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (O, Int) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (O) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (O, Ack) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (O, Ack) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (O) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (O) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (O) â‡’ K): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (O) â‡’ K): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[O, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (O) â‡’ Observable[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(O, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onNext", "tail" : "(elem: I): Ack", "member" : "monix.reactive.Observer.Sync.onNext", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onNext(elem:T):monix.execution.Ack", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.Subject.size", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#size:Int", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.Observer.onComplete", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onComplete():Unit", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.Observer.onError", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#onError(ex:Throwable):Unit", "kind" : "abstract def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[O]): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/ConcurrentSubject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "abstract def"}], "members_object" : [{"label" : "toReactiveProcessor", "tail" : "(source: ConcurrentSubject[I, O], bufferSize: Int)(s: Scheduler): Processor[I, O]", "member" : "monix.reactive.subjects.ConcurrentSubject.toReactiveProcessor", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#toReactiveProcessor[I,O](source:monix.reactive.subjects.ConcurrentSubject[I,O],bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,O]", "kind" : "def"}, {"label" : "replayLimited", "tail" : "(capacity: Int, initial: Seq[A], strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replayLimited", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replayLimited[A](capacity:Int,initial:Seq[A],strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replayLimited", "tail" : "(capacity: Int, initial: Seq[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replayLimited", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replayLimited[A](capacity:Int,initial:Seq[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replayLimited", "tail" : "(capacity: Int, strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replayLimited", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replayLimited[A](capacity:Int,strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replayLimited", "tail" : "(capacity: Int)(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replayLimited", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replayLimited[A](capacity:Int)(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replay", "tail" : "(initial: Seq[A], strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replay", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replay[A](initial:Seq[A],strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replay", "tail" : "(initial: Seq[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replay", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replay[A](initial:Seq[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replay", "tail" : "(strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replay", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replay[A](strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.replay", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#replay[A](implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "async", "tail" : "(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.async", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#async[A](implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initial: A, strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.behavior", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#behavior[A](initial:A,strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initial: A)(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.behavior", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#behavior[A](initial:A)(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "publishToOne", "tail" : "(strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.publishToOne", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#publishToOne[A](strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "publishToOne", "tail" : "(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.publishToOne", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#publishToOne[A](implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "publish", "tail" : "(strategy: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.publish", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#publish[A](strategy:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.publish", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#publish[A](implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "from", "tail" : "(p: Subject[I, O], overflowStrategy: Synchronous[I])(s: Scheduler): ConcurrentSubject[I, O]", "member" : "monix.reactive.subjects.ConcurrentSubject.from", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#from[I,O](p:monix.reactive.subjects.Subject[I,O],overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[I])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[I,O]", "kind" : "def"}, {"label" : "apply", "tail" : "(multicast: MulticastStrategy[A], overflow: Synchronous[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.apply", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#apply[A](multicast:monix.reactive.MulticastStrategy[A],overflow:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(multicast: MulticastStrategy[A])(s: Scheduler): ConcurrentSubject[A, A]", "member" : "monix.reactive.subjects.ConcurrentSubject.apply", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#apply[A](multicast:monix.reactive.MulticastStrategy[A])(implicits:monix.execution.Scheduler):monix.reactive.subjects.ConcurrentSubject[A,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/ConcurrentSubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/ConcurrentSubject.html", "kind" : "class"}, {"name" : "monix.reactive.subjects.PublishSubject", "shortDescription" : "A PublishSubject emits to a subscriber only those items that areemitted by the source subsequent to the time of the subscription.", "object" : "monix\/reactive\/subjects\/PublishSubject$.html", "members_class" : [{"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.subjects.PublishSubject.onComplete", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.subjects.PublishSubject.onError", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.subjects.PublishSubject.onNext", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.subjects.PublishSubject.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/PublishSubject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[T]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.PublishSubject.size", "link" : "monix\/reactive\/subjects\/PublishSubject.html#size:Int", "kind" : "def"}, {"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/PublishSubject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/PublishSubject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/PublishSubject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/PublishSubject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/PublishSubject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/PublishSubject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/PublishSubject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/PublishSubject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/PublishSubject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/PublishSubject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/PublishSubject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/PublishSubject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/PublishSubject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/PublishSubject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/PublishSubject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/PublishSubject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/PublishSubject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/PublishSubject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/PublishSubject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/PublishSubject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/PublishSubject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/PublishSubject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/PublishSubject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/PublishSubject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/PublishSubject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/PublishSubject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/PublishSubject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/PublishSubject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/PublishSubject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/PublishSubject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/PublishSubject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/PublishSubject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/PublishSubject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/PublishSubject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/PublishSubject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/PublishSubject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/PublishSubject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/PublishSubject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/PublishSubject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/PublishSubject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/PublishSubject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/PublishSubject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/PublishSubject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/PublishSubject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/PublishSubject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/PublishSubject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/PublishSubject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/PublishSubject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/PublishSubject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/PublishSubject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/PublishSubject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/PublishSubject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/PublishSubject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/PublishSubject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/PublishSubject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/PublishSubject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/PublishSubject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/PublishSubject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/PublishSubject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/PublishSubject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/PublishSubject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/PublishSubject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/PublishSubject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/PublishSubject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/PublishSubject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/PublishSubject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/PublishSubject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/PublishSubject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/PublishSubject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/PublishSubject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/PublishSubject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/PublishSubject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/PublishSubject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/PublishSubject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/PublishSubject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/PublishSubject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/PublishSubject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/PublishSubject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/PublishSubject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/PublishSubject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/PublishSubject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/PublishSubject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/PublishSubject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/PublishSubject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/PublishSubject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/PublishSubject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/PublishSubject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/PublishSubject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/PublishSubject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/PublishSubject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/PublishSubject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/PublishSubject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/PublishSubject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/PublishSubject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/PublishSubject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/PublishSubject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/PublishSubject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/PublishSubject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/PublishSubject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/PublishSubject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/PublishSubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/PublishSubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/PublishSubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/PublishSubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/PublishSubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/PublishSubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/PublishSubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishSubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishSubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishSubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/PublishSubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/PublishSubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/PublishSubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/PublishSubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/PublishSubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/PublishSubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/PublishSubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/PublishSubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/PublishSubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): PublishSubject[T]", "member" : "monix.reactive.subjects.PublishSubject.apply", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#apply[T]():monix.reactive.subjects.PublishSubject[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/PublishSubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/PublishSubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/PublishSubject.html", "kind" : "class"}, {"name" : "monix.reactive.subjects.PublishToOneSubject", "shortDescription" : "PublishToOneSubject is a monix.reactive.subjects.PublishSubjectthat can be subscribed at most once.", "object" : "monix\/reactive\/subjects\/PublishToOneSubject$.html", "members_class" : [{"label" : "cancel", "tail" : "(): Unit", "member" : "monix.reactive.subjects.PublishToOneSubject.cancel", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#cancel():Unit", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.reactive.subjects.PublishToOneSubject.isCanceled", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.subjects.PublishToOneSubject.onComplete", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.subjects.PublishToOneSubject.onError", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: A): Future[Ack]", "member" : "monix.reactive.subjects.PublishToOneSubject.onNext", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onNext(elem:A):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[A]): Cancelable", "member" : "monix.reactive.subjects.PublishToOneSubject.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.PublishToOneSubject.size", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#size:Int", "kind" : "def"}, {"label" : "subscription", "tail" : ": Future[Ack]", "member" : "monix.reactive.subjects.PublishToOneSubject.subscription", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscription:scala.concurrent.Future[monix.execution.Ack]", "kind" : "val"}, {"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[A, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[A, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (A) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (A) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[A]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Task[Option[A]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Task[Option[A]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[A]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[A]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[A]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[A]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[A]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[A]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (A) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (A) â‡’ Boolean): Task[Option[A]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (A) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[A]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[A]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[A]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[A]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[A]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[A, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[A, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[A, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[A, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (A) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (A) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (A) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[A])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[A]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[A])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(A, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(A, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (A, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (A, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (A, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (A, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (A, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, A) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[A]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (A) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[A, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[A, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[A]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (A) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (A) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (A) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (A) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (A) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, A]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (A) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (A) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (A, Int) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (A) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (A, Ack) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (A, Ack) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (A) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (A) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (A) â‡’ K): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (A) â‡’ K): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[A, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (A) â‡’ Observable[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(A, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/PublishToOneSubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): PublishToOneSubject[A]", "member" : "monix.reactive.subjects.PublishToOneSubject.apply", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#apply[A]():monix.reactive.subjects.PublishToOneSubject[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/PublishToOneSubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/PublishToOneSubject.html", "kind" : "class"}, {"name" : "monix.reactive.subjects.ReplaySubject", "shortDescription" : "ReplaySubject emits to any observer all of the items that were emittedby the source, regardless of when the observer subscribes.", "object" : "monix\/reactive\/subjects\/ReplaySubject$.html", "members_class" : [{"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.subjects.ReplaySubject.onComplete", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.subjects.ReplaySubject.onError", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.subjects.ReplaySubject.onNext", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.subjects.ReplaySubject.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[T]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.ReplaySubject.size", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#size:Int", "kind" : "def"}, {"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[T, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/ReplaySubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/ReplaySubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createLimited", "tail" : "(capacity: Int, initial: Seq[T]): ReplaySubject[T]", "member" : "monix.reactive.subjects.ReplaySubject.createLimited", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#createLimited[T](capacity:Int,initial:Seq[T]):monix.reactive.subjects.ReplaySubject[T]", "kind" : "def"}, {"label" : "createLimited", "tail" : "(capacity: Int): ReplaySubject[T]", "member" : "monix.reactive.subjects.ReplaySubject.createLimited", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#createLimited[T](capacity:Int):monix.reactive.subjects.ReplaySubject[T]", "kind" : "def"}, {"label" : "create", "tail" : "(initial: Seq[T]): ReplaySubject[T]", "member" : "monix.reactive.subjects.ReplaySubject.create", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#create[T](initial:Seq[T]):monix.reactive.subjects.ReplaySubject[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(initial: T*): ReplaySubject[T]", "member" : "monix.reactive.subjects.ReplaySubject.apply", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#apply[T](initial:T*):monix.reactive.subjects.ReplaySubject[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/ReplaySubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/ReplaySubject.html", "kind" : "class"}, {"name" : "monix.reactive.subjects.Subject", "shortDescription" : "A Subject is a sort of bridge or proxy that acts both as anObserver and as an Observable and that must respectthe contract of both.", "object" : "monix\/reactive\/subjects\/Subject$.html", "members_class" : [{"label" : "toReactive", "tail" : "(bufferSize: Int)(s: Scheduler): Processor[I, U]", "member" : "monix.reactive.subjects.Subject.toReactive", "link" : "monix\/reactive\/subjects\/Subject.html#toReactive[U>:O](bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Processor[I, U]", "member" : "monix.reactive.subjects.Subject.toReactivePublisher", "link" : "monix\/reactive\/subjects\/Subject.html#toReactivePublisher[U>:O](implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,U]", "kind" : "def"}, {"member" : "monix.reactive.subjects.Subject#<init>", "error" : "unsupported entity"}, {"label" : "foreach", "tail" : "(cb: (O) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/subjects\/Subject.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (O) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/subjects\/Subject.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[O]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/subjects\/Subject.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/subjects\/Subject.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/subjects\/Subject.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Task[Option[O]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/subjects\/Subject.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/subjects\/Subject.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Task[Option[O]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/subjects\/Subject.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/subjects\/Subject.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/subjects\/Subject.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/subjects\/Subject.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[O]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/subjects\/Subject.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[O]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/subjects\/Subject.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/subjects\/Subject.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/subjects\/Subject.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[O]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/subjects\/Subject.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[O]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/subjects\/Subject.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/subjects\/Subject.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[O]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/subjects\/Subject.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[O]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/subjects\/Subject.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (O) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/subjects\/Subject.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/subjects\/Subject.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/subjects\/Subject.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (O) â‡’ Boolean): Task[Option[O]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/subjects\/Subject.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (O) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/subjects\/Subject.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/subjects\/Subject.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[O]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/subjects\/Subject.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[O]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/subjects\/Subject.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/subjects\/Subject.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/Subject.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/subjects\/Subject.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/subjects\/Subject.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[O]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/Subject.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[O]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/subjects\/Subject.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[O]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/subjects\/Subject.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[O]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/subjects\/Subject.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/subjects\/Subject.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/subjects\/Subject.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[O, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/subjects\/Subject.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[O, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/subjects\/Subject.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[O, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/subjects\/Subject.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[O, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/subjects\/Subject.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (O) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/Subject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/Subject.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (O) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/Subject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (O) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/Subject.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[O])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/Subject.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[O]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/subjects\/Subject.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[O])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/Subject.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(O, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/subjects\/Subject.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/subjects\/Subject.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(O, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/subjects\/Subject.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (O, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/subjects\/Subject.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (O, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/subjects\/Subject.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (O, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/subjects\/Subject.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (O, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/subjects\/Subject.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (O, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/subjects\/Subject.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/subjects\/Subject.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/subjects\/Subject.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/subjects\/Subject.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/subjects\/Subject.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/subjects\/Subject.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/subjects\/Subject.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/subjects\/Subject.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/subjects\/Subject.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/subjects\/Subject.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/subjects\/Subject.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/subjects\/Subject.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/subjects\/Subject.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/subjects\/Subject.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/subjects\/Subject.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/subjects\/Subject.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/subjects\/Subject.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/subjects\/Subject.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/subjects\/Subject.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/subjects\/Subject.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/subjects\/Subject.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/subjects\/Subject.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/subjects\/Subject.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/subjects\/Subject.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/subjects\/Subject.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, O) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/subjects\/Subject.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/subjects\/Subject.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/subjects\/Subject.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/subjects\/Subject.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/subjects\/Subject.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/subjects\/Subject.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/subjects\/Subject.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/subjects\/Subject.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[O]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/subjects\/Subject.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/subjects\/Subject.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/subjects\/Subject.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/subjects\/Subject.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/subjects\/Subject.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/subjects\/Subject.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/subjects\/Subject.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/subjects\/Subject.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/subjects\/Subject.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/subjects\/Subject.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/subjects\/Subject.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (O) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/subjects\/Subject.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[O, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[O, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/subjects\/Subject.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/subjects\/Subject.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/subjects\/Subject.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[O]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/subjects\/Subject.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (O) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/subjects\/Subject.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (O) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/subjects\/Subject.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (O) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/Subject.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (O) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/subjects\/Subject.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (O) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/subjects\/Subject.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/subjects\/Subject.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/subjects\/Subject.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/subjects\/Subject.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/subjects\/Subject.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/subjects\/Subject.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/subjects\/Subject.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (O) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, O]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/subjects\/Subject.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (O) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/subjects\/Subject.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/subjects\/Subject.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/subjects\/Subject.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/subjects\/Subject.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/subjects\/Subject.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/subjects\/Subject.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/subjects\/Subject.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/subjects\/Subject.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/subjects\/Subject.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/subjects\/Subject.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/subjects\/Subject.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/subjects\/Subject.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (O) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/subjects\/Subject.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/subjects\/Subject.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/subjects\/Subject.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/subjects\/Subject.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/subjects\/Subject.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/subjects\/Subject.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (O, Int) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/subjects\/Subject.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (O) â‡’ Boolean): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/subjects\/Subject.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/subjects\/Subject.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/subjects\/Subject.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/subjects\/Subject.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/subjects\/Subject.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/subjects\/Subject.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/subjects\/Subject.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (O) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/subjects\/Subject.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (O, Ack) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/subjects\/Subject.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (O, Ack) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/subjects\/Subject.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (O) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/subjects\/Subject.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (O) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/subjects\/Subject.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/subjects\/Subject.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/subjects\/Subject.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/subjects\/Subject.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/subjects\/Subject.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/subjects\/Subject.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/subjects\/Subject.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/subjects\/Subject.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/subjects\/Subject.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/subjects\/Subject.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/subjects\/Subject.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/subjects\/Subject.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (O) â‡’ K): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/subjects\/Subject.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/subjects\/Subject.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (O) â‡’ K): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/subjects\/Subject.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/subjects\/Subject.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[O, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/subjects\/Subject.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/subjects\/Subject.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/subjects\/Subject.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (O) â‡’ Observable[B]): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/subjects\/Subject.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/subjects\/Subject.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/subjects\/Subject.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/subjects\/Subject.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/subjects\/Subject.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/subjects\/Subject.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[O]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/subjects\/Subject.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/subjects\/Subject.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/subjects\/Subject.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (O) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/subjects\/Subject.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[O, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/subjects\/Subject.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/subjects\/Subject.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/subjects\/Subject.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(O, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/subjects\/Subject.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/subjects\/Subject.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/subjects\/Subject.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/Subject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/subjects\/Subject.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/subjects\/Subject.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/subjects\/Subject.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/subjects\/Subject.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/subjects\/Subject.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/subjects\/Subject.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/subjects\/Subject.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/subjects\/Subject.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/subjects\/Subject.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/subjects\/Subject.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/subjects\/Subject.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/Subject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/Subject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/Subject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/Subject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/Subject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/Subject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/Subject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/Subject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/Subject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/Subject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/Subject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/Subject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/Subject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/Subject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/Subject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/Subject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/Subject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/Subject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/Subject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "monix.reactive.subjects.Subject.size", "link" : "monix\/reactive\/subjects\/Subject.html#size:Int", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.Observer.onComplete", "link" : "monix\/reactive\/subjects\/Subject.html#onComplete():Unit", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.Observer.onError", "link" : "monix\/reactive\/subjects\/Subject.html#onError(ex:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onNext", "tail" : "(elem: I): Future[Ack]", "member" : "monix.reactive.Observer.onNext", "link" : "monix\/reactive\/subjects\/Subject.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "abstract def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[O]): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/subjects\/Subject.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "abstract def"}], "members_object" : [{"label" : "toReactiveProcessor", "tail" : "(source: Subject[I, O], bufferSize: Int)(s: Scheduler): Processor[I, O]", "member" : "monix.reactive.subjects.Subject.toReactiveProcessor", "link" : "monix\/reactive\/subjects\/Subject$.html#toReactiveProcessor[I,O](source:monix.reactive.subjects.Subject[I,O],bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Processor[I,O]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/subjects\/Subject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/subjects\/Subject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/subjects\/Subject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/subjects\/Subject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/subjects\/Subject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/subjects\/Subject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/subjects\/Subject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/Subject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/Subject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/subjects\/Subject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/subjects\/Subject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/subjects\/Subject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/subjects\/Subject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/subjects\/Subject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/subjects\/Subject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/subjects\/Subject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/subjects\/Subject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/subjects\/Subject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/subjects\/Subject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/subjects\/Subject.html", "kind" : "class"}], "monix.eval" : [{"name" : "monix.eval.Callback", "shortDescription" : "Represents a callback that should be called asynchronouslywith the result of a computation.", "object" : "monix\/eval\/Callback$.html", "members_class" : [{"label" : "apply", "tail" : "(result: Coeval[T]): Unit", "member" : "monix.eval.Callback.apply", "link" : "monix\/eval\/Callback.html#apply(result:monix.eval.Coeval[T]):Unit", "kind" : "final def"}, {"label" : "apply", "tail" : "(result: Try[T]): Unit", "member" : "monix.eval.Callback.apply", "link" : "monix\/eval\/Callback.html#apply(result:scala.util.Try[T]):Unit", "kind" : "final def"}, {"label" : "onValue", "tail" : "(value: T): Unit", "member" : "monix.eval.Callback.onValue", "link" : "monix\/eval\/Callback.html#onValue(value:T):Unit", "kind" : "final def"}, {"member" : "monix.eval.Callback#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/eval\/Callback.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Unit) â‡’ A): (Try[T]) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/eval\/Callback.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Try[T]): (A) â‡’ Unit", "member" : "scala.Function1.compose", "link" : "monix\/eval\/Callback.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/Callback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/Callback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/Callback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/Callback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/Callback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/Callback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/Callback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Callback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Callback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Callback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/Callback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/Callback.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/Callback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/Callback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/Callback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/Callback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/Callback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/Callback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.eval.Callback.onError", "link" : "monix\/eval\/Callback.html#onError(ex:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onSuccess", "tail" : "(value: T): Unit", "member" : "monix.eval.Callback.onSuccess", "link" : "monix\/eval\/Callback.html#onSuccess(value:T):Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "Extensions", "tail" : "", "member" : "monix.eval.Callback.Extensions", "link" : "monix\/eval\/Callback$.html#Extensions[-A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "async", "tail" : "(cb: Callback[A])(s: Scheduler): Callback[A]", "member" : "monix.eval.Callback.async", "link" : "monix\/eval\/Callback$.html#async[A](cb:monix.eval.Callback[A])(implicits:monix.execution.Scheduler):monix.eval.Callback[A]", "kind" : "def"}, {"label" : "fromPromise", "tail" : "(p: Promise[A]): Callback[A]", "member" : "monix.eval.Callback.fromPromise", "link" : "monix\/eval\/Callback$.html#fromPromise[A](p:scala.concurrent.Promise[A]):monix.eval.Callback[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(r: UncaughtExceptionReporter): Callback[T]", "member" : "monix.eval.Callback.empty", "link" : "monix\/eval\/Callback$.html#empty[T](implicitr:monix.execution.UncaughtExceptionReporter):monix.eval.Callback[T]", "kind" : "def"}, {"label" : "safe", "tail" : "(cb: Callback[T])(r: UncaughtExceptionReporter): Callback[T]", "member" : "monix.eval.Callback.safe", "link" : "monix\/eval\/Callback$.html#safe[T](cb:monix.eval.Callback[T])(implicitr:monix.execution.UncaughtExceptionReporter):monix.eval.Callback[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/Callback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/Callback$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/Callback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/Callback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/Callback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/Callback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/Callback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Callback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Callback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Callback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/Callback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/Callback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/Callback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/Callback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/Callback$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/Callback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/Callback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/Callback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/Callback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/eval\/Callback.html", "kind" : "class"}, {"name" : "monix.eval.Coeval", "shortDescription" : "Coeval represents lazy computations that can execute synchronously.", "object" : "monix\/eval\/Coeval$.html", "members_class" : [{"label" : "zipMap", "tail" : "(that: Coeval[B])(f: (A, B) â‡’ C): Coeval[C]", "member" : "monix.eval.Coeval.zipMap", "link" : "monix\/eval\/Coeval.html#zipMap[B,C](that:monix.eval.Coeval[B])(f:(A,B)=>C):monix.eval.Coeval[C]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Coeval[B]): Coeval[(A, B)]", "member" : "monix.eval.Coeval.zip", "link" : "monix\/eval\/Coeval.html#zip[B](that:monix.eval.Coeval[B]):monix.eval.Coeval[(A,B)]", "kind" : "def"}, {"label" : "doOnFinish", "tail" : "(f: (Option[Throwable]) â‡’ Coeval[Unit]): Coeval[A]", "member" : "monix.eval.Coeval.doOnFinish", "link" : "monix\/eval\/Coeval.html#doOnFinish(f:Option[Throwable]=>monix.eval.Coeval[Unit]):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "memoizeOnSuccess", "tail" : "(): Coeval[A]", "member" : "monix.eval.Coeval.memoizeOnSuccess", "link" : "monix\/eval\/Coeval.html#memoizeOnSuccess:monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "memoize", "tail" : "(): Coeval[A]", "member" : "monix.eval.Coeval.memoize", "link" : "monix\/eval\/Coeval.html#memoize:monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, U]): Coeval[U]", "member" : "monix.eval.Coeval.onErrorRecover", "link" : "monix\/eval\/Coeval.html#onErrorRecover[U>:A](pf:PartialFunction[Throwable,U]):monix.eval.Coeval[U]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ U): Coeval[U]", "member" : "monix.eval.Coeval.onErrorHandle", "link" : "monix\/eval\/Coeval.html#onErrorHandle[U>:A](f:Throwable=>U):monix.eval.Coeval[U]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Coeval[A]", "member" : "monix.eval.Coeval.onErrorRestartIf", "link" : "monix\/eval\/Coeval.html#onErrorRestartIf(p:Throwable=>Boolean):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Coeval[A]", "member" : "monix.eval.Coeval.onErrorRestart", "link" : "monix\/eval\/Coeval.html#onErrorRestart(maxRetries:Long):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Coeval[B]): Coeval[B]", "member" : "monix.eval.Coeval.onErrorFallbackTo", "link" : "monix\/eval\/Coeval.html#onErrorFallbackTo[B>:A](that:monix.eval.Coeval[B]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Coeval[B]): Coeval[B]", "member" : "monix.eval.Coeval.onErrorHandleWith", "link" : "monix\/eval\/Coeval.html#onErrorHandleWith[B>:A](f:Throwable=>monix.eval.Coeval[B]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Coeval[B]]): Coeval[B]", "member" : "monix.eval.Coeval.onErrorRecoverWith", "link" : "monix\/eval\/Coeval.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.eval.Coeval[B]]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (A) â‡’ Boolean): Coeval[A]", "member" : "monix.eval.Coeval.restartUntil", "link" : "monix\/eval\/Coeval.html#restartUntil(p:A=>Boolean):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "dematerializeAttempt", "tail" : "(ev: <:<[A, Attempt[B]]): Coeval[B]", "member" : "monix.eval.Coeval.dematerializeAttempt", "link" : "monix\/eval\/Coeval.html#dematerializeAttempt[B](implicitev:<:<[A,monix.eval.Coeval.Attempt[B]]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[A, Try[B]]): Coeval[B]", "member" : "monix.eval.Coeval.dematerialize", "link" : "monix\/eval\/Coeval.html#dematerialize[B](implicitev:<:<[A,scala.util.Try[B]]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "materializeAttempt", "tail" : "(): Coeval[Attempt[A]]", "member" : "monix.eval.Coeval.materializeAttempt", "link" : "monix\/eval\/Coeval.html#materializeAttempt:monix.eval.Coeval[monix.eval.Coeval.Attempt[A]]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Coeval[Try[A]]", "member" : "monix.eval.Coeval.materialize", "link" : "monix\/eval\/Coeval.html#materialize:monix.eval.Coeval[scala.util.Try[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) â‡’ B): Coeval[B]", "member" : "monix.eval.Coeval.map", "link" : "monix\/eval\/Coeval.html#map[B](f:A=>B):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) â‡’ Unit): Unit", "member" : "monix.eval.Coeval.foreach", "link" : "monix\/eval\/Coeval.html#foreach(f:A=>Unit):Unit", "kind" : "def"}, {"label" : "foreachL", "tail" : "(f: (A) â‡’ Unit): Coeval[Unit]", "member" : "monix.eval.Coeval.foreachL", "link" : "monix\/eval\/Coeval.html#foreachL(f:A=>Unit):monix.eval.Coeval[Unit]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Coeval[Throwable]", "member" : "monix.eval.Coeval.failed", "link" : "monix\/eval\/Coeval.html#failed:monix.eval.Coeval[Throwable]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Coeval[B]]): Coeval[B]", "member" : "monix.eval.Coeval.flatten", "link" : "monix\/eval\/Coeval.html#flatten[B](implicitev:<:<[A,monix.eval.Coeval[B]]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) â‡’ Coeval[B]): Coeval[B]", "member" : "monix.eval.Coeval.flatMap", "link" : "monix\/eval\/Coeval.html#flatMap[B](f:A=>monix.eval.Coeval[B]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "task", "tail" : "(): Task[A]", "member" : "monix.eval.Coeval.task", "link" : "monix\/eval\/Coeval.html#task:monix.eval.Task[A]", "kind" : "def"}, {"label" : "runTry", "tail" : "(): Try[A]", "member" : "monix.eval.Coeval.runTry", "link" : "monix\/eval\/Coeval.html#runTry:scala.util.Try[A]", "kind" : "def"}, {"label" : "runAttempt", "tail" : "(): Attempt[A]", "member" : "monix.eval.Coeval.runAttempt", "link" : "monix\/eval\/Coeval.html#runAttempt:monix.eval.Coeval.Attempt[A]", "kind" : "def"}, {"label" : "value", "tail" : "(): A", "member" : "monix.eval.Coeval.value", "link" : "monix\/eval\/Coeval.html#value:A", "kind" : "def"}, {"label" : "apply", "tail" : "(): A", "member" : "monix.eval.Coeval.apply", "link" : "monix\/eval\/Coeval.html#apply():A", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function0.toString", "link" : "monix\/eval\/Coeval.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/Coeval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/Coeval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/Coeval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/Coeval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/Coeval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/Coeval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/Coeval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Coeval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Coeval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Coeval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/Coeval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/Coeval.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/Coeval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/Coeval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/Coeval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/Coeval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/Coeval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/Coeval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TypeClassInstances", "tail" : "", "member" : "monix.eval.Coeval.TypeClassInstances", "link" : "monix\/eval\/Coeval$.html#TypeClassInstancesextendsSuspendable.Instance[monix.eval.Coeval]withMemoizable.Instance[monix.eval.Coeval]withMonadError.Instance[monix.eval.Coeval,Throwable]withComonad.Instance[monix.eval.Coeval]withMonadRec.Instance[monix.eval.Coeval]", "kind" : "class"}, {"label" : "typeClassInstances", "tail" : ": TypeClassInstances", "member" : "monix.eval.Coeval.typeClassInstances", "link" : "monix\/eval\/Coeval$.html#typeClassInstances:monix.eval.Coeval.TypeClassInstances", "kind" : "implicit val"}, {"label" : "Always", "tail" : "", "member" : "monix.eval.Coeval.Always", "link" : "monix\/eval\/Coeval$.html#Always[+A]extendsCoeval[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Once", "tail" : "", "member" : "monix.eval.Coeval.Once", "link" : "monix\/eval\/Coeval$.html#Once", "kind" : "object"}, {"label" : "Once", "tail" : "", "member" : "monix.eval.Coeval.Once", "link" : "monix\/eval\/Coeval$.html#Once[+A]extendsCoeval[A]with()=>A", "kind" : "final class"}, {"label" : "Error", "tail" : "", "member" : "monix.eval.Coeval.Error", "link" : "monix\/eval\/Coeval$.html#ErrorextendsCoeval.Attempt[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Now", "tail" : "", "member" : "monix.eval.Coeval.Now", "link" : "monix\/eval\/Coeval$.html#Now[+A]extendsCoeval.Attempt[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Attempt", "tail" : "", "member" : "monix.eval.Coeval.Attempt", "link" : "monix\/eval\/Coeval$.html#Attempt", "kind" : "object"}, {"label" : "Attempt", "tail" : "", "member" : "monix.eval.Coeval.Attempt", "link" : "monix\/eval\/Coeval$.html#Attempt[+A]extendsCoeval[A]withProduct", "kind" : "sealed abstract class"}, {"label" : "zipMap6", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3], fa4: Coeval[A4], fa5: Coeval[A5], fa6: Coeval[A6])(f: (A1, A2, A3, A4, A5, A6) â‡’ R): Coeval[R]", "member" : "monix.eval.Coeval.zipMap6", "link" : "monix\/eval\/Coeval$.html#zipMap6[A1,A2,A3,A4,A5,A6,R](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3],fa4:monix.eval.Coeval[A4],fa5:monix.eval.Coeval[A5],fa6:monix.eval.Coeval[A6])(f:(A1,A2,A3,A4,A5,A6)=>R):monix.eval.Coeval[R]", "kind" : "def"}, {"label" : "zipMap5", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3], fa4: Coeval[A4], fa5: Coeval[A5])(f: (A1, A2, A3, A4, A5) â‡’ R): Coeval[R]", "member" : "monix.eval.Coeval.zipMap5", "link" : "monix\/eval\/Coeval$.html#zipMap5[A1,A2,A3,A4,A5,R](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3],fa4:monix.eval.Coeval[A4],fa5:monix.eval.Coeval[A5])(f:(A1,A2,A3,A4,A5)=>R):monix.eval.Coeval[R]", "kind" : "def"}, {"label" : "zipMap4", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3], fa4: Coeval[A4])(f: (A1, A2, A3, A4) â‡’ R): Coeval[R]", "member" : "monix.eval.Coeval.zipMap4", "link" : "monix\/eval\/Coeval$.html#zipMap4[A1,A2,A3,A4,R](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3],fa4:monix.eval.Coeval[A4])(f:(A1,A2,A3,A4)=>R):monix.eval.Coeval[R]", "kind" : "def"}, {"label" : "zipMap3", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3])(f: (A1, A2, A3) â‡’ R): Coeval[R]", "member" : "monix.eval.Coeval.zipMap3", "link" : "monix\/eval\/Coeval$.html#zipMap3[A1,A2,A3,R](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3])(f:(A1,A2,A3)=>R):monix.eval.Coeval[R]", "kind" : "def"}, {"label" : "zip6", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3], fa4: Coeval[A4], fa5: Coeval[A5], fa6: Coeval[A6]): Coeval[(A1, A2, A3, A4, A5, A6)]", "member" : "monix.eval.Coeval.zip6", "link" : "monix\/eval\/Coeval$.html#zip6[A1,A2,A3,A4,A5,A6](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3],fa4:monix.eval.Coeval[A4],fa5:monix.eval.Coeval[A5],fa6:monix.eval.Coeval[A6]):monix.eval.Coeval[(A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "zip5", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3], fa4: Coeval[A4], fa5: Coeval[A5]): Coeval[(A1, A2, A3, A4, A5)]", "member" : "monix.eval.Coeval.zip5", "link" : "monix\/eval\/Coeval$.html#zip5[A1,A2,A3,A4,A5](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3],fa4:monix.eval.Coeval[A4],fa5:monix.eval.Coeval[A5]):monix.eval.Coeval[(A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "zip4", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3], fa4: Coeval[A4]): Coeval[(A1, A2, A3, A4)]", "member" : "monix.eval.Coeval.zip4", "link" : "monix\/eval\/Coeval$.html#zip4[A1,A2,A3,A4](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3],fa4:monix.eval.Coeval[A4]):monix.eval.Coeval[(A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "zip3", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2], fa3: Coeval[A3]): Coeval[(A1, A2, A3)]", "member" : "monix.eval.Coeval.zip3", "link" : "monix\/eval\/Coeval$.html#zip3[A1,A2,A3](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2],fa3:monix.eval.Coeval[A3]):monix.eval.Coeval[(A1,A2,A3)]", "kind" : "def"}, {"label" : "zipMap2", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2])(f: (A1, A2) â‡’ R): Coeval[R]", "member" : "monix.eval.Coeval.zipMap2", "link" : "monix\/eval\/Coeval$.html#zipMap2[A1,A2,R](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2])(f:(A1,A2)=>R):monix.eval.Coeval[R]", "kind" : "def"}, {"label" : "zip2", "tail" : "(fa1: Coeval[A1], fa2: Coeval[A2]): Coeval[(A1, A2)]", "member" : "monix.eval.Coeval.zip2", "link" : "monix\/eval\/Coeval$.html#zip2[A1,A2,R](fa1:monix.eval.Coeval[A1],fa2:monix.eval.Coeval[A2]):monix.eval.Coeval[(A1,A2)]", "kind" : "def"}, {"label" : "zipList", "tail" : "(sources: Coeval[A]*): Coeval[List[A]]", "member" : "monix.eval.Coeval.zipList", "link" : "monix\/eval\/Coeval$.html#zipList[A](sources:monix.eval.Coeval[A]*):monix.eval.Coeval[List[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(sources: M[A])(f: (A) â‡’ Coeval[B])(cbf: CanBuildFrom[M[A], B, M[B]]): Coeval[M[B]]", "member" : "monix.eval.Coeval.traverse", "link" : "monix\/eval\/Coeval$.html#traverse[A,B,M[X]<:TraversableOnce[X]](sources:M[A])(f:A=>monix.eval.Coeval[B])(implicitcbf:scala.collection.generic.CanBuildFrom[M[A],B,M[B]]):monix.eval.Coeval[M[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(sources: M[Coeval[A]])(cbf: CanBuildFrom[M[Coeval[A]], A, M[A]]): Coeval[M[A]]", "member" : "monix.eval.Coeval.sequence", "link" : "monix\/eval\/Coeval$.html#sequence[A,M[X]<:TraversableOnce[X]](sources:M[monix.eval.Coeval[A]])(implicitcbf:scala.collection.generic.CanBuildFrom[M[monix.eval.Coeval[A]],A,M[A]]):monix.eval.Coeval[M[A]]", "kind" : "def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) â‡’ Coeval[Either[A, B]]): Coeval[B]", "member" : "monix.eval.Coeval.tailRecM", "link" : "monix\/eval\/Coeval$.html#tailRecM[A,B](a:A)(f:A=>monix.eval.Coeval[Either[A,B]]):monix.eval.Coeval[B]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(a: Try[A]): Coeval[A]", "member" : "monix.eval.Coeval.fromTry", "link" : "monix\/eval\/Coeval$.html#fromTry[A](a:scala.util.Try[A]):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "unit", "tail" : ": Coeval[Unit]", "member" : "monix.eval.Coeval.unit", "link" : "monix\/eval\/Coeval$.html#unit:monix.eval.Coeval[Unit]", "kind" : "val"}, {"label" : "delay", "tail" : "(a: â‡’ A): Coeval[A]", "member" : "monix.eval.Coeval.delay", "link" : "monix\/eval\/Coeval$.html#delay[A](a:=>A):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "eval", "tail" : "(a: â‡’ A): Coeval[A]", "member" : "monix.eval.Coeval.eval", "link" : "monix\/eval\/Coeval$.html#eval[A](a:=>A):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "evalOnce", "tail" : "(a: â‡’ A): Coeval[A]", "member" : "monix.eval.Coeval.evalOnce", "link" : "monix\/eval\/Coeval$.html#evalOnce[A](a:=>A):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(fa: â‡’ Coeval[A]): Coeval[A]", "member" : "monix.eval.Coeval.suspend", "link" : "monix\/eval\/Coeval$.html#suspend[A](fa:=>monix.eval.Coeval[A]):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: â‡’ Coeval[A]): Coeval[A]", "member" : "monix.eval.Coeval.defer", "link" : "monix\/eval\/Coeval$.html#defer[A](fa:=>monix.eval.Coeval[A]):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "raiseError", "tail" : "(ex: Throwable): Coeval[A]", "member" : "monix.eval.Coeval.raiseError", "link" : "monix\/eval\/Coeval$.html#raiseError[A](ex:Throwable):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "pure", "tail" : "(a: A): Coeval[A]", "member" : "monix.eval.Coeval.pure", "link" : "monix\/eval\/Coeval$.html#pure[A](a:A):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "now", "tail" : "(a: A): Coeval[A]", "member" : "monix.eval.Coeval.now", "link" : "monix\/eval\/Coeval$.html#now[A](a:A):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: â‡’ A): Coeval[A]", "member" : "monix.eval.Coeval.apply", "link" : "monix\/eval\/Coeval$.html#apply[A](f:=>A):monix.eval.Coeval[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/Coeval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/Coeval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/Coeval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/Coeval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/Coeval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/Coeval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/Coeval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Coeval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Coeval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Coeval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/Coeval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/Coeval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/Coeval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/Coeval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/Coeval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/Coeval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/Coeval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/Coeval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/Coeval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/eval\/Coeval.html", "kind" : "class"}, {"name" : "monix.eval.MVar", "shortDescription" : "A mutable location, that is either empty or containsa value of type A.", "object" : "monix\/eval\/MVar$.html", "members_class" : [{"member" : "monix.eval.MVar#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/MVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/MVar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/MVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/MVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/MVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/MVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/MVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/MVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/MVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/MVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/MVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/MVar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/MVar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/MVar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/MVar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/MVar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/MVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/MVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/MVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "read", "tail" : "(): Task[A]", "member" : "monix.eval.MVar.read", "link" : "monix\/eval\/MVar.html#read:monix.eval.Task[A]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(): Task[A]", "member" : "monix.eval.MVar.take", "link" : "monix\/eval\/MVar.html#take:monix.eval.Task[A]", "kind" : "abstract def"}, {"label" : "put", "tail" : "(a: A): Task[Unit]", "member" : "monix.eval.MVar.put", "link" : "monix\/eval\/MVar.html#put(a:A):monix.eval.Task[Unit]", "kind" : "abstract def"}], "members_object" : [{"label" : "withPadding", "tail" : "(ps: PaddingStrategy): MVar[A]", "member" : "monix.eval.MVar.withPadding", "link" : "monix\/eval\/MVar$.html#withPadding[A](ps:monix.execution.atomic.PaddingStrategy):monix.eval.MVar[A]", "kind" : "def"}, {"label" : "withPadding", "tail" : "(initial: A, ps: PaddingStrategy): MVar[A]", "member" : "monix.eval.MVar.withPadding", "link" : "monix\/eval\/MVar$.html#withPadding[A](initial:A,ps:monix.execution.atomic.PaddingStrategy):monix.eval.MVar[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): MVar[A]", "member" : "monix.eval.MVar.empty", "link" : "monix\/eval\/MVar$.html#empty[A]:monix.eval.MVar[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(initial: A): MVar[A]", "member" : "monix.eval.MVar.apply", "link" : "monix\/eval\/MVar$.html#apply[A](initial:A):monix.eval.MVar[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/MVar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/MVar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/MVar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/MVar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/MVar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/MVar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/MVar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/MVar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/MVar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/MVar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/MVar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/MVar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/MVar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/MVar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/MVar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/MVar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/MVar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/MVar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/MVar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/eval\/MVar.html", "kind" : "class"}, {"name" : "monix.eval.Task", "shortDescription" : "Task represents a specification for a possibly lazy orasynchronous computation, which when executed will produce an Aas a result, along with possible side-effects.", "object" : "monix\/eval\/Task$.html", "members_class" : [{"label" : "zipMap", "tail" : "(that: Task[B])(f: (A, B) â‡’ C): Task[C]", "member" : "monix.eval.Task.zipMap", "link" : "monix\/eval\/Task.html#zipMap[B,C](that:monix.eval.Task[B])(f:(A,B)=>C):monix.eval.Task[C]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Task[B]): Task[(A, B)]", "member" : "monix.eval.Task.zip", "link" : "monix\/eval\/Task.html#zip[B](that:monix.eval.Task[B]):monix.eval.Task[(A,B)]", "kind" : "def"}, {"label" : "timeoutTo", "tail" : "(after: FiniteDuration, backup: Task[B]): Task[B]", "member" : "monix.eval.Task.timeoutTo", "link" : "monix\/eval\/Task.html#timeoutTo[B>:A](after:scala.concurrent.duration.FiniteDuration,backup:monix.eval.Task[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "timeout", "tail" : "(after: FiniteDuration): Task[A]", "member" : "monix.eval.Task.timeout", "link" : "monix\/eval\/Task.html#timeout(after:scala.concurrent.duration.FiniteDuration):monix.eval.Task[A]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Publisher[B]", "member" : "monix.eval.Task.toReactivePublisher", "link" : "monix\/eval\/Task.html#toReactivePublisher[B>:A](implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[B]", "kind" : "def"}, {"label" : "memoizeOnSuccess", "tail" : "(): Task[A]", "member" : "monix.eval.Task.memoizeOnSuccess", "link" : "monix\/eval\/Task.html#memoizeOnSuccess:monix.eval.Task[A]", "kind" : "def"}, {"label" : "memoize", "tail" : "(): Task[A]", "member" : "monix.eval.Task.memoize", "link" : "monix\/eval\/Task.html#memoize:monix.eval.Task[A]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, U]): Task[U]", "member" : "monix.eval.Task.onErrorRecover", "link" : "monix\/eval\/Task.html#onErrorRecover[U>:A](pf:PartialFunction[Throwable,U]):monix.eval.Task[U]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ U): Task[U]", "member" : "monix.eval.Task.onErrorHandle", "link" : "monix\/eval\/Task.html#onErrorHandle[U>:A](f:Throwable=>U):monix.eval.Task[U]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Task[A]", "member" : "monix.eval.Task.onErrorRestartIf", "link" : "monix\/eval\/Task.html#onErrorRestartIf(p:Throwable=>Boolean):monix.eval.Task[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Task[A]", "member" : "monix.eval.Task.onErrorRestart", "link" : "monix\/eval\/Task.html#onErrorRestart(maxRetries:Long):monix.eval.Task[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (A) â‡’ Boolean): Task[A]", "member" : "monix.eval.Task.restartUntil", "link" : "monix\/eval\/Task.html#restartUntil(p:A=>Boolean):monix.eval.Task[A]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Task[B]): Task[B]", "member" : "monix.eval.Task.onErrorFallbackTo", "link" : "monix\/eval\/Task.html#onErrorFallbackTo[B>:A](that:monix.eval.Task[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Task[B]): Task[B]", "member" : "monix.eval.Task.onErrorHandleWith", "link" : "monix\/eval\/Task.html#onErrorHandleWith[B>:A](f:Throwable=>monix.eval.Task[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Task[B]]): Task[B]", "member" : "monix.eval.Task.onErrorRecoverWith", "link" : "monix\/eval\/Task.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.eval.Task[B]]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "dematerializeAttempt", "tail" : "(ev: <:<[A, Attempt[B]]): Task[B]", "member" : "monix.eval.Task.dematerializeAttempt", "link" : "monix\/eval\/Task.html#dematerializeAttempt[B](implicitev:<:<[A,monix.eval.Coeval.Attempt[B]]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[A, Try[B]]): Task[B]", "member" : "monix.eval.Task.dematerialize", "link" : "monix\/eval\/Task.html#dematerialize[B](implicitev:<:<[A,scala.util.Try[B]]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "materializeAttempt", "tail" : "(): Task[Attempt[A]]", "member" : "monix.eval.Task.materializeAttempt", "link" : "monix\/eval\/Task.html#materializeAttempt:monix.eval.Task[monix.eval.Coeval.Attempt[A]]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Task[Try[A]]", "member" : "monix.eval.Task.materialize", "link" : "monix\/eval\/Task.html#materialize:monix.eval.Task[scala.util.Try[A]]", "kind" : "def"}, {"label" : "doOnCancel", "tail" : "(callback: Task[Unit]): Task[A]", "member" : "monix.eval.Task.doOnCancel", "link" : "monix\/eval\/Task.html#doOnCancel(callback:monix.eval.Task[Unit]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "doOnFinish", "tail" : "(f: (Option[Throwable]) â‡’ Task[Unit]): Task[A]", "member" : "monix.eval.Task.doOnFinish", "link" : "monix\/eval\/Task.html#doOnFinish(f:Option[Throwable]=>monix.eval.Task[Unit]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) â‡’ B): Task[B]", "member" : "monix.eval.Task.map", "link" : "monix\/eval\/Task.html#map[B](f:A=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.eval.Task.foreach", "link" : "monix\/eval\/Task.html#foreach(f:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(f: (A) â‡’ Unit): Task[Unit]", "member" : "monix.eval.Task.foreachL", "link" : "monix\/eval\/Task.html#foreachL(f:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Task[Throwable]", "member" : "monix.eval.Task.failed", "link" : "monix\/eval\/Task.html#failed:monix.eval.Task[Throwable]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(s: Scheduler): Task[A]", "member" : "monix.eval.Task.asyncBoundary", "link" : "monix\/eval\/Task.html#asyncBoundary(s:monix.execution.Scheduler):monix.eval.Task[A]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(): Task[A]", "member" : "monix.eval.Task.asyncBoundary", "link" : "monix\/eval\/Task.html#asyncBoundary:monix.eval.Task[A]", "kind" : "def"}, {"label" : "executeWithOptions", "tail" : "(f: (Options) â‡’ Options): Task[A]", "member" : "monix.eval.Task.executeWithOptions", "link" : "monix\/eval\/Task.html#executeWithOptions(f:monix.eval.Task.Options=>monix.eval.Task.Options):monix.eval.Task[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Task[A]", "member" : "monix.eval.Task.executeWithModel", "link" : "monix\/eval\/Task.html#executeWithModel(em:monix.execution.ExecutionModel):monix.eval.Task[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Task[A]", "member" : "monix.eval.Task.executeWithFork", "link" : "monix\/eval\/Task.html#executeWithFork:monix.eval.Task[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(s: Scheduler): Task[A]", "member" : "monix.eval.Task.executeOn", "link" : "monix\/eval\/Task.html#executeOn(s:monix.execution.Scheduler):monix.eval.Task[A]", "kind" : "def"}, {"label" : "delayResultBySelector", "tail" : "(selector: (A) â‡’ Task[B]): Task[A]", "member" : "monix.eval.Task.delayResultBySelector", "link" : "monix\/eval\/Task.html#delayResultBySelector[B](selector:A=>monix.eval.Task[B]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "delayResult", "tail" : "(timespan: FiniteDuration): Task[A]", "member" : "monix.eval.Task.delayResult", "link" : "monix\/eval\/Task.html#delayResult(timespan:scala.concurrent.duration.FiniteDuration):monix.eval.Task[A]", "kind" : "def"}, {"label" : "delayExecutionWith", "tail" : "(trigger: Task[Any]): Task[A]", "member" : "monix.eval.Task.delayExecutionWith", "link" : "monix\/eval\/Task.html#delayExecutionWith(trigger:monix.eval.Task[Any]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "delayExecution", "tail" : "(timespan: FiniteDuration): Task[A]", "member" : "monix.eval.Task.delayExecution", "link" : "monix\/eval\/Task.html#delayExecution(timespan:scala.concurrent.duration.FiniteDuration):monix.eval.Task[A]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Task[B]]): Task[B]", "member" : "monix.eval.Task.flatten", "link" : "monix\/eval\/Task.html#flatten[B](implicitev:<:<[A,monix.eval.Task[B]]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) â‡’ Task[B]): Task[B]", "member" : "monix.eval.Task.flatMap", "link" : "monix\/eval\/Task.html#flatMap[B](f:A=>monix.eval.Task[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "coeval", "tail" : "(s: Scheduler): Coeval[Either[CancelableFuture[A], A]]", "member" : "monix.eval.Task.coeval", "link" : "monix\/eval\/Task.html#coeval(implicits:monix.execution.Scheduler):monix.eval.Coeval[Either[monix.execution.CancelableFuture[A],A]]", "kind" : "def"}, {"label" : "runSyncMaybe", "tail" : "(s: Scheduler): Either[CancelableFuture[A], A]", "member" : "monix.eval.Task.runSyncMaybe", "link" : "monix\/eval\/Task.html#runSyncMaybe(implicits:monix.execution.Scheduler):Either[monix.execution.CancelableFuture[A],A]", "kind" : "def"}, {"label" : "runAsync", "tail" : "(s: Scheduler): CancelableFuture[A]", "member" : "monix.eval.Task.runAsync", "link" : "monix\/eval\/Task.html#runAsync(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[A]", "kind" : "def"}, {"label" : "runOnComplete", "tail" : "(f: (Try[A]) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.eval.Task.runOnComplete", "link" : "monix\/eval\/Task.html#runOnComplete(f:scala.util.Try[A]=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "runAsync", "tail" : "(f: (Try[A]) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.eval.Task.runAsync", "link" : "monix\/eval\/Task.html#runAsync(f:scala.util.Try[A]=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "runAsync", "tail" : "(cb: Callback[A])(s: Scheduler): Cancelable", "member" : "monix.eval.Task.runAsync", "link" : "monix\/eval\/Task.html#runAsync(cb:monix.eval.Callback[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/Task.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/Task.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/Task.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/Task.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/Task.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/Task.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/Task.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Task.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Task.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Task.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/Task.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/Task.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/Task.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/Task.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/Task.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/Task.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/Task.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/Task.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/Task.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TypeClassInstances", "tail" : "", "member" : "monix.eval.TaskInstances.TypeClassInstances", "link" : "monix\/eval\/Task$.html#TypeClassInstancesextendsMemoizable.Instance[monix.eval.Task]withMonadError.Instance[monix.eval.Task,Throwable]withCobind.Instance[monix.eval.Task]withMonadRec.Instance[monix.eval.Task]", "kind" : "class"}, {"label" : "typeClassInstances", "tail" : ": TypeClassInstances", "member" : "monix.eval.Task.typeClassInstances", "link" : "monix\/eval\/Task$.html#typeClassInstances:monix.eval.Task.TypeClassInstances", "kind" : "implicit val"}, {"label" : "unsafeStartNow", "tail" : "(source: Task[A], context: Context, cb: Callback[A]): Unit", "member" : "monix.eval.Task.unsafeStartNow", "link" : "monix\/eval\/Task$.html#unsafeStartNow[A](source:monix.eval.Task[A],context:monix.eval.Task.Context,cb:monix.eval.Callback[A]):Unit", "kind" : "def"}, {"label" : "unsafeStartTrampolined", "tail" : "(source: Task[A], context: Context, cb: Callback[A]): Unit", "member" : "monix.eval.Task.unsafeStartTrampolined", "link" : "monix\/eval\/Task$.html#unsafeStartTrampolined[A](source:monix.eval.Task[A],context:monix.eval.Task.Context,cb:monix.eval.Callback[A]):Unit", "kind" : "def"}, {"label" : "unsafeStartAsync", "tail" : "(source: Task[A], context: Context, cb: Callback[A]): Unit", "member" : "monix.eval.Task.unsafeStartAsync", "link" : "monix\/eval\/Task$.html#unsafeStartAsync[A](source:monix.eval.Task[A],context:monix.eval.Task.Context,cb:monix.eval.Callback[A]):Unit", "kind" : "def"}, {"label" : "Context", "tail" : "", "member" : "monix.eval.Task.Context", "link" : "monix\/eval\/Task$.html#ContextextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "FrameIndexRef", "tail" : "", "member" : "monix.eval.Task.FrameIndexRef", "link" : "monix\/eval\/Task$.html#FrameIndexRef", "kind" : "object"}, {"label" : "FrameIndexRef", "tail" : "", "member" : "monix.eval.Task.FrameIndexRef", "link" : "monix\/eval\/Task$.html#FrameIndexRefextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "defaultOptions", "tail" : ": Options", "member" : "monix.eval.Task.defaultOptions", "link" : "monix\/eval\/Task$.html#defaultOptions:monix.eval.Task.Options", "kind" : "val"}, {"label" : "Options", "tail" : "", "member" : "monix.eval.Task.Options", "link" : "monix\/eval\/Task$.html#OptionsextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "OnFinish", "tail" : "", "member" : "monix.eval.Task.OnFinish", "link" : "monix\/eval\/Task$.html#OnFinish[+A]=(monix.eval.Task.Context,monix.eval.Callback[A])=>Unit", "kind" : "type"}, {"label" : "FrameIndex", "tail" : "", "member" : "monix.eval.Task.FrameIndex", "link" : "monix\/eval\/Task$.html#FrameIndex=Int", "kind" : "type"}, {"label" : "zipMap6", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3], fa4: Task[A4], fa5: Task[A5], fa6: Task[A6])(f: (A1, A2, A3, A4, A5, A6) â‡’ R): Task[R]", "member" : "monix.eval.Task.zipMap6", "link" : "monix\/eval\/Task$.html#zipMap6[A1,A2,A3,A4,A5,A6,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3],fa4:monix.eval.Task[A4],fa5:monix.eval.Task[A5],fa6:monix.eval.Task[A6])(f:(A1,A2,A3,A4,A5,A6)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "zipMap5", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3], fa4: Task[A4], fa5: Task[A5])(f: (A1, A2, A3, A4, A5) â‡’ R): Task[R]", "member" : "monix.eval.Task.zipMap5", "link" : "monix\/eval\/Task$.html#zipMap5[A1,A2,A3,A4,A5,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3],fa4:monix.eval.Task[A4],fa5:monix.eval.Task[A5])(f:(A1,A2,A3,A4,A5)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "zipMap4", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3], fa4: Task[A4])(f: (A1, A2, A3, A4) â‡’ R): Task[R]", "member" : "monix.eval.Task.zipMap4", "link" : "monix\/eval\/Task$.html#zipMap4[A1,A2,A3,A4,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3],fa4:monix.eval.Task[A4])(f:(A1,A2,A3,A4)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "zipMap3", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3])(f: (A1, A2, A3) â‡’ R): Task[R]", "member" : "monix.eval.Task.zipMap3", "link" : "monix\/eval\/Task$.html#zipMap3[A1,A2,A3,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3])(f:(A1,A2,A3)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "zip6", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3], fa4: Task[A4], fa5: Task[A5], fa6: Task[A6]): Task[(A1, A2, A3, A4, A5, A6)]", "member" : "monix.eval.Task.zip6", "link" : "monix\/eval\/Task$.html#zip6[A1,A2,A3,A4,A5,A6](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3],fa4:monix.eval.Task[A4],fa5:monix.eval.Task[A5],fa6:monix.eval.Task[A6]):monix.eval.Task[(A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "zip5", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3], fa4: Task[A4], fa5: Task[A5]): Task[(A1, A2, A3, A4, A5)]", "member" : "monix.eval.Task.zip5", "link" : "monix\/eval\/Task$.html#zip5[A1,A2,A3,A4,A5](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3],fa4:monix.eval.Task[A4],fa5:monix.eval.Task[A5]):monix.eval.Task[(A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "zip4", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3], fa4: Task[A4]): Task[(A1, A2, A3, A4)]", "member" : "monix.eval.Task.zip4", "link" : "monix\/eval\/Task$.html#zip4[A1,A2,A3,A4](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3],fa4:monix.eval.Task[A4]):monix.eval.Task[(A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "zip3", "tail" : "(fa1: Task[A1], fa2: Task[A2], fa3: Task[A3]): Task[(A1, A2, A3)]", "member" : "monix.eval.Task.zip3", "link" : "monix\/eval\/Task$.html#zip3[A1,A2,A3](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2],fa3:monix.eval.Task[A3]):monix.eval.Task[(A1,A2,A3)]", "kind" : "def"}, {"label" : "zipMap2", "tail" : "(fa1: Task[A1], fa2: Task[A2])(f: (A1, A2) â‡’ R): Task[R]", "member" : "monix.eval.Task.zipMap2", "link" : "monix\/eval\/Task$.html#zipMap2[A1,A2,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2])(f:(A1,A2)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "zip2", "tail" : "(fa1: Task[A1], fa2: Task[A2]): Task[(A1, A2)]", "member" : "monix.eval.Task.zip2", "link" : "monix\/eval\/Task$.html#zip2[A1,A2,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2]):monix.eval.Task[(A1,A2)]", "kind" : "def"}, {"label" : "zipList", "tail" : "(sources: Task[A]*): Task[List[A]]", "member" : "monix.eval.Task.zipList", "link" : "monix\/eval\/Task$.html#zipList[A](sources:monix.eval.Task[A]*):monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "mapBoth", "tail" : "(fa1: Task[A1], fa2: Task[A2])(f: (A1, A2) â‡’ R): Task[R]", "member" : "monix.eval.Task.mapBoth", "link" : "monix\/eval\/Task$.html#mapBoth[A1,A2,R](fa1:monix.eval.Task[A1],fa2:monix.eval.Task[A2])(f:(A1,A2)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "wanderUnordered", "tail" : "(in: M[A])(f: (A) â‡’ Task[B]): Task[List[B]]", "member" : "monix.eval.Task.wanderUnordered", "link" : "monix\/eval\/Task$.html#wanderUnordered[A,B,M[X]<:TraversableOnce[X]](in:M[A])(f:A=>monix.eval.Task[B]):monix.eval.Task[List[B]]", "kind" : "def"}, {"label" : "gatherUnordered", "tail" : "(in: TraversableOnce[Task[A]]): Task[List[A]]", "member" : "monix.eval.Task.gatherUnordered", "link" : "monix\/eval\/Task$.html#gatherUnordered[A](in:TraversableOnce[monix.eval.Task[A]]):monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "wander", "tail" : "(in: M[A])(f: (A) â‡’ Task[B])(cbf: CanBuildFrom[M[A], B, M[B]]): Task[M[B]]", "member" : "monix.eval.Task.wander", "link" : "monix\/eval\/Task$.html#wander[A,B,M[X]<:TraversableOnce[X]](in:M[A])(f:A=>monix.eval.Task[B])(implicitcbf:scala.collection.generic.CanBuildFrom[M[A],B,M[B]]):monix.eval.Task[M[B]]", "kind" : "def"}, {"label" : "gather", "tail" : "(in: M[Task[A]])(cbf: CanBuildFrom[M[Task[A]], A, M[A]]): Task[M[A]]", "member" : "monix.eval.Task.gather", "link" : "monix\/eval\/Task$.html#gather[A,M[X]<:TraversableOnce[X]](in:M[monix.eval.Task[A]])(implicitcbf:scala.collection.generic.CanBuildFrom[M[monix.eval.Task[A]],A,M[A]]):monix.eval.Task[M[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(in: M[A])(f: (A) â‡’ Task[B])(cbf: CanBuildFrom[M[A], B, M[B]]): Task[M[B]]", "member" : "monix.eval.Task.traverse", "link" : "monix\/eval\/Task$.html#traverse[A,B,M[X]<:TraversableOnce[X]](in:M[A])(f:A=>monix.eval.Task[B])(implicitcbf:scala.collection.generic.CanBuildFrom[M[A],B,M[B]]):monix.eval.Task[M[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(in: M[Task[A]])(cbf: CanBuildFrom[M[Task[A]], A, M[A]]): Task[M[A]]", "member" : "monix.eval.Task.sequence", "link" : "monix\/eval\/Task$.html#sequence[A,M[X]<:TraversableOnce[X]](in:M[monix.eval.Task[A]])(implicitcbf:scala.collection.generic.CanBuildFrom[M[monix.eval.Task[A]],A,M[A]]):monix.eval.Task[M[A]]", "kind" : "def"}, {"label" : "chooseFirstOfList", "tail" : "(tasks: TraversableOnce[Task[A]]): Task[A]", "member" : "monix.eval.Task.chooseFirstOfList", "link" : "monix\/eval\/Task$.html#chooseFirstOfList[A](tasks:TraversableOnce[monix.eval.Task[A]]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "chooseFirstOf", "tail" : "(fa: Task[A], fb: Task[B]): Task[Either[(A, CancelableFuture[B]), (CancelableFuture[A], B)]]", "member" : "monix.eval.Task.chooseFirstOf", "link" : "monix\/eval\/Task$.html#chooseFirstOf[A,B](fa:monix.eval.Task[A],fb:monix.eval.Task[B]):monix.eval.Task[Either[(A,monix.execution.CancelableFuture[B]),(monix.execution.CancelableFuture[A],B)]]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(f: Future[A]): Task[A]", "member" : "monix.eval.Task.fromFuture", "link" : "monix\/eval\/Task$.html#fromFuture[A](f:scala.concurrent.Future[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "unsafeCreate", "tail" : "(onFinish: OnFinish[A]): Task[A]", "member" : "monix.eval.Task.unsafeCreate", "link" : "monix\/eval\/Task$.html#unsafeCreate[A](onFinish:monix.eval.Task.OnFinish[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "create", "tail" : "(register: (Scheduler, Callback[A]) â‡’ Cancelable): Task[A]", "member" : "monix.eval.Task.create", "link" : "monix\/eval\/Task$.html#create[A](register:(monix.execution.Scheduler,monix.eval.Callback[A])=>monix.execution.Cancelable):monix.eval.Task[A]", "kind" : "def"}, {"label" : "async", "tail" : "(register: (Scheduler, Callback[A]) â‡’ Cancelable): Task[A]", "member" : "monix.eval.Task.async", "link" : "monix\/eval\/Task$.html#async[A](register:(monix.execution.Scheduler,monix.eval.Callback[A])=>monix.execution.Cancelable):monix.eval.Task[A]", "kind" : "def"}, {"label" : "fork", "tail" : "(fa: Task[A], scheduler: Scheduler): Task[A]", "member" : "monix.eval.Task.fork", "link" : "monix\/eval\/Task$.html#fork[A](fa:monix.eval.Task[A],scheduler:monix.execution.Scheduler):monix.eval.Task[A]", "kind" : "def"}, {"label" : "fork", "tail" : "(fa: Task[A]): Task[A]", "member" : "monix.eval.Task.fork", "link" : "monix\/eval\/Task$.html#fork[A](fa:monix.eval.Task[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "coeval", "tail" : "(a: Coeval[A]): Task[A]", "member" : "monix.eval.Task.coeval", "link" : "monix\/eval\/Task$.html#coeval[A](a:monix.eval.Coeval[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "unit", "tail" : ": Task[Unit]", "member" : "monix.eval.Task.unit", "link" : "monix\/eval\/Task$.html#unit:monix.eval.Task[Unit]", "kind" : "final val"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) â‡’ Task[Either[A, B]]): Task[B]", "member" : "monix.eval.Task.tailRecM", "link" : "monix\/eval\/Task$.html#tailRecM[A,B](a:A)(f:A=>monix.eval.Task[Either[A,B]]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(a: Try[A]): Task[A]", "member" : "monix.eval.Task.fromTry", "link" : "monix\/eval\/Task$.html#fromTry[A](a:scala.util.Try[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "never", "tail" : "(): Task[A]", "member" : "monix.eval.Task.never", "link" : "monix\/eval\/Task$.html#never[A]:monix.eval.Task[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(a: â‡’ A): Task[A]", "member" : "monix.eval.Task.delay", "link" : "monix\/eval\/Task$.html#delay[A](a:=>A):monix.eval.Task[A]", "kind" : "def"}, {"label" : "eval", "tail" : "(a: â‡’ A): Task[A]", "member" : "monix.eval.Task.eval", "link" : "monix\/eval\/Task$.html#eval[A](a:=>A):monix.eval.Task[A]", "kind" : "def"}, {"label" : "evalOnce", "tail" : "(a: â‡’ A): Task[A]", "member" : "monix.eval.Task.evalOnce", "link" : "monix\/eval\/Task$.html#evalOnce[A](a:=>A):monix.eval.Task[A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(fa: â‡’ Task[A]): Task[A]", "member" : "monix.eval.Task.suspend", "link" : "monix\/eval\/Task$.html#suspend[A](fa:=>monix.eval.Task[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "deferFutureAction", "tail" : "(f: (Scheduler) â‡’ Future[A]): Task[A]", "member" : "monix.eval.Task.deferFutureAction", "link" : "monix\/eval\/Task$.html#deferFutureAction[A](f:monix.execution.Scheduler=>scala.concurrent.Future[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "deferFuture", "tail" : "(fa: â‡’ Future[A]): Task[A]", "member" : "monix.eval.Task.deferFuture", "link" : "monix\/eval\/Task$.html#deferFuture[A](fa:=>scala.concurrent.Future[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: â‡’ Task[A]): Task[A]", "member" : "monix.eval.Task.defer", "link" : "monix\/eval\/Task$.html#defer[A](fa:=>monix.eval.Task[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "raiseError", "tail" : "(ex: Throwable): Task[A]", "member" : "monix.eval.Task.raiseError", "link" : "monix\/eval\/Task$.html#raiseError[A](ex:Throwable):monix.eval.Task[A]", "kind" : "def"}, {"label" : "pure", "tail" : "(a: A): Task[A]", "member" : "monix.eval.Task.pure", "link" : "monix\/eval\/Task$.html#pure[A](a:A):monix.eval.Task[A]", "kind" : "def"}, {"label" : "now", "tail" : "(a: A): Task[A]", "member" : "monix.eval.Task.now", "link" : "monix\/eval\/Task$.html#now[A](a:A):monix.eval.Task[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: â‡’ A): Task[A]", "member" : "monix.eval.Task.apply", "link" : "monix\/eval\/Task$.html#apply[A](f:=>A):monix.eval.Task[A]", "kind" : "def"}, {"label" : "nondeterminism", "tail" : ": TypeClassInstances", "member" : "monix.eval.TaskInstances.nondeterminism", "link" : "monix\/eval\/Task$.html#nondeterminism:TaskInstances.this.TypeClassInstances", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/Task$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/Task$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/Task$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/Task$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/Task$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/Task$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/Task$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Task$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Task$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/Task$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/Task$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/Task$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/Task$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/Task$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/Task$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/Task$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/Task$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/Task$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/Task$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/eval\/Task.html", "kind" : "class"}, {"name" : "monix.eval.TaskApp", "members_trait" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "monix.eval.TaskApp.main", "link" : "monix\/eval\/TaskApp.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "scheduler", "tail" : ": Coeval[Scheduler]", "member" : "monix.eval.TaskApp.scheduler", "link" : "monix\/eval\/TaskApp.html#scheduler:monix.eval.Coeval[monix.execution.Scheduler]", "kind" : "val"}, {"label" : "runc", "tail" : "(): Task[Unit]", "member" : "monix.eval.TaskApp.runc", "link" : "monix\/eval\/TaskApp.html#runc:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "runl", "tail" : "(args: List[String]): Task[Unit]", "member" : "monix.eval.TaskApp.runl", "link" : "monix\/eval\/TaskApp.html#runl(args:List[String]):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "run", "tail" : "(args: Array[String]): Task[Unit]", "member" : "monix.eval.TaskApp.run", "link" : "monix\/eval\/TaskApp.html#run(args:Array[String]):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/TaskApp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/TaskApp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/TaskApp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/TaskApp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/TaskApp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/TaskApp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/TaskApp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskApp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskApp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskApp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/TaskApp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/TaskApp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/TaskApp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/TaskApp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/TaskApp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/TaskApp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/TaskApp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/TaskApp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/TaskApp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Safe App type that runs a Task action.", "trait" : "monix\/eval\/TaskApp.html", "kind" : "trait"}, {"name" : "monix.eval.TaskCircuitBreaker", "shortDescription" : "The TaskCircuitBreaker is used to provide stability and preventcascading failures in distributed systems.", "object" : "monix\/eval\/TaskCircuitBreaker$.html", "members_class" : [{"label" : "doOnOpen", "tail" : "(callback: Task[Unit]): TaskCircuitBreaker", "member" : "monix.eval.TaskCircuitBreaker.doOnOpen", "link" : "monix\/eval\/TaskCircuitBreaker.html#doOnOpen(callback:monix.eval.Task[Unit]):monix.eval.TaskCircuitBreaker", "kind" : "def"}, {"label" : "doOnHalfOpen", "tail" : "(callback: Task[Unit]): TaskCircuitBreaker", "member" : "monix.eval.TaskCircuitBreaker.doOnHalfOpen", "link" : "monix\/eval\/TaskCircuitBreaker.html#doOnHalfOpen(callback:monix.eval.Task[Unit]):monix.eval.TaskCircuitBreaker", "kind" : "def"}, {"label" : "doOnClosed", "tail" : "(callback: Task[Unit]): TaskCircuitBreaker", "member" : "monix.eval.TaskCircuitBreaker.doOnClosed", "link" : "monix\/eval\/TaskCircuitBreaker.html#doOnClosed(callback:monix.eval.Task[Unit]):monix.eval.TaskCircuitBreaker", "kind" : "def"}, {"label" : "doOnRejectedTask", "tail" : "(callback: Task[Unit]): TaskCircuitBreaker", "member" : "monix.eval.TaskCircuitBreaker.doOnRejectedTask", "link" : "monix\/eval\/TaskCircuitBreaker.html#doOnRejectedTask(callback:monix.eval.Task[Unit]):monix.eval.TaskCircuitBreaker", "kind" : "def"}, {"label" : "protect", "tail" : "(task: Task[A]): Task[A]", "member" : "monix.eval.TaskCircuitBreaker.protect", "link" : "monix\/eval\/TaskCircuitBreaker.html#protect[A](task:monix.eval.Task[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "state", "tail" : "(): State", "member" : "monix.eval.TaskCircuitBreaker.state", "link" : "monix\/eval\/TaskCircuitBreaker.html#state:monix.eval.TaskCircuitBreaker.State", "kind" : "def"}, {"label" : "maxResetTimeout", "tail" : ": Duration", "member" : "monix.eval.TaskCircuitBreaker.maxResetTimeout", "link" : "monix\/eval\/TaskCircuitBreaker.html#maxResetTimeout:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "exponentialBackoffFactor", "tail" : ": Double", "member" : "monix.eval.TaskCircuitBreaker.exponentialBackoffFactor", "link" : "monix\/eval\/TaskCircuitBreaker.html#exponentialBackoffFactor:Double", "kind" : "val"}, {"label" : "resetTimeout", "tail" : ": FiniteDuration", "member" : "monix.eval.TaskCircuitBreaker.resetTimeout", "link" : "monix\/eval\/TaskCircuitBreaker.html#resetTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "maxFailures", "tail" : ": Int", "member" : "monix.eval.TaskCircuitBreaker.maxFailures", "link" : "monix\/eval\/TaskCircuitBreaker.html#maxFailures:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/TaskCircuitBreaker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/TaskCircuitBreaker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/TaskCircuitBreaker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/TaskCircuitBreaker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/TaskCircuitBreaker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/TaskCircuitBreaker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/TaskCircuitBreaker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskCircuitBreaker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskCircuitBreaker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskCircuitBreaker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/TaskCircuitBreaker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/TaskCircuitBreaker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/TaskCircuitBreaker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/TaskCircuitBreaker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/TaskCircuitBreaker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/TaskCircuitBreaker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/TaskCircuitBreaker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/TaskCircuitBreaker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/TaskCircuitBreaker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "HalfOpen", "tail" : "", "member" : "monix.eval.TaskCircuitBreaker.HalfOpen", "link" : "monix\/eval\/TaskCircuitBreaker$.html#HalfOpenextendsTaskCircuitBreaker.StatewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Open", "tail" : "", "member" : "monix.eval.TaskCircuitBreaker.Open", "link" : "monix\/eval\/TaskCircuitBreaker$.html#OpenextendsTaskCircuitBreaker.StatewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Closed", "tail" : "", "member" : "monix.eval.TaskCircuitBreaker.Closed", "link" : "monix\/eval\/TaskCircuitBreaker$.html#ClosedextendsTaskCircuitBreaker.StatewithProductwithSerializable", "kind" : "final case class"}, {"label" : "State", "tail" : "", "member" : "monix.eval.TaskCircuitBreaker.State", "link" : "monix\/eval\/TaskCircuitBreaker$.html#StateextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "Timestamp", "tail" : "", "member" : "monix.eval.TaskCircuitBreaker.Timestamp", "link" : "monix\/eval\/TaskCircuitBreaker$.html#Timestamp=Long", "kind" : "type"}, {"label" : "apply", "tail" : "(maxFailures: Int, resetTimeout: FiniteDuration, exponentialBackoffFactor: Double, maxResetTimeout: Duration, onRejected: Task[Unit], onClosed: Task[Unit], onHalfOpen: Task[Unit], onOpen: Task[Unit], padding: PaddingStrategy): TaskCircuitBreaker", "member" : "monix.eval.TaskCircuitBreaker.apply", "link" : "monix\/eval\/TaskCircuitBreaker$.html#apply(maxFailures:Int,resetTimeout:scala.concurrent.duration.FiniteDuration,exponentialBackoffFactor:Double,maxResetTimeout:scala.concurrent.duration.Duration,onRejected:monix.eval.Task[Unit],onClosed:monix.eval.Task[Unit],onHalfOpen:monix.eval.Task[Unit],onOpen:monix.eval.Task[Unit],padding:monix.execution.atomic.PaddingStrategy):monix.eval.TaskCircuitBreaker", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/TaskCircuitBreaker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/TaskCircuitBreaker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/TaskCircuitBreaker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/TaskCircuitBreaker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/TaskCircuitBreaker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/TaskCircuitBreaker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/TaskCircuitBreaker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskCircuitBreaker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskCircuitBreaker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskCircuitBreaker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/TaskCircuitBreaker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/TaskCircuitBreaker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/TaskCircuitBreaker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/TaskCircuitBreaker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/TaskCircuitBreaker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/TaskCircuitBreaker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/TaskCircuitBreaker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/TaskCircuitBreaker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/TaskCircuitBreaker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/eval\/TaskCircuitBreaker.html", "kind" : "class"}, {"name" : "monix.eval.TaskSemaphore", "shortDescription" : "The TaskSemaphore is an asynchronous semaphore implementation thatlimits the parallelism on task execution.", "object" : "monix\/eval\/TaskSemaphore$.html", "members_class" : [{"label" : "awaitAllReleased", "tail" : ": Task[Unit]", "member" : "monix.eval.TaskSemaphore.awaitAllReleased", "link" : "monix\/eval\/TaskSemaphore.html#awaitAllReleased:monix.eval.Task[Unit]", "kind" : "val"}, {"label" : "release", "tail" : ": Task[Unit]", "member" : "monix.eval.TaskSemaphore.release", "link" : "monix\/eval\/TaskSemaphore.html#release:monix.eval.Task[Unit]", "kind" : "val"}, {"label" : "acquire", "tail" : ": Task[Unit]", "member" : "monix.eval.TaskSemaphore.acquire", "link" : "monix\/eval\/TaskSemaphore.html#acquire:monix.eval.Task[Unit]", "kind" : "val"}, {"label" : "greenLight", "tail" : "(fa: Task[A]): Task[A]", "member" : "monix.eval.TaskSemaphore.greenLight", "link" : "monix\/eval\/TaskSemaphore.html#greenLight[A](fa:monix.eval.Task[A]):monix.eval.Task[A]", "kind" : "def"}, {"label" : "activeCount", "tail" : "(): Coeval[Int]", "member" : "monix.eval.TaskSemaphore.activeCount", "link" : "monix\/eval\/TaskSemaphore.html#activeCount:monix.eval.Coeval[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/TaskSemaphore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/TaskSemaphore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/TaskSemaphore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/TaskSemaphore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/TaskSemaphore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/TaskSemaphore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/TaskSemaphore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskSemaphore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskSemaphore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskSemaphore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/TaskSemaphore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/TaskSemaphore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/TaskSemaphore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/TaskSemaphore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/TaskSemaphore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/TaskSemaphore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/TaskSemaphore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/TaskSemaphore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/TaskSemaphore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(maxParallelism: Int): TaskSemaphore", "member" : "monix.eval.TaskSemaphore.apply", "link" : "monix\/eval\/TaskSemaphore$.html#apply(maxParallelism:Int):monix.eval.TaskSemaphore", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/eval\/TaskSemaphore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/eval\/TaskSemaphore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/eval\/TaskSemaphore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/eval\/TaskSemaphore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/eval\/TaskSemaphore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/eval\/TaskSemaphore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/eval\/TaskSemaphore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskSemaphore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskSemaphore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/eval\/TaskSemaphore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/eval\/TaskSemaphore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/eval\/TaskSemaphore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/eval\/TaskSemaphore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/eval\/TaskSemaphore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/eval\/TaskSemaphore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/eval\/TaskSemaphore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/eval\/TaskSemaphore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/eval\/TaskSemaphore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/eval\/TaskSemaphore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/eval\/TaskSemaphore.html", "kind" : "class"}], "monix.execution.rstreams" : [{"name" : "monix.execution.rstreams.SingleAssignmentSubscription", "shortDescription" : "Represents a org.reactivestreams.Subscription that can be assignedonly once to another subscription reference.", "object" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html", "members_class" : [{"label" : "request", "tail" : "(n: Long): Unit", "member" : "monix.execution.rstreams.SingleAssignmentSubscription.request", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#request(n:Long):Unit", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.rstreams.SingleAssignmentSubscription.cancel", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#cancel():Unit", "kind" : "def"}, {"label" : "set", "tail" : "(s: org.reactivestreams.Subscription): Unit", "member" : "monix.execution.rstreams.SingleAssignmentSubscription.set", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#set(s:org.reactivestreams.Subscription):Unit", "kind" : "def"}, {"label" : ":=", "tail" : "(s: org.reactivestreams.Subscription): Unit", "member" : "monix.execution.rstreams.SingleAssignmentSubscription.:=", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#:=(s:org.reactivestreams.Subscription):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): SingleAssignmentSubscription", "member" : "monix.execution.rstreams.SingleAssignmentSubscription.apply", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#apply():monix.execution.rstreams.SingleAssignmentSubscription", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/rstreams\/SingleAssignmentSubscription$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/rstreams\/SingleAssignmentSubscription.html", "kind" : "class"}, {"name" : "monix.execution.rstreams.Subscription", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/rstreams\/Subscription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/rstreams\/Subscription.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/rstreams\/Subscription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/rstreams\/Subscription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/rstreams\/Subscription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/rstreams\/Subscription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/rstreams\/Subscription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/Subscription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/Subscription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/Subscription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/rstreams\/Subscription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/rstreams\/Subscription.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/rstreams\/Subscription.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/rstreams\/Subscription.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/rstreams\/Subscription.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/rstreams\/Subscription.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/rstreams\/Subscription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/rstreams\/Subscription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/rstreams\/Subscription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "request", "tail" : "(n: Long): Unit", "member" : "monix.execution.rstreams.Subscription.request", "link" : "monix\/execution\/rstreams\/Subscription.html#request(n:Long):Unit", "kind" : "abstract def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.Cancelable.cancel", "link" : "monix\/execution\/rstreams\/Subscription.html#cancel():Unit", "kind" : "abstract def"}], "shortDescription" : "The Subscription represents a cross between theMonix Cancelable andorg.reactivestreams.Subcription.", "object" : "monix\/execution\/rstreams\/Subscription$.html", "members_object" : [{"label" : "apply", "tail" : "(ref: org.reactivestreams.Subscription): Subscription", "member" : "monix.execution.rstreams.Subscription.apply", "link" : "monix\/execution\/rstreams\/Subscription$.html#apply(ref:org.reactivestreams.Subscription):monix.execution.rstreams.Subscription", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/rstreams\/Subscription$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/rstreams\/Subscription$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/rstreams\/Subscription$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/rstreams\/Subscription$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/rstreams\/Subscription$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/rstreams\/Subscription$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/rstreams\/Subscription$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/Subscription$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/Subscription$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/rstreams\/Subscription$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/rstreams\/Subscription$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/rstreams\/Subscription$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/rstreams\/Subscription$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/rstreams\/Subscription$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/rstreams\/Subscription$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/rstreams\/Subscription$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/rstreams\/Subscription$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/rstreams\/Subscription$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/rstreams\/Subscription$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/rstreams\/Subscription.html", "kind" : "trait"}], "monix.types" : [{"name" : "monix.types.AllSyntax", "members_trait" : [{"label" : "memoizableOps", "tail" : "(fa: F[A])(arg0: Memoizable[F]): Ops[F, A]", "member" : "monix.types.Memoizable.Syntax.memoizableOps", "link" : "monix\/types\/AllSyntax.html#memoizableOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Memoizable[F]):monix.types.Memoizable.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "monadErrorOps", "tail" : "(fa: F[A])(F: MonadError[F, E]): Ops[F, E, A]", "member" : "monix.types.MonadError.Syntax.monadErrorOps", "link" : "monix\/types\/AllSyntax.html#monadErrorOps[F[_],E,A](fa:F[A])(implicitF:monix.types.MonadError[F,E]):monix.types.MonadError.Ops[F,E,A]", "kind" : "implicit final def"}, {"label" : "monadFilterOps", "tail" : "(fa: F[A])(arg0: MonadFilter[F]): Ops[F, A]", "member" : "monix.types.MonadFilter.Syntax.monadFilterOps", "link" : "monix\/types\/AllSyntax.html#monadFilterOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.MonadFilter[F]):monix.types.MonadFilter.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "monadOps", "tail" : "(fa: F[A])(arg0: Monad[F]): Ops[F, A]", "member" : "monix.types.Monad.Syntax.monadOps", "link" : "monix\/types\/AllSyntax.html#monadOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Monad[F]):monix.types.Monad.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "functorOps", "tail" : "(fa: F[A])(arg0: Functor[F]): Ops[F, A]", "member" : "monix.types.Functor.Syntax.functorOps", "link" : "monix\/types\/AllSyntax.html#functorOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Functor[F]):monix.types.Functor.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "comonadOps", "tail" : "(fa: F[A])(arg0: Comonad[F]): Ops[F, A]", "member" : "monix.types.Comonad.Syntax.comonadOps", "link" : "monix\/types\/AllSyntax.html#comonadOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Comonad[F]):monix.types.Comonad.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "cobindOps", "tail" : "(fa: F[A])(arg0: Cobind[F]): Ops[F, A]", "member" : "monix.types.Cobind.Syntax.cobindOps", "link" : "monix\/types\/AllSyntax.html#cobindOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Cobind[F]):monix.types.Cobind.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/AllSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/AllSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/AllSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/AllSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/AllSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/AllSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/AllSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/AllSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/AllSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/AllSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/AllSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/AllSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/AllSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/AllSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/AllSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/AllSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/AllSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/AllSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/AllSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Groups all syntax extensions.", "trait" : "monix\/types\/AllSyntax.html", "kind" : "trait"}, {"name" : "monix.types.Applicative", "members_trait" : [{"label" : "unit", "tail" : "(): F[Unit]", "member" : "monix.types.Applicative.unit", "link" : "monix\/types\/Applicative.html#unit:F[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Applicative.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Applicative.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Applicative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Applicative.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Applicative.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Applicative.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Applicative.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Applicative.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Applicative.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Applicative.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Applicative.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Applicative.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Applicative.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Applicative.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Applicative.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Applicative.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Applicative.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Applicative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Applicative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ap", "tail" : "(ff: F[(A) â‡’ B])(fa: F[A]): F[B]", "member" : "monix.types.Applicative.ap", "link" : "monix\/types\/Applicative.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "abstract def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) â‡’ Z): F[Z]", "member" : "monix.types.Applicative.map2", "link" : "monix\/types\/Applicative.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(a: A): F[A]", "member" : "monix.types.Applicative.pure", "link" : "monix\/types\/Applicative.html#pure[A](a:A):F[A]", "kind" : "abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/Applicative.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "The Applicative type-class is a Functor that also adds thecapability of lifting a value in the context.", "object" : "monix\/types\/Applicative$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Applicative.Laws", "link" : "monix\/types\/Applicative$.html#Laws[F[_]]extendsFunctor.Laws[F]withApplicative.Type[F]", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Applicative.Instance", "link" : "monix\/types\/Applicative$.html#Instance[F[_]]extendsApplicative[F]withApplicative.Type[F]withFunctor.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Applicative.Type", "link" : "monix\/types\/Applicative$.html#Type[F[_]]extendsFunctor.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Applicative[F]): Applicative[F]", "member" : "monix.types.Applicative.apply", "link" : "monix\/types\/Applicative$.html#apply[F[_]](implicitF:monix.types.Applicative[F]):monix.types.Applicative[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Applicative$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Applicative$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Applicative$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Applicative$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Applicative$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Applicative$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Applicative$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Applicative$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Applicative$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Applicative$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Applicative$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Applicative$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Applicative$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Applicative$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Applicative$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Applicative$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Applicative$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Applicative$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Applicative$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Applicative.html", "kind" : "trait"}, {"name" : "monix.types.Cobind", "members_trait" : [{"label" : "coflatten", "tail" : "(fa: F[A]): F[F[A]]", "member" : "monix.types.Cobind.coflatten", "link" : "monix\/types\/Cobind.html#coflatten[A](fa:F[A]):F[F[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Cobind.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Cobind.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Cobind.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Cobind.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Cobind.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Cobind.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Cobind.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Cobind.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Cobind.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Cobind.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Cobind.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Cobind.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Cobind.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Cobind.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Cobind.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Cobind.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Cobind.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Cobind.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Cobind.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "coflatMap", "tail" : "(fa: F[A])(f: (F[A]) â‡’ B): F[B]", "member" : "monix.types.Cobind.coflatMap", "link" : "monix\/types\/Cobind.html#coflatMap[A,B](fa:F[A])(f:F[A]=>B):F[B]", "kind" : "abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/Cobind.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "A type-class providing the coflatMap operation, the dual offlatMap.", "object" : "monix\/types\/Cobind$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Cobind.Laws", "link" : "monix\/types\/Cobind$.html#Laws[F[_]]extendsFunctor.Laws[F]withCobind.Type[F]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.Cobind.Ops", "link" : "monix\/types\/Cobind$.html#Ops[F[_],A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.Cobind.Syntax", "link" : "monix\/types\/Cobind$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Cobind.Instance", "link" : "monix\/types\/Cobind$.html#Instance[F[_]]extendsCobind[F]withCobind.Type[F]withFunctor.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Cobind.Type", "link" : "monix\/types\/Cobind$.html#Type[F[_]]extendsFunctor.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Cobind[F]): Cobind[F]", "member" : "monix.types.Cobind.apply", "link" : "monix\/types\/Cobind$.html#apply[F[_]](implicitF:monix.types.Cobind[F]):monix.types.Cobind[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Cobind$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Cobind$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Cobind$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Cobind$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Cobind$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Cobind$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Cobind$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Cobind$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Cobind$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Cobind$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Cobind$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Cobind$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Cobind$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Cobind$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Cobind$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Cobind$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Cobind$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Cobind$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Cobind$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Cobind.html", "kind" : "trait"}, {"name" : "monix.types.Comonad", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Comonad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Comonad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Comonad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Comonad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Comonad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Comonad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Comonad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Comonad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Comonad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Comonad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Comonad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Comonad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Comonad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Comonad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Comonad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Comonad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Comonad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Comonad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Comonad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extract", "tail" : "(x: F[A]): A", "member" : "monix.types.Comonad.extract", "link" : "monix\/types\/Comonad.html#extract[A](x:F[A]):A", "kind" : "abstract def"}, {"label" : "cobind", "tail" : "(): Cobind[F]", "member" : "monix.types.Cobind.Type.cobind", "link" : "monix\/types\/Comonad.html#cobind:monix.types.Cobind[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/Comonad.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "The Comonad type-class is the dual of Monad.", "object" : "monix\/types\/Comonad$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Comonad.Laws", "link" : "monix\/types\/Comonad$.html#Laws[F[_]]extendsCobind.Laws[F]withComonad.Type[F]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.Comonad.Ops", "link" : "monix\/types\/Comonad$.html#Ops[F[_],A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.Comonad.Syntax", "link" : "monix\/types\/Comonad$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Comonad.Instance", "link" : "monix\/types\/Comonad$.html#Instance[F[_]]extendsComonad[F]withComonad.Type[F]withCobind.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Comonad.Type", "link" : "monix\/types\/Comonad$.html#Type[F[_]]extendsCobind.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Comonad[F]): Comonad[F]", "member" : "monix.types.Comonad.apply", "link" : "monix\/types\/Comonad$.html#apply[F[_]](implicitF:monix.types.Comonad[F]):monix.types.Comonad[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Comonad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Comonad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Comonad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Comonad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Comonad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Comonad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Comonad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Comonad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Comonad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Comonad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Comonad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Comonad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Comonad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Comonad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Comonad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Comonad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Comonad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Comonad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Comonad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Comonad.html", "kind" : "trait"}, {"name" : "monix.types.Functor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Functor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Functor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Functor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Functor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Functor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Functor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Functor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Functor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Functor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Functor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Functor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Functor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Functor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Functor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Functor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Functor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Functor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Functor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Functor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) â‡’ B): F[B]", "member" : "monix.types.Functor.map", "link" : "monix\/types\/Functor.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "abstract def"}], "shortDescription" : "A functor provides the map operation that allows lifting an ffunction into the functor context and applying it.", "object" : "monix\/types\/Functor$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Functor.Laws", "link" : "monix\/types\/Functor$.html#Laws[F[_]]extendsFunctor.Type[F]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.Functor.Ops", "link" : "monix\/types\/Functor$.html#Ops[F[_],A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.Functor.Syntax", "link" : "monix\/types\/Functor$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Functor.Instance", "link" : "monix\/types\/Functor$.html#Instance[F[_]]extendsFunctor[F]withFunctor.Type[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Functor.Type", "link" : "monix\/types\/Functor$.html#Type[F[_]]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Functor[F]): Functor[F]", "member" : "monix.types.Functor.apply", "link" : "monix\/types\/Functor$.html#apply[F[_]](implicitF:monix.types.Functor[F]):monix.types.Functor[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Functor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Functor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Functor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Functor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Functor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Functor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Functor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Functor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Functor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Functor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Functor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Functor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Functor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Functor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Functor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Functor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Functor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Functor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Functor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Functor.html", "kind" : "trait"}, {"name" : "monix.types.Memoizable", "members_trait" : [{"label" : "evalOnce", "tail" : "(a: â‡’ A): F[A]", "member" : "monix.types.Memoizable.evalOnce", "link" : "monix\/types\/Memoizable.html#evalOnce[A](a:=>A):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Memoizable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Memoizable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Memoizable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Memoizable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Memoizable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Memoizable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Memoizable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Memoizable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Memoizable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Memoizable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Memoizable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Memoizable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Memoizable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Memoizable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Memoizable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Memoizable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Memoizable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Memoizable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Memoizable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "memoize", "tail" : "(fa: F[A]): F[A]", "member" : "monix.types.Memoizable.memoize", "link" : "monix\/types\/Memoizable.html#memoize[A](fa:F[A]):F[A]", "kind" : "abstract def"}, {"label" : "suspendable", "tail" : "(): Suspendable[F]", "member" : "monix.types.Suspendable.Type.suspendable", "link" : "monix\/types\/Memoizable.html#suspendable:monix.types.Suspendable[F]", "kind" : "implicit abstract def"}, {"label" : "monadEval", "tail" : "(): MonadEval[F]", "member" : "monix.types.MonadEval.Type.monadEval", "link" : "monix\/types\/Memoizable.html#monadEval:monix.types.MonadEval[F]", "kind" : "implicit abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "monix.types.Monad.Type.monad", "link" : "monix\/types\/Memoizable.html#monad:monix.types.Monad[F]", "kind" : "implicit abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/Memoizable.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/Memoizable.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "A type-class for F[A] monads that are suspendableand whose evaluation can be memoized, along with a guaranteethat the captured side-effects only happen once.", "object" : "monix\/types\/Memoizable$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Memoizable.Laws", "link" : "monix\/types\/Memoizable$.html#Laws[F[_]]extendsSuspendable.Laws[F]withMemoizable.Type[F]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.Memoizable.Ops", "link" : "monix\/types\/Memoizable$.html#Ops[F[_],A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.Memoizable.Syntax", "link" : "monix\/types\/Memoizable$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Memoizable.Instance", "link" : "monix\/types\/Memoizable$.html#Instance[F[_]]extendsMemoizable[F]withMemoizable.Type[F]withSuspendable.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Memoizable.Type", "link" : "monix\/types\/Memoizable$.html#Type[F[_]]extendsSuspendable.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Memoizable[F]): Memoizable[F]", "member" : "monix.types.Memoizable.apply", "link" : "monix\/types\/Memoizable$.html#apply[F[_]](implicitF:monix.types.Memoizable[F]):monix.types.Memoizable[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Memoizable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Memoizable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Memoizable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Memoizable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Memoizable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Memoizable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Memoizable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Memoizable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Memoizable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Memoizable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Memoizable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Memoizable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Memoizable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Memoizable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Memoizable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Memoizable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Memoizable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Memoizable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Memoizable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Memoizable.html", "kind" : "trait"}, {"name" : "monix.types.Monad", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "monix.types.Monad.flatten", "link" : "monix\/types\/Monad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Monad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) â‡’ F[B]): F[B]", "member" : "monix.types.Monad.flatMap", "link" : "monix\/types\/Monad.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/Monad.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/Monad.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "The Monad type-class is a structure that representscomputations defined as sequences of steps: : a type witha monad structure defines what it means to chain operationstogether, or nest functions of that type.", "object" : "monix\/types\/Monad$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Monad.Laws", "link" : "monix\/types\/Monad$.html#Laws[F[_]]extendsApplicative.Laws[F]withMonad.Type[F]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.Monad.Ops", "link" : "monix\/types\/Monad$.html#Ops[F[_],A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.Monad.Syntax", "link" : "monix\/types\/Monad$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Monad.Instance", "link" : "monix\/types\/Monad$.html#Instance[F[_]]extendsMonad[F]withMonad.Type[F]withApplicative.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Monad.Type", "link" : "monix\/types\/Monad$.html#Type[F[_]]extendsApplicative.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Monad[F]): Monad[F]", "member" : "monix.types.Monad.apply", "link" : "monix\/types\/Monad$.html#apply[F[_]](implicitF:monix.types.Monad[F]):monix.types.Monad[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Monad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Monad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Monad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Monad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Monad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Monad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Monad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Monad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Monad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Monad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Monad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Monad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Monad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Monad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Monad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Monad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Monad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Monad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Monad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Monad.html", "kind" : "trait"}, {"name" : "monix.types.MonadError", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadError.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadError.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadError.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onErrorRecover", "tail" : "(fa: F[A])(pf: PartialFunction[E, A]): F[A]", "member" : "monix.types.MonadError.onErrorRecover", "link" : "monix\/types\/MonadError.html#onErrorRecover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "abstract def"}, {"label" : "onErrorRecoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[E, F[A]]): F[A]", "member" : "monix.types.MonadError.onErrorRecoverWith", "link" : "monix\/types\/MonadError.html#onErrorRecoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "abstract def"}, {"label" : "onErrorHandle", "tail" : "(fa: F[A])(f: (E) â‡’ A): F[A]", "member" : "monix.types.MonadError.onErrorHandle", "link" : "monix\/types\/MonadError.html#onErrorHandle[A](fa:F[A])(f:E=>A):F[A]", "kind" : "abstract def"}, {"label" : "onErrorHandleWith", "tail" : "(fa: F[A])(f: (E) â‡’ F[A]): F[A]", "member" : "monix.types.MonadError.onErrorHandleWith", "link" : "monix\/types\/MonadError.html#onErrorHandleWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: E): F[A]", "member" : "monix.types.MonadError.raiseError", "link" : "monix\/types\/MonadError.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "monix.types.Monad.Type.monad", "link" : "monix\/types\/MonadError.html#monad:monix.types.Monad[F]", "kind" : "implicit abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/MonadError.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/MonadError.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "The MonadError type-class describes monads that can do error handling.", "object" : "monix\/types\/MonadError$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.MonadError.Laws", "link" : "monix\/types\/MonadError$.html#Laws[F[_],E]extendsMonad.Laws[F]withMonadError.Type[F,E]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.MonadError.Ops", "link" : "monix\/types\/MonadError$.html#Ops[F[_],E,A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.MonadError.Syntax", "link" : "monix\/types\/MonadError$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.MonadError.Instance", "link" : "monix\/types\/MonadError$.html#Instance[F[_],E]extendsMonadError[F,E]withMonadError.Type[F,E]withMonad.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.MonadError.Type", "link" : "monix\/types\/MonadError$.html#Type[F[_],E]extendsMonad.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: MonadError[F, E]): MonadError[F, E]", "member" : "monix.types.MonadError.apply", "link" : "monix\/types\/MonadError$.html#apply[F[_],E](implicitF:monix.types.MonadError[F,E]):monix.types.MonadError[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadError$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadError$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadError$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadError$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadError$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadError$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadError$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadError$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadError$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadError$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadError$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadError$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadError$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadError$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadError$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadError$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadError$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadError$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadError$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/MonadError.html", "kind" : "trait"}, {"name" : "monix.types.MonadEval", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadEval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadEval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadEval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadEval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadEval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadEval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadEval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadEval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadEval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadEval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadEval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadEval.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadEval.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadEval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadEval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadEval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadEval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadEval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadEval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "eval", "tail" : "(a: â‡’ A): F[A]", "member" : "monix.types.MonadEval.eval", "link" : "monix\/types\/MonadEval.html#eval[A](a:=>A):F[A]", "kind" : "abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "monix.types.Monad.Type.monad", "link" : "monix\/types\/MonadEval.html#monad:monix.types.Monad[F]", "kind" : "implicit abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/MonadEval.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/MonadEval.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "Type-class describing a Monad which also supportslifting a by-name value into the monadic context.", "object" : "monix\/types\/MonadEval$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.MonadEval.Laws", "link" : "monix\/types\/MonadEval$.html#Laws[F[_]]extendsMonad.Laws[F]withMonadEval.Type[F]", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.MonadEval.Instance", "link" : "monix\/types\/MonadEval$.html#Instance[F[_]]extendsMonadEval[F]withMonadEval.Type[F]withMonad.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.MonadEval.Type", "link" : "monix\/types\/MonadEval$.html#Type[F[_]]extendsMonad.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: MonadEval[F]): MonadEval[F]", "member" : "monix.types.MonadEval.apply", "link" : "monix\/types\/MonadEval$.html#apply[F[_]](implicitF:monix.types.MonadEval[F]):monix.types.MonadEval[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadEval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadEval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadEval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadEval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadEval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadEval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadEval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadEval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadEval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadEval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadEval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadEval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadEval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadEval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadEval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadEval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadEval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadEval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadEval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/MonadEval.html", "kind" : "trait"}, {"name" : "monix.types.MonadFilter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: F[A])(f: (A) â‡’ Boolean): F[A]", "member" : "monix.types.MonadFilter.filter", "link" : "monix\/types\/MonadFilter.html#filter[A](fa:F[A])(f:A=>Boolean):F[A]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): F[A]", "member" : "monix.types.MonadFilter.empty", "link" : "monix\/types\/MonadFilter.html#empty[A]:F[A]", "kind" : "abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "monix.types.Monad.Type.monad", "link" : "monix\/types\/MonadFilter.html#monad:monix.types.Monad[F]", "kind" : "implicit abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/MonadFilter.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/MonadFilter.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "The MonadFilter type-class is equipped with an additionaloperation which allows us to create an \"Empty\" value for the Monad(for whatever \"empty\" makes sense for that particular monad).", "object" : "monix\/types\/MonadFilter$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.MonadFilter.Laws", "link" : "monix\/types\/MonadFilter$.html#Laws[F[_]]extendsMonad.Laws[F]withMonadFilter.Type[F]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "monix.types.MonadFilter.Ops", "link" : "monix\/types\/MonadFilter$.html#Ops[F[_],A]extendsSerializable", "kind" : "final class"}, {"label" : "Syntax", "tail" : "", "member" : "monix.types.MonadFilter.Syntax", "link" : "monix\/types\/MonadFilter$.html#SyntaxextendsSerializable", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.MonadFilter.Instance", "link" : "monix\/types\/MonadFilter$.html#Instance[F[_]]extendsMonadFilter[F]withMonadFilter.Type[F]withMonad.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.MonadFilter.Type", "link" : "monix\/types\/MonadFilter$.html#Type[F[_]]extendsMonad.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: MonadFilter[F]): MonadFilter[F]", "member" : "monix.types.MonadFilter.apply", "link" : "monix\/types\/MonadFilter$.html#apply[F[_]](implicitF:monix.types.MonadFilter[F]):monix.types.MonadFilter[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/MonadFilter.html", "kind" : "trait"}, {"name" : "monix.types.MonadRec", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadRec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadRec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadRec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadRec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadRec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadRec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadRec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadRec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadRec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadRec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadRec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadRec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadRec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadRec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadRec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadRec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadRec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadRec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadRec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) â‡’ F[Either[A, B]]): F[B]", "member" : "monix.types.MonadRec.tailRecM", "link" : "monix\/types\/MonadRec.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "monix.types.Monad.Type.monad", "link" : "monix\/types\/MonadRec.html#monad:monix.types.Monad[F]", "kind" : "implicit abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/MonadRec.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/MonadRec.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "This type-class represents monads with a tail-recursiveflatMap implementation.", "object" : "monix\/types\/MonadRec$.html", "members_object" : [{"label" : "defaultTailRecM", "tail" : "(a: A)(f: (A) â‡’ F[Either[A, B]])(F: Monad[F]): F[B]", "member" : "monix.types.MonadRec.defaultTailRecM", "link" : "monix\/types\/MonadRec$.html#defaultTailRecM[F[_],A,B](a:A)(f:A=>F[Either[A,B]])(implicitF:monix.types.Monad[F]):F[B]", "kind" : "final def"}, {"label" : "Laws", "tail" : "", "member" : "monix.types.MonadRec.Laws", "link" : "monix\/types\/MonadRec$.html#Laws[F[_]]extendsMonad.Laws[F]withMonadRec.Type[F]", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.MonadRec.Instance", "link" : "monix\/types\/MonadRec$.html#Instance[F[_]]extendsMonadRec[F]withMonadRec.Type[F]withMonad.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.MonadRec.Type", "link" : "monix\/types\/MonadRec$.html#Type[F[_]]extendsMonad.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: MonadRec[F]): MonadRec[F]", "member" : "monix.types.MonadRec.apply", "link" : "monix\/types\/MonadRec$.html#apply[F[_]](implicitF:monix.types.MonadRec[F]):monix.types.MonadRec[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonadRec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonadRec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonadRec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonadRec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonadRec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonadRec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonadRec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadRec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadRec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonadRec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonadRec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonadRec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonadRec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonadRec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonadRec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonadRec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonadRec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonadRec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonadRec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/MonadRec.html", "kind" : "trait"}, {"name" : "monix.types.MonoidK", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonoidK.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonoidK.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonoidK.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonoidK.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonoidK.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonoidK.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonoidK.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonoidK.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonoidK.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonoidK.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonoidK.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonoidK.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonoidK.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonoidK.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonoidK.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonoidK.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonoidK.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonoidK.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonoidK.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "empty", "tail" : "(): F[A]", "member" : "monix.types.MonoidK.empty", "link" : "monix\/types\/MonoidK.html#empty[A]:F[A]", "kind" : "abstract def"}, {"label" : "semigroupK", "tail" : "(): SemigroupK[F]", "member" : "monix.types.SemigroupK.Type.semigroupK", "link" : "monix\/types\/MonoidK.html#semigroupK:monix.types.SemigroupK[F]", "kind" : "implicit abstract def"}], "shortDescription" : "MonoidK is a universal monoid which operates on kinds.", "object" : "monix\/types\/MonoidK$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.MonoidK.Laws", "link" : "monix\/types\/MonoidK$.html#Laws[F[_]]extendsSemigroupK.Laws[F]withMonoidK.Type[F]", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.MonoidK.Instance", "link" : "monix\/types\/MonoidK$.html#Instance[F[_]]extendsMonoidK[F]withMonoidK.Type[F]withSemigroupK.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.MonoidK.Type", "link" : "monix\/types\/MonoidK$.html#Type[F[_]]extendsSemigroupK.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: MonoidK[F]): MonoidK[F]", "member" : "monix.types.MonoidK.apply", "link" : "monix\/types\/MonoidK$.html#apply[F[_]](implicitF:monix.types.MonoidK[F]):monix.types.MonoidK[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/MonoidK$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/MonoidK$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/MonoidK$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/MonoidK$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/MonoidK$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/MonoidK$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/MonoidK$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonoidK$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonoidK$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/MonoidK$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/MonoidK$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/MonoidK$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/MonoidK$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/MonoidK$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/MonoidK$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/MonoidK$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/MonoidK$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/MonoidK$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/MonoidK$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/MonoidK.html", "kind" : "trait"}, {"name" : "monix.types.SemigroupK", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/SemigroupK.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/SemigroupK.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/SemigroupK.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/SemigroupK.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/SemigroupK.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/SemigroupK.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/SemigroupK.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/SemigroupK.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/SemigroupK.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/SemigroupK.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/SemigroupK.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/SemigroupK.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/SemigroupK.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/SemigroupK.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/SemigroupK.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/SemigroupK.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/SemigroupK.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/SemigroupK.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/SemigroupK.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "combineK", "tail" : "(x: F[A], y: F[A]): F[A]", "member" : "monix.types.SemigroupK.combineK", "link" : "monix\/types\/SemigroupK.html#combineK[A](x:F[A],y:F[A]):F[A]", "kind" : "abstract def"}], "shortDescription" : "SemigroupK is a universal semigroup which operates on kinds.", "object" : "monix\/types\/SemigroupK$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.SemigroupK.Laws", "link" : "monix\/types\/SemigroupK$.html#Laws[F[_]]extendsSemigroupK.Type[F]", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.SemigroupK.Instance", "link" : "monix\/types\/SemigroupK$.html#Instance[F[_]]extendsSemigroupK[F]withSemigroupK.Type[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.SemigroupK.Type", "link" : "monix\/types\/SemigroupK$.html#Type[F[_]]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: SemigroupK[F]): SemigroupK[F]", "member" : "monix.types.SemigroupK.apply", "link" : "monix\/types\/SemigroupK$.html#apply[F[_]](implicitF:monix.types.SemigroupK[F]):monix.types.SemigroupK[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/SemigroupK$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/SemigroupK$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/SemigroupK$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/SemigroupK$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/SemigroupK$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/SemigroupK$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/SemigroupK$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/SemigroupK$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/SemigroupK$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/SemigroupK$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/SemigroupK$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/SemigroupK$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/SemigroupK$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/SemigroupK$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/SemigroupK$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/SemigroupK$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/SemigroupK$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/SemigroupK$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/SemigroupK$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/SemigroupK.html", "kind" : "trait"}, {"name" : "monix.types.Suspendable", "members_trait" : [{"label" : "suspend", "tail" : "(fa: â‡’ F[A]): F[A]", "member" : "monix.types.Suspendable.suspend", "link" : "monix\/types\/Suspendable.html#suspend[A](fa:=>F[A]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Suspendable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Suspendable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Suspendable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Suspendable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Suspendable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Suspendable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Suspendable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Suspendable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Suspendable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Suspendable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Suspendable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Suspendable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Suspendable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Suspendable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Suspendable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Suspendable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Suspendable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Suspendable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Suspendable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monadEval", "tail" : "(): MonadEval[F]", "member" : "monix.types.MonadEval.Type.monadEval", "link" : "monix\/types\/Suspendable.html#monadEval:monix.types.MonadEval[F]", "kind" : "implicit abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "monix.types.Monad.Type.monad", "link" : "monix\/types\/Suspendable.html#monad:monix.types.Monad[F]", "kind" : "implicit abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "monix.types.Applicative.Type.applicative", "link" : "monix\/types\/Suspendable.html#applicative:monix.types.Applicative[F]", "kind" : "implicit abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "monix.types.Functor.Type.functor", "link" : "monix\/types\/Suspendable.html#functor:monix.types.Functor[F]", "kind" : "implicit abstract def"}], "shortDescription" : "Type-class describing a Monad which also supportslifting a by-name value into the monadic context.", "object" : "monix\/types\/Suspendable$.html", "members_object" : [{"label" : "Laws", "tail" : "", "member" : "monix.types.Suspendable.Laws", "link" : "monix\/types\/Suspendable$.html#Laws[F[_]]extendsMonadEval.Laws[F]withSuspendable.Type[F]", "kind" : "trait"}, {"label" : "Instance", "tail" : "", "member" : "monix.types.Suspendable.Instance", "link" : "monix\/types\/Suspendable$.html#Instance[F[_]]extendsSuspendable[F]withSuspendable.Type[F]withMonadEval.Instance[F]", "kind" : "trait"}, {"label" : "Type", "tail" : "", "member" : "monix.types.Suspendable.Type", "link" : "monix\/types\/Suspendable$.html#Type[F[_]]extendsMonadEval.Type[F]", "kind" : "trait"}, {"label" : "apply", "tail" : "(F: Suspendable[F]): Suspendable[F]", "member" : "monix.types.Suspendable.apply", "link" : "monix\/types\/Suspendable$.html#apply[F[_]](implicitF:monix.types.Suspendable[F]):monix.types.Suspendable[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/Suspendable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/Suspendable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/Suspendable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/Suspendable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/Suspendable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/Suspendable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/Suspendable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Suspendable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Suspendable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/Suspendable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/Suspendable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/Suspendable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/Suspendable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/Suspendable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/Suspendable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/Suspendable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/Suspendable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/Suspendable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/Suspendable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/types\/Suspendable.html", "kind" : "trait"}, {"name" : "monix.types.syntax", "shortDescription" : "Provides syntax (extension methods) for usage of monix.typesinstances.", "object" : "monix\/types\/syntax$.html", "members_object" : [{"label" : "memoizableOps", "tail" : "(fa: F[A])(arg0: Memoizable[F]): Ops[F, A]", "member" : "monix.types.Memoizable.Syntax.memoizableOps", "link" : "monix\/types\/syntax$.html#memoizableOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Memoizable[F]):monix.types.Memoizable.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "monadErrorOps", "tail" : "(fa: F[A])(F: MonadError[F, E]): Ops[F, E, A]", "member" : "monix.types.MonadError.Syntax.monadErrorOps", "link" : "monix\/types\/syntax$.html#monadErrorOps[F[_],E,A](fa:F[A])(implicitF:monix.types.MonadError[F,E]):monix.types.MonadError.Ops[F,E,A]", "kind" : "implicit final def"}, {"label" : "monadFilterOps", "tail" : "(fa: F[A])(arg0: MonadFilter[F]): Ops[F, A]", "member" : "monix.types.MonadFilter.Syntax.monadFilterOps", "link" : "monix\/types\/syntax$.html#monadFilterOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.MonadFilter[F]):monix.types.MonadFilter.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "monadOps", "tail" : "(fa: F[A])(arg0: Monad[F]): Ops[F, A]", "member" : "monix.types.Monad.Syntax.monadOps", "link" : "monix\/types\/syntax$.html#monadOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Monad[F]):monix.types.Monad.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "functorOps", "tail" : "(fa: F[A])(arg0: Functor[F]): Ops[F, A]", "member" : "monix.types.Functor.Syntax.functorOps", "link" : "monix\/types\/syntax$.html#functorOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Functor[F]):monix.types.Functor.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "comonadOps", "tail" : "(fa: F[A])(arg0: Comonad[F]): Ops[F, A]", "member" : "monix.types.Comonad.Syntax.comonadOps", "link" : "monix\/types\/syntax$.html#comonadOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Comonad[F]):monix.types.Comonad.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "cobindOps", "tail" : "(fa: F[A])(arg0: Cobind[F]): Ops[F, A]", "member" : "monix.types.Cobind.Syntax.cobindOps", "link" : "monix\/types\/syntax$.html#cobindOps[F[_],A](fa:F[A])(implicitevidence$1:monix.types.Cobind[F]):monix.types.Cobind.Ops[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/types\/syntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/types\/syntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/types\/syntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/types\/syntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/types\/syntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/types\/syntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/types\/syntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/syntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/syntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/types\/syntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/types\/syntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/types\/syntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/types\/syntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/types\/syntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/types\/syntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/types\/syntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/types\/syntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/types\/syntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/types\/syntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "monix.execution.schedulers" : [{"name" : "monix.execution.schedulers.AsyncScheduler", "shortDescription" : "An AsyncScheduler schedules tasks to happen in the future with thegiven ScheduledExecutorService and the tasks themselves are executed onthe given ExecutionContext.", "object" : "monix\/execution\/schedulers\/AsyncScheduler$.html", "members_class" : [{"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): AsyncScheduler", "member" : "monix.execution.schedulers.AsyncScheduler.withExecutionModel", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.schedulers.AsyncScheduler", "kind" : "def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.schedulers.AsyncScheduler.reportFailure", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#reportFailure(t:Throwable):Unit", "kind" : "def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.AsyncScheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "executeAsync", "tail" : "(r: Runnable): Unit", "member" : "monix.execution.schedulers.AsyncScheduler.executeAsync", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#executeAsync(r:Runnable):Unit", "kind" : "def"}, {"label" : "executionModel", "tail" : ": execution.ExecutionModel", "member" : "monix.execution.schedulers.AsyncScheduler.executionModel", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "val"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "monix.execution.schedulers.BatchingScheduler.execute", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#execute(runnable:Runnable):Unit", "kind" : "final def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.schedulers.ReferenceScheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#currentTimeMillis():Long", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/AsyncScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(schedulerService: ScheduledExecutorService, ec: ExecutionContext, reporter: UncaughtExceptionReporter, executionModel: execution.ExecutionModel): AsyncScheduler", "member" : "monix.execution.schedulers.AsyncScheduler.apply", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#apply(schedulerService:java.util.concurrent.ScheduledExecutorService,ec:scala.concurrent.ExecutionContext,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.AsyncScheduler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/AsyncScheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/schedulers\/AsyncScheduler.html", "kind" : "class"}, {"name" : "monix.execution.schedulers.BatchingScheduler", "members_trait" : [{"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "monix.execution.schedulers.BatchingScheduler.execute", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#execute(runnable:Runnable):Unit", "kind" : "final def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "executeAsync", "tail" : "(r: Runnable): Unit", "member" : "monix.execution.schedulers.BatchingScheduler.executeAsync", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#executeAsync(r:Runnable):Unit", "kind" : "abstract def"}, {"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): Scheduler", "member" : "monix.execution.Scheduler.withExecutionModel", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "abstract def"}, {"label" : "executionModel", "tail" : "(): execution.ExecutionModel", "member" : "monix.execution.Scheduler.executionModel", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "abstract def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.Scheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#currentTimeMillis():Long", "kind" : "abstract def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.Scheduler.reportFailure", "link" : "monix\/execution\/schedulers\/BatchingScheduler.html#reportFailure(t:Throwable):Unit", "kind" : "abstract def"}], "shortDescription" : "Adds trampoline execution capabilities toschedulers, wheninherited.", "trait" : "monix\/execution\/schedulers\/BatchingScheduler.html", "kind" : "trait"}, {"name" : "monix.execution.schedulers.ExecutionModel", "shortDescription" : "Deprecated.", "object" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html", "members_object" : [{"label" : "Default", "tail" : "(): execution.ExecutionModel", "member" : "monix.execution.schedulers.ExecutionModel.Default", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#Default:monix.execution.ExecutionModel", "kind" : "def"}, {"label" : "BatchedExecution", "tail" : "(): ExecutionModel.BatchedExecution.type", "member" : "monix.execution.schedulers.ExecutionModel.BatchedExecution", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#BatchedExecution:monix.execution.ExecutionModel.BatchedExecution.type", "kind" : "def"}, {"label" : "BatchedExecution", "tail" : "", "member" : "monix.execution.schedulers.ExecutionModel.BatchedExecution", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#BatchedExecution=monix.execution.ExecutionModel.BatchedExecution", "kind" : "type"}, {"label" : "AlwaysAsyncExecution", "tail" : "(): ExecutionModel.AlwaysAsyncExecution.type", "member" : "monix.execution.schedulers.ExecutionModel.AlwaysAsyncExecution", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#AlwaysAsyncExecution:monix.execution.ExecutionModel.AlwaysAsyncExecution.type", "kind" : "def"}, {"label" : "SynchronousExecution", "tail" : "(): ExecutionModel.SynchronousExecution.type", "member" : "monix.execution.schedulers.ExecutionModel.SynchronousExecution", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#SynchronousExecution:monix.execution.ExecutionModel.SynchronousExecution.type", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/package$$ExecutionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "monix.execution.schedulers.ExecutorScheduler", "shortDescription" : "An ExecutorScheduler is a class for building aSchedulerServiceout of a Java ExecutorService.", "object" : "monix\/execution\/schedulers\/ExecutorScheduler$.html", "members_class" : [{"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.ExecutorScheduler.withExecutionModel", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "awaitTermination", "tail" : "(timeout: Long, unit: TimeUnit, awaitOn: Scheduler): Future[Boolean]", "member" : "monix.execution.schedulers.ExecutorScheduler.awaitTermination", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#awaitTermination(timeout:Long,unit:concurrent.duration.TimeUnit,awaitOn:monix.execution.Scheduler):scala.concurrent.Future[Boolean]", "kind" : "final def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "monix.execution.schedulers.ExecutorScheduler.shutdown", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#shutdown():Unit", "kind" : "final def"}, {"label" : "isTerminated", "tail" : "(): Boolean", "member" : "monix.execution.schedulers.ExecutorScheduler.isTerminated", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#isTerminated:Boolean", "kind" : "final def"}, {"label" : "isShutdown", "tail" : "(): Boolean", "member" : "monix.execution.schedulers.ExecutorScheduler.isShutdown", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#isShutdown:Boolean", "kind" : "final def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.schedulers.ExecutorScheduler.reportFailure", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#reportFailure(t:Throwable):Unit", "kind" : "final def"}, {"label" : "executeAsync", "tail" : "(r: Runnable): Unit", "member" : "monix.execution.schedulers.ExecutorScheduler.executeAsync", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#executeAsync(r:Runnable):Unit", "kind" : "final def"}, {"label" : "executor", "tail" : "(): ExecutorService", "member" : "monix.execution.schedulers.ExecutorScheduler.executor", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#executor:java.util.concurrent.ExecutorService", "kind" : "def"}, {"member" : "monix.execution.schedulers.ExecutorScheduler#<init>", "error" : "unsupported entity"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "monix.execution.schedulers.BatchingScheduler.execute", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#execute(runnable:Runnable):Unit", "kind" : "final def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.schedulers.ReferenceScheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#currentTimeMillis():Long", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "executionModel", "tail" : "(): execution.ExecutionModel", "member" : "monix.execution.Scheduler.executionModel", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "abstract def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/ExecutorScheduler.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}], "members_object" : [{"label" : "forkJoinDynamic", "tail" : "(name: String, parallelism: Int, maxThreads: Int, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: execution.ExecutionModel): ExecutorScheduler", "member" : "monix.execution.schedulers.ExecutorScheduler.forkJoinDynamic", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#forkJoinDynamic(name:String,parallelism:Int,maxThreads:Int,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.ExecutorScheduler", "kind" : "def"}, {"label" : "forkJoinStatic", "tail" : "(name: String, parallelism: Int, daemonic: Boolean, reporter: UncaughtExceptionReporter, executionModel: execution.ExecutionModel): ExecutorScheduler", "member" : "monix.execution.schedulers.ExecutorScheduler.forkJoinStatic", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#forkJoinStatic(name:String,parallelism:Int,daemonic:Boolean,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.ExecutorScheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(service: ExecutorService, reporter: UncaughtExceptionReporter, executionModel: execution.ExecutionModel): ExecutorScheduler", "member" : "monix.execution.schedulers.ExecutorScheduler.apply", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#apply(service:java.util.concurrent.ExecutorService,reporter:monix.execution.UncaughtExceptionReporter,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.ExecutorScheduler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/ExecutorScheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/schedulers\/ExecutorScheduler.html", "kind" : "class"}, {"name" : "monix.execution.schedulers.ReferenceScheduler", "members_trait" : [{"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): Scheduler", "member" : "monix.execution.schedulers.ReferenceScheduler.withExecutionModel", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.Scheduler", "kind" : "def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.schedulers.ReferenceScheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#currentTimeMillis():Long", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "executionModel", "tail" : "(): execution.ExecutionModel", "member" : "monix.execution.Scheduler.executionModel", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "abstract def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.Scheduler.reportFailure", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#reportFailure(t:Throwable):Unit", "kind" : "abstract def"}, {"label" : "execute", "tail" : "(command: Runnable): Unit", "member" : "monix.execution.Scheduler.execute", "link" : "monix\/execution\/schedulers\/ReferenceScheduler.html#execute(command:Runnable):Unit", "kind" : "abstract def"}], "shortDescription" : "Helper for building a Scheduler.", "object" : "monix\/execution\/schedulers\/ReferenceScheduler$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/ReferenceScheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/schedulers\/ReferenceScheduler.html", "kind" : "trait"}, {"name" : "monix.execution.schedulers.SchedulerService", "members_trait" : [{"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/SchedulerService.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/SchedulerService.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/SchedulerService.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/SchedulerService.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/SchedulerService.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/SchedulerService.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/SchedulerService.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/SchedulerService.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/SchedulerService.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/SchedulerService.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/SchedulerService.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/SchedulerService.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/SchedulerService.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/SchedulerService.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/SchedulerService.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/SchedulerService.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/SchedulerService.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/SchedulerService.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/SchedulerService.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/SchedulerService.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): SchedulerService", "member" : "monix.execution.schedulers.SchedulerService.withExecutionModel", "link" : "monix\/execution\/schedulers\/SchedulerService.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "abstract def"}, {"label" : "awaitTermination", "tail" : "(timeout: Long, unit: TimeUnit, awaitOn: Scheduler): Future[Boolean]", "member" : "monix.execution.schedulers.SchedulerService.awaitTermination", "link" : "monix\/execution\/schedulers\/SchedulerService.html#awaitTermination(timeout:Long,unit:concurrent.duration.TimeUnit,awaitOn:monix.execution.Scheduler):scala.concurrent.Future[Boolean]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "monix.execution.schedulers.SchedulerService.shutdown", "link" : "monix\/execution\/schedulers\/SchedulerService.html#shutdown():Unit", "kind" : "abstract def"}, {"label" : "isTerminated", "tail" : "(): Boolean", "member" : "monix.execution.schedulers.SchedulerService.isTerminated", "link" : "monix\/execution\/schedulers\/SchedulerService.html#isTerminated:Boolean", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(): Boolean", "member" : "monix.execution.schedulers.SchedulerService.isShutdown", "link" : "monix\/execution\/schedulers\/SchedulerService.html#isShutdown:Boolean", "kind" : "abstract def"}, {"label" : "executionModel", "tail" : "(): execution.ExecutionModel", "member" : "monix.execution.Scheduler.executionModel", "link" : "monix\/execution\/schedulers\/SchedulerService.html#executionModel:monix.execution.ExecutionModel", "kind" : "abstract def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.Scheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/SchedulerService.html#currentTimeMillis():Long", "kind" : "abstract def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/SchedulerService.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/SchedulerService.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.Scheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/SchedulerService.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.Scheduler.reportFailure", "link" : "monix\/execution\/schedulers\/SchedulerService.html#reportFailure(t:Throwable):Unit", "kind" : "abstract def"}, {"label" : "execute", "tail" : "(command: Runnable): Unit", "member" : "monix.execution.Scheduler.execute", "link" : "monix\/execution\/schedulers\/SchedulerService.html#execute(command:Runnable):Unit", "kind" : "abstract def"}], "shortDescription" : "A Scheduler type that providesmethods for managing termination.", "object" : "monix\/execution\/schedulers\/SchedulerService$.html", "members_object" : [{"label" : "Extensions", "tail" : "", "member" : "monix.execution.schedulers.SchedulerService.Extensions", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#ExtensionsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/SchedulerService$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/SchedulerService$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/schedulers\/SchedulerService.html", "kind" : "trait"}, {"name" : "monix.execution.schedulers.StartAsyncBatchRunnable", "shortDescription" : "Forces a real asynchronous boundary before executing thegiven TrampolinedRunnable.", "members_case class" : [{"label" : "run", "tail" : "(): Unit", "member" : "monix.execution.schedulers.StartAsyncBatchRunnable.run", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#run():Unit", "kind" : "def"}, {"member" : "monix.execution.schedulers.StartAsyncBatchRunnable#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": Scheduler", "member" : "monix.execution.schedulers.StartAsyncBatchRunnable.s", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#s:monix.execution.Scheduler", "kind" : "val"}, {"label" : "start", "tail" : ": TrampolinedRunnable", "member" : "monix.execution.schedulers.StartAsyncBatchRunnable.start", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#start:monix.execution.schedulers.TrampolinedRunnable", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "monix\/execution\/schedulers\/StartAsyncBatchRunnable.html", "kind" : "case class"}, {"name" : "monix.execution.schedulers.TestScheduler", "shortDescription" : "A scheduler meant for testing purposes.", "object" : "monix\/execution\/schedulers\/TestScheduler$.html", "members_class" : [{"label" : "tick", "tail" : "(time: FiniteDuration): Unit", "member" : "monix.execution.schedulers.TestScheduler.tick", "link" : "monix\/execution\/schedulers\/TestScheduler.html#tick(time:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "tickOne", "tail" : "(): Boolean", "member" : "monix.execution.schedulers.TestScheduler.tickOne", "link" : "monix\/execution\/schedulers\/TestScheduler.html#tickOne():Boolean", "kind" : "def"}, {"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): TestScheduler", "member" : "monix.execution.schedulers.TestScheduler.withExecutionModel", "link" : "monix\/execution\/schedulers\/TestScheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.schedulers.TestScheduler", "kind" : "def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.schedulers.TestScheduler.reportFailure", "link" : "monix\/execution\/schedulers\/TestScheduler.html#reportFailure(t:Throwable):Unit", "kind" : "def"}, {"label" : "executeAsync", "tail" : "(r: Runnable): Unit", "member" : "monix.execution.schedulers.TestScheduler.executeAsync", "link" : "monix\/execution\/schedulers\/TestScheduler.html#executeAsync(r:Runnable):Unit", "kind" : "def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.TestScheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/TestScheduler.html#scheduleOnce(initialDelay:Long,unit:concurrent.duration.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.schedulers.TestScheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/TestScheduler.html#currentTimeMillis():Long", "kind" : "def"}, {"label" : "state", "tail" : "(): State", "member" : "monix.execution.schedulers.TestScheduler.state", "link" : "monix\/execution\/schedulers\/TestScheduler.html#state:monix.execution.schedulers.TestScheduler.State", "kind" : "def"}, {"label" : "executionModel", "tail" : ": execution.ExecutionModel", "member" : "monix.execution.schedulers.TestScheduler.executionModel", "link" : "monix\/execution\/schedulers\/TestScheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "val"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "monix.execution.schedulers.BatchingScheduler.execute", "link" : "monix\/execution\/schedulers\/TestScheduler.html#execute(runnable:Runnable):Unit", "kind" : "final def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/TestScheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.ReferenceScheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/TestScheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/TestScheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TestScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TestScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TestScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TestScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TestScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TestScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TestScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TestScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TestScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TestScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TestScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TestScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TestScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TestScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TestScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TestScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TestScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TestScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TestScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "State", "tail" : "", "member" : "monix.execution.schedulers.TestScheduler.State", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#StateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Task", "tail" : "", "member" : "monix.execution.schedulers.TestScheduler.Task", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#Task", "kind" : "object"}, {"label" : "Task", "tail" : "", "member" : "monix.execution.schedulers.TestScheduler.Task", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#TaskextendsProductwithSerializable", "kind" : "case class"}, {"label" : "apply", "tail" : "(executionModel: execution.ExecutionModel): TestScheduler", "member" : "monix.execution.schedulers.TestScheduler.apply", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#apply(executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.TestScheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(): TestScheduler", "member" : "monix.execution.schedulers.TestScheduler.apply", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#apply():monix.execution.schedulers.TestScheduler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TestScheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TestScheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/schedulers\/TestScheduler.html", "kind" : "class"}, {"name" : "monix.execution.schedulers.TrampolinedRunnable", "shortDescription" : "A marker for callbacks that can be batched and executedlocally (on the current thread) by means of a trampoline(if the execution context \/ scheduler allows it).", "members_class" : [{"member" : "monix.execution.schedulers.TrampolinedRunnable#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): Unit", "member" : "java.lang.Runnable.run", "link" : "monix\/execution\/schedulers\/TrampolinedRunnable.html#run():Unit", "kind" : "abstract def"}], "class" : "monix\/execution\/schedulers\/TrampolinedRunnable.html", "kind" : "class"}, {"name" : "monix.execution.schedulers.TrampolineExecutionContext", "shortDescription" : "A scala.concurrentExecutionContext implementationthat executes runnables immediately, on the current thread,by means of a trampoline implementation.", "object" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html", "members_class" : [{"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.schedulers.TrampolineExecutionContext.reportFailure", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#reportFailure(t:Throwable):Unit", "kind" : "def"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "monix.execution.schedulers.TrampolineExecutionContext.execute", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#execute(runnable:Runnable):Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(underlying: ExecutionContext): TrampolineExecutionContext", "member" : "monix.execution.schedulers.TrampolineExecutionContext.apply", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#apply(underlying:scala.concurrent.ExecutionContext):monix.execution.schedulers.TrampolineExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineExecutionContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/schedulers\/TrampolineExecutionContext.html", "kind" : "class"}, {"name" : "monix.execution.schedulers.TrampolineScheduler", "shortDescription" : "A Scheduler implementationthat executes runnables immediately, on the current thread,by means of a trampoline implementation.", "object" : "monix\/execution\/schedulers\/TrampolineScheduler$.html", "members_class" : [{"label" : "withExecutionModel", "tail" : "(em: execution.ExecutionModel): TrampolineScheduler", "member" : "monix.execution.schedulers.TrampolineScheduler.withExecutionModel", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#withExecutionModel(em:monix.execution.ExecutionModel):monix.execution.schedulers.TrampolineScheduler", "kind" : "def"}, {"label" : "currentTimeMillis", "tail" : "(): Long", "member" : "monix.execution.schedulers.TrampolineScheduler.currentTimeMillis", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#currentTimeMillis():Long", "kind" : "def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: Long, period: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.TrampolineScheduler.scheduleAtFixedRate", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#scheduleAtFixedRate(initialDelay:Long,period:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "scheduleWithFixedDelay", "tail" : "(initialDelay: Long, delay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.TrampolineScheduler.scheduleWithFixedDelay", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#scheduleWithFixedDelay(initialDelay:Long,delay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "scheduleOnce", "tail" : "(initialDelay: Long, unit: TimeUnit, r: Runnable): Cancelable", "member" : "monix.execution.schedulers.TrampolineScheduler.scheduleOnce", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#scheduleOnce(initialDelay:Long,unit:java.util.concurrent.TimeUnit,r:Runnable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "reportFailure", "tail" : "(t: Throwable): Unit", "member" : "monix.execution.schedulers.TrampolineScheduler.reportFailure", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#reportFailure(t:Throwable):Unit", "kind" : "def"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "monix.execution.schedulers.TrampolineScheduler.execute", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#execute(runnable:Runnable):Unit", "kind" : "def"}, {"member" : "monix.execution.schedulers.TrampolineScheduler#<init>", "error" : "unsupported entity"}, {"label" : "executionModel", "tail" : ": execution.ExecutionModel", "member" : "monix.execution.schedulers.TrampolineScheduler.executionModel", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#executionModel:monix.execution.ExecutionModel", "kind" : "val"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(underlying: Scheduler, em: execution.ExecutionModel): TrampolineScheduler", "member" : "monix.execution.schedulers.TrampolineScheduler.apply", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#apply(underlying:monix.execution.Scheduler,em:monix.execution.ExecutionModel):monix.execution.schedulers.TrampolineScheduler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/schedulers\/TrampolineScheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/schedulers\/TrampolineScheduler.html", "kind" : "class"}], "monix.reactive.observables" : [{"name" : "monix.reactive.observables.CachedObservable", "shortDescription" : "A CachedObservable is an observable that wraps a regularObservable, initiating the connection on the firstsubscribe() and then staying connected for as long asthe source is emitting.", "object" : "monix\/reactive\/observables\/CachedObservable$.html", "members_class" : [{"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.observables.CachedObservable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/CachedObservable.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[T]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/observables\/CachedObservable.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/observables\/CachedObservable.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/observables\/CachedObservable.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/observables\/CachedObservable.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/observables\/CachedObservable.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/observables\/CachedObservable.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/observables\/CachedObservable.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/observables\/CachedObservable.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/observables\/CachedObservable.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/observables\/CachedObservable.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/observables\/CachedObservable.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/observables\/CachedObservable.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/observables\/CachedObservable.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/observables\/CachedObservable.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/observables\/CachedObservable.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/observables\/CachedObservable.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/observables\/CachedObservable.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/observables\/CachedObservable.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/observables\/CachedObservable.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/observables\/CachedObservable.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/observables\/CachedObservable.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/observables\/CachedObservable.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/observables\/CachedObservable.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/observables\/CachedObservable.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/observables\/CachedObservable.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/observables\/CachedObservable.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/observables\/CachedObservable.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/observables\/CachedObservable.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/observables\/CachedObservable.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/CachedObservable.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/CachedObservable.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/observables\/CachedObservable.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/CachedObservable.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/CachedObservable.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/observables\/CachedObservable.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/observables\/CachedObservable.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/observables\/CachedObservable.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/observables\/CachedObservable.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Publisher[B]", "member" : "monix.reactive.Observable.toReactivePublisher", "link" : "monix\/reactive\/observables\/CachedObservable.html#toReactivePublisher[B>:A](implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[B]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/observables\/CachedObservable.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/observables\/CachedObservable.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/CachedObservable.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/observables\/CachedObservable.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/observables\/CachedObservable.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/observables\/CachedObservable.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/observables\/CachedObservable.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/observables\/CachedObservable.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/observables\/CachedObservable.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/observables\/CachedObservable.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/observables\/CachedObservable.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/observables\/CachedObservable.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/observables\/CachedObservable.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/observables\/CachedObservable.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/observables\/CachedObservable.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/observables\/CachedObservable.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/observables\/CachedObservable.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/observables\/CachedObservable.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/observables\/CachedObservable.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/observables\/CachedObservable.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/observables\/CachedObservable.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/observables\/CachedObservable.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/observables\/CachedObservable.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/observables\/CachedObservable.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/observables\/CachedObservable.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/observables\/CachedObservable.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/observables\/CachedObservable.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/observables\/CachedObservable.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/observables\/CachedObservable.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/observables\/CachedObservable.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/observables\/CachedObservable.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/observables\/CachedObservable.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/observables\/CachedObservable.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/observables\/CachedObservable.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/observables\/CachedObservable.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/observables\/CachedObservable.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/observables\/CachedObservable.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/observables\/CachedObservable.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/observables\/CachedObservable.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/observables\/CachedObservable.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/observables\/CachedObservable.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/observables\/CachedObservable.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/observables\/CachedObservable.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/observables\/CachedObservable.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/observables\/CachedObservable.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/observables\/CachedObservable.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/observables\/CachedObservable.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/observables\/CachedObservable.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/observables\/CachedObservable.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/observables\/CachedObservable.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/observables\/CachedObservable.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/observables\/CachedObservable.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/observables\/CachedObservable.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/observables\/CachedObservable.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/observables\/CachedObservable.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/observables\/CachedObservable.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/observables\/CachedObservable.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/observables\/CachedObservable.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/observables\/CachedObservable.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/observables\/CachedObservable.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/CachedObservable.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/CachedObservable.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/observables\/CachedObservable.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/observables\/CachedObservable.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/observables\/CachedObservable.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/observables\/CachedObservable.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/observables\/CachedObservable.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/observables\/CachedObservable.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/observables\/CachedObservable.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/observables\/CachedObservable.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/observables\/CachedObservable.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/observables\/CachedObservable.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/observables\/CachedObservable.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/observables\/CachedObservable.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/observables\/CachedObservable.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/observables\/CachedObservable.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/observables\/CachedObservable.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/observables\/CachedObservable.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/observables\/CachedObservable.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/observables\/CachedObservable.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/observables\/CachedObservable.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/observables\/CachedObservable.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/observables\/CachedObservable.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/observables\/CachedObservable.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/observables\/CachedObservable.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/observables\/CachedObservable.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/observables\/CachedObservable.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/observables\/CachedObservable.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/observables\/CachedObservable.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/observables\/CachedObservable.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/observables\/CachedObservable.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/observables\/CachedObservable.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/observables\/CachedObservable.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/observables\/CachedObservable.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/observables\/CachedObservable.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/observables\/CachedObservable.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/observables\/CachedObservable.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/observables\/CachedObservable.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/observables\/CachedObservable.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/observables\/CachedObservable.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/observables\/CachedObservable.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/observables\/CachedObservable.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/observables\/CachedObservable.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/observables\/CachedObservable.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/observables\/CachedObservable.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/observables\/CachedObservable.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/observables\/CachedObservable.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/observables\/CachedObservable.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/observables\/CachedObservable.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/observables\/CachedObservable.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/observables\/CachedObservable.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/observables\/CachedObservable.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/observables\/CachedObservable.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/observables\/CachedObservable.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/observables\/CachedObservable.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/observables\/CachedObservable.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/observables\/CachedObservable.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/observables\/CachedObservable.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/observables\/CachedObservable.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/observables\/CachedObservable.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/observables\/CachedObservable.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/observables\/CachedObservable.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/CachedObservable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/CachedObservable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/CachedObservable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/CachedObservable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/CachedObservable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/CachedObservable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/CachedObservable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/CachedObservable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/CachedObservable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/CachedObservable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/CachedObservable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/CachedObservable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/CachedObservable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/CachedObservable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/CachedObservable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/CachedObservable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/CachedObservable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/CachedObservable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/CachedObservable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "create", "tail" : "(observable: Observable[T], maxCapacity: Int): Observable[T]", "member" : "monix.reactive.observables.CachedObservable.create", "link" : "monix\/reactive\/observables\/CachedObservable$.html#create[T](observable:monix.reactive.Observable[T],maxCapacity:Int):monix.reactive.Observable[T]", "kind" : "def"}, {"label" : "create", "tail" : "(observable: Observable[T]): Observable[T]", "member" : "monix.reactive.observables.CachedObservable.create", "link" : "monix\/reactive\/observables\/CachedObservable$.html#create[T](observable:monix.reactive.Observable[T]):monix.reactive.Observable[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/CachedObservable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/CachedObservable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/CachedObservable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/CachedObservable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/CachedObservable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/CachedObservable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/CachedObservable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/CachedObservable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/CachedObservable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/CachedObservable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/CachedObservable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/CachedObservable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/CachedObservable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/CachedObservable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/CachedObservable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/CachedObservable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/CachedObservable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/CachedObservable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/CachedObservable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/observables\/CachedObservable.html", "kind" : "class"}, {"name" : "monix.reactive.observables.ConnectableObservable", "members_trait" : [{"label" : "refCount", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ConnectableObservable.refCount", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#refCount:monix.reactive.Observable[T]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Publisher[B]", "member" : "monix.reactive.Observable.toReactivePublisher", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#toReactivePublisher[B>:A](implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[B]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/ConnectableObservable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "connect", "tail" : "(): Cancelable", "member" : "monix.reactive.observables.ConnectableObservable.connect", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#connect():monix.execution.Cancelable", "kind" : "abstract def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/ConnectableObservable.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "abstract def"}], "shortDescription" : "Represents an Observable that waits forthe call to connect() beforestarting to emit elements to its subscriber(s).", "object" : "monix\/reactive\/observables\/ConnectableObservable$.html", "members_object" : [{"label" : "cacheUntilConnect", "tail" : "(source: Observable[T], subject: Subject[T, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.observables.ConnectableObservable.cacheUntilConnect", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#cacheUntilConnect[T,R](source:monix.reactive.Observable[T],subject:monix.reactive.subjects.Subject[T,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "multicast", "tail" : "(source: Observable[T], recipe: Pipe[T, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.observables.ConnectableObservable.multicast", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#multicast[T,R](source:monix.reactive.Observable[T],recipe:monix.reactive.Pipe[T,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(source: Observable[T], subject: Subject[T, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.observables.ConnectableObservable.unsafeMulticast", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#unsafeMulticast[T,R](source:monix.reactive.Observable[T],subject:monix.reactive.subjects.Subject[T,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/ConnectableObservable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/observables\/ConnectableObservable.html", "kind" : "trait"}, {"name" : "monix.reactive.observables.GroupedObservable", "members_trait" : [{"label" : "foreach", "tail" : "(cb: (V) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/observables\/GroupedObservable.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (V) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[V]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (V) â‡’ B)(ev: Ordering[B]): Task[Option[V]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (V) â‡’ B)(ev: Ordering[B]): Task[Option[V]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[V]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[V]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[V]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[V]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[V]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[V]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (V) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, V) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, V) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (V) â‡’ Boolean): Task[Option[V]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (V) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/observables\/GroupedObservable.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[V]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[V]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/observables\/GroupedObservable.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[V]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[V]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/GroupedObservable.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[V]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/GroupedObservable.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/observables\/GroupedObservable.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[V]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/GroupedObservable.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[V]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/GroupedObservable.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[V]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/observables\/GroupedObservable.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[V]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/observables\/GroupedObservable.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Publisher[B]", "member" : "monix.reactive.Observable.toReactivePublisher", "link" : "monix\/reactive\/observables\/GroupedObservable.html#toReactivePublisher[B>:A](implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[B]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[V, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/observables\/GroupedObservable.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[V, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/observables\/GroupedObservable.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[V, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[V, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (V) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (V) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (V) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[V])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[V]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[V])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/GroupedObservable.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(V, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/observables\/GroupedObservable.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (V, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/observables\/GroupedObservable.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(V, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/observables\/GroupedObservable.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (V, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/observables\/GroupedObservable.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (V, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/observables\/GroupedObservable.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (V, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/observables\/GroupedObservable.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (V, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/observables\/GroupedObservable.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (V, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/observables\/GroupedObservable.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (V, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/observables\/GroupedObservable.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/observables\/GroupedObservable.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/observables\/GroupedObservable.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/observables\/GroupedObservable.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/observables\/GroupedObservable.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/observables\/GroupedObservable.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/observables\/GroupedObservable.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/observables\/GroupedObservable.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/observables\/GroupedObservable.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/observables\/GroupedObservable.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (V) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/observables\/GroupedObservable.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/observables\/GroupedObservable.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/observables\/GroupedObservable.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/observables\/GroupedObservable.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/observables\/GroupedObservable.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/observables\/GroupedObservable.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/observables\/GroupedObservable.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/observables\/GroupedObservable.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[V, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/observables\/GroupedObservable.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/observables\/GroupedObservable.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, V) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/observables\/GroupedObservable.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/observables\/GroupedObservable.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/observables\/GroupedObservable.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/observables\/GroupedObservable.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/observables\/GroupedObservable.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (V) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/observables\/GroupedObservable.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/observables\/GroupedObservable.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/observables\/GroupedObservable.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[V]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/observables\/GroupedObservable.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/observables\/GroupedObservable.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/observables\/GroupedObservable.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/observables\/GroupedObservable.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/observables\/GroupedObservable.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/observables\/GroupedObservable.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/observables\/GroupedObservable.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (V) â‡’ B)(ev: Ordering[B]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (V) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (V) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[V, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[V, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/observables\/GroupedObservable.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (V) â‡’ B)(ev: Ordering[B]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[V]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/observables\/GroupedObservable.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (V) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (V) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (V) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (V) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/GroupedObservable.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (V) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/observables\/GroupedObservable.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/observables\/GroupedObservable.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/observables\/GroupedObservable.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (V) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, V]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/observables\/GroupedObservable.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (V) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, V) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, V) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[V, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[V, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[V, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, V) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, V) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/observables\/GroupedObservable.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (V) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (V) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/observables\/GroupedObservable.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/observables\/GroupedObservable.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (V) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/observables\/GroupedObservable.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/observables\/GroupedObservable.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/observables\/GroupedObservable.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (V, Int) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (V) â‡’ Boolean): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/observables\/GroupedObservable.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (V) â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (V, Ack) â‡’ Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (V, Ack) â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (V) â‡’ Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (V) â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/observables\/GroupedObservable.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (V) â‡’ K): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/observables\/GroupedObservable.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/observables\/GroupedObservable.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (V) â‡’ K): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/observables\/GroupedObservable.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/observables\/GroupedObservable.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[V, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/observables\/GroupedObservable.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/observables\/GroupedObservable.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (V) â‡’ Observable[B]): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/observables\/GroupedObservable.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/observables\/GroupedObservable.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/observables\/GroupedObservable.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/observables\/GroupedObservable.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/observables\/GroupedObservable.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/observables\/GroupedObservable.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[V]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/observables\/GroupedObservable.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/observables\/GroupedObservable.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[V, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/observables\/GroupedObservable.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (V) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/observables\/GroupedObservable.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[V, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/observables\/GroupedObservable.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/observables\/GroupedObservable.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (V, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/observables\/GroupedObservable.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(V, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/observables\/GroupedObservable.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[V, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/observables\/GroupedObservable.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[V]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/observables\/GroupedObservable.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/observables\/GroupedObservable.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/observables\/GroupedObservable.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/observables\/GroupedObservable.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/observables\/GroupedObservable.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/observables\/GroupedObservable.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/GroupedObservable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/GroupedObservable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/GroupedObservable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/GroupedObservable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/GroupedObservable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/GroupedObservable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/GroupedObservable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/GroupedObservable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/GroupedObservable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/GroupedObservable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/GroupedObservable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/GroupedObservable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/GroupedObservable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/GroupedObservable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/GroupedObservable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/GroupedObservable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/GroupedObservable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/GroupedObservable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/GroupedObservable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "key", "tail" : "(): K", "member" : "monix.reactive.observables.GroupedObservable.key", "link" : "monix\/reactive\/observables\/GroupedObservable.html#key:K", "kind" : "abstract def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[V]): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/GroupedObservable.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "abstract def"}], "shortDescription" : "A GroupedObservable is an observable type generatedby Observable.groupBy.", "object" : "monix\/reactive\/observables\/GroupedObservable$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/GroupedObservable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/GroupedObservable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/observables\/GroupedObservable.html", "kind" : "trait"}, {"name" : "monix.reactive.observables.ObservableLike", "members_trait" : [{"label" : "zipWithIndex", "tail" : "(): Self[(A, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/observables\/ObservableLike.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/observables\/ObservableLike.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Self[(A, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/observables\/ObservableLike.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (A, B1, B2, B3, B4, B5, B6) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/observables\/ObservableLike.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (A, B1, B2, B3, B4, B5) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/observables\/ObservableLike.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (A, B1, B2, B3, B4) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/observables\/ObservableLike.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (A, B1, B2, B3) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/observables\/ObservableLike.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (A, B1, B2) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/observables\/ObservableLike.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/observables\/ObservableLike.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/observables\/ObservableLike.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/observables\/ObservableLike.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/observables\/ObservableLike.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/observables\/ObservableLike.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/observables\/ObservableLike.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/observables\/ObservableLike.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/observables\/ObservableLike.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/observables\/ObservableLike.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/observables\/ObservableLike.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Self[A]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/observables\/ObservableLike.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/observables\/ObservableLike.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/observables\/ObservableLike.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Self[A]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/observables\/ObservableLike.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Self[A]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/observables\/ObservableLike.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/observables\/ObservableLike.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Self[A]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/observables\/ObservableLike.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/observables\/ObservableLike.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/observables\/ObservableLike.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/observables\/ObservableLike.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[A, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/observables\/ObservableLike.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/observables\/ObservableLike.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Self[A]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/observables\/ObservableLike.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/observables\/ObservableLike.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, A) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/observables\/ObservableLike.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/observables\/ObservableLike.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/observables\/ObservableLike.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/observables\/ObservableLike.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/observables\/ObservableLike.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (A) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/observables\/ObservableLike.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/observables\/ObservableLike.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/observables\/ObservableLike.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[A]) â‡’ Observable[R]): Self[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/observables\/ObservableLike.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Self[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/observables\/ObservableLike.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/observables\/ObservableLike.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Self[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/observables\/ObservableLike.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/observables\/ObservableLike.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Self[A]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/observables\/ObservableLike.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/observables\/ObservableLike.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Self[A]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/observables\/ObservableLike.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Self[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/observables\/ObservableLike.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/observables\/ObservableLike.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/observables\/ObservableLike.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B])(os: OverflowStrategy[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (A) â‡’ Observable[B])(os: OverflowStrategy[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/observables\/ObservableLike.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[A, Observable[B]], os: OverflowStrategy[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[A, Observable[B]], os: OverflowStrategy[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/observables\/ObservableLike.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/observables\/ObservableLike.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/observables\/ObservableLike.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Self[Notification[A]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/observables\/ObservableLike.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (A) â‡’ Task[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/observables\/ObservableLike.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (A) â‡’ Future[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/observables\/ObservableLike.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (A) â‡’ Task[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/ObservableLike.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (A) â‡’ Task[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/ObservableLike.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/observables\/ObservableLike.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/observables\/ObservableLike.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/observables\/ObservableLike.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Self[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/observables\/ObservableLike.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Self[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/observables\/ObservableLike.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/observables\/ObservableLike.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/observables\/ObservableLike.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (A) â‡’ K)(keysBuffer: Synchronous[Nothing]): Self[GroupedObservable[K, A]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/observables\/ObservableLike.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (A) â‡’ Boolean): Self[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/observables\/ObservableLike.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ (Boolean, R)): Self[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/observables\/ObservableLike.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/observables\/ObservableLike.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[A, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/observables\/ObservableLike.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[A, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/observables\/ObservableLike.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ Observable[R]): Self[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ Observable[R]): Self[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/observables\/ObservableLike.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/observables\/ObservableLike.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/observables\/ObservableLike.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/observables\/ObservableLike.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (A) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/observables\/ObservableLike.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/observables\/ObservableLike.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Self[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/observables\/ObservableLike.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (A) â‡’ Boolean): Self[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/observables\/ObservableLike.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Self[A]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/observables\/ObservableLike.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/observables\/ObservableLike.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/observables\/ObservableLike.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/observables\/ObservableLike.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Self[A]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/observables\/ObservableLike.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (A, Int) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/observables\/ObservableLike.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) â‡’ Boolean): Self[A]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/observables\/ObservableLike.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/observables\/ObservableLike.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Self[A]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/observables\/ObservableLike.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/observables\/ObservableLike.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Self[A]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/observables\/ObservableLike.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/observables\/ObservableLike.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (A) â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (A, Ack) â‡’ Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (A, Ack) â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (A) â‡’ Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (A) â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/observables\/ObservableLike.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Self[A]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/observables\/ObservableLike.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (A) â‡’ K): Self[A]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/observables\/ObservableLike.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/observables\/ObservableLike.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (A) â‡’ K): Self[A]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/observables\/ObservableLike.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Self[A]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/observables\/ObservableLike.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[A, Notification[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/observables\/ObservableLike.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/observables\/ObservableLike.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/observables\/ObservableLike.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (A) â‡’ Observable[B]): Self[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/observables\/ObservableLike.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/observables\/ObservableLike.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/observables\/ObservableLike.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/observables\/ObservableLike.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/observables\/ObservableLike.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/observables\/ObservableLike.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Self[A]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/observables\/ObservableLike.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Self[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/observables\/ObservableLike.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[A, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/observables\/ObservableLike.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (A) â‡’ Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/observables\/ObservableLike.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[A, Observable[B]]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/observables\/ObservableLike.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Self[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/observables\/ObservableLike.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Self[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/observables\/ObservableLike.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Self[(A, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/observables\/ObservableLike.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/observables\/ObservableLike.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Self[List[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Self[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/observables\/ObservableLike.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/observables\/ObservableLike.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/observables\/ObservableLike.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/observables\/ObservableLike.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Self[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/observables\/ObservableLike.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/observables\/ObservableLike.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/ObservableLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/ObservableLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/ObservableLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/ObservableLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/ObservableLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/ObservableLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/ObservableLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ObservableLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ObservableLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ObservableLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/ObservableLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/ObservableLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/ObservableLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/ObservableLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/ObservableLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/ObservableLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/ObservableLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/ObservableLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/ObservableLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transform", "tail" : "(transformer: Transformer[A, B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.transform", "link" : "monix\/reactive\/observables\/ObservableLike.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):Self[B]", "kind" : "abstract def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[A, B]): Self[B]", "member" : "monix.reactive.observables.ObservableLike.liftByOperator", "link" : "monix\/reactive\/observables\/ObservableLike.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):Self[B]", "kind" : "abstract def"}], "shortDescription" : "Defines the available operations for observable-like instances.", "object" : "monix\/reactive\/observables\/ObservableLike$.html", "members_object" : [{"label" : "DeprecatedMethods", "tail" : "", "member" : "monix.reactive.observables.ObservableLike.DeprecatedMethods", "link" : "monix\/reactive\/observables\/ObservableLike$.html#DeprecatedMethods[A,Self[+T]<:monix.reactive.observables.ObservableLike[T,Self]]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Transformer", "tail" : "", "member" : "monix.reactive.observables.ObservableLike.Transformer", "link" : "monix\/reactive\/observables\/ObservableLike$.html#Transformer[-A,+B]=monix.reactive.Observable[A]=>monix.reactive.Observable[B]", "kind" : "type"}, {"label" : "Operator", "tail" : "", "member" : "monix.reactive.observables.ObservableLike.Operator", "link" : "monix\/reactive\/observables\/ObservableLike$.html#Operator[-I,+O]=monix.reactive.observers.Subscriber[O]=>monix.reactive.observers.Subscriber[I]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/ObservableLike$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/ObservableLike$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/ObservableLike$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/ObservableLike$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/ObservableLike$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/ObservableLike$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/ObservableLike$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ObservableLike$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ObservableLike$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/ObservableLike$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/ObservableLike$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/ObservableLike$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/ObservableLike$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/ObservableLike$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/ObservableLike$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/ObservableLike$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/ObservableLike$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/ObservableLike$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/ObservableLike$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/observables\/ObservableLike.html", "kind" : "trait"}, {"name" : "monix.reactive.observables.RefCountObservable", "shortDescription" : "A RefCountObservable is an observable that wraps aConnectableObservable, initiating the connection on the firstsubscribe() and then staying connected as long as there is at leastone subscription active.", "object" : "monix\/reactive\/observables\/RefCountObservable$.html", "members_class" : [{"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.observables.RefCountObservable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/RefCountObservable.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[T]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (T) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/observables\/RefCountObservable.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (T) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[T]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Task[Option[T]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[T]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[T]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (T) â‡’ Boolean): Task[Option[T]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (T) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/observables\/RefCountObservable.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[T]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/observables\/RefCountObservable.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/RefCountObservable.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/observables\/RefCountObservable.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/observables\/RefCountObservable.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/RefCountObservable.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[T]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/observables\/RefCountObservable.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[T]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/observables\/RefCountObservable.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[T]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/observables\/RefCountObservable.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Publisher[B]", "member" : "monix.reactive.Observable.toReactivePublisher", "link" : "monix\/reactive\/observables\/RefCountObservable.html#toReactivePublisher[B>:A](implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[B]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[T, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/observables\/RefCountObservable.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[T, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/observables\/RefCountObservable.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[T, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (T) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[T]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[T])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/observables\/RefCountObservable.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(T, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/observables\/RefCountObservable.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/observables\/RefCountObservable.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/observables\/RefCountObservable.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (T, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/observables\/RefCountObservable.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (T, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/observables\/RefCountObservable.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (T, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/observables\/RefCountObservable.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (T, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/observables\/RefCountObservable.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (T, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/observables\/RefCountObservable.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/observables\/RefCountObservable.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/observables\/RefCountObservable.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/observables\/RefCountObservable.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/observables\/RefCountObservable.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/observables\/RefCountObservable.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/observables\/RefCountObservable.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/observables\/RefCountObservable.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/observables\/RefCountObservable.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/observables\/RefCountObservable.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/observables\/RefCountObservable.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/observables\/RefCountObservable.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/observables\/RefCountObservable.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/observables\/RefCountObservable.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/observables\/RefCountObservable.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/observables\/RefCountObservable.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/observables\/RefCountObservable.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/observables\/RefCountObservable.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/observables\/RefCountObservable.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/observables\/RefCountObservable.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/observables\/RefCountObservable.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/observables\/RefCountObservable.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/observables\/RefCountObservable.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/observables\/RefCountObservable.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/observables\/RefCountObservable.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/observables\/RefCountObservable.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/observables\/RefCountObservable.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/observables\/RefCountObservable.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/observables\/RefCountObservable.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[T]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/observables\/RefCountObservable.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/observables\/RefCountObservable.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/observables\/RefCountObservable.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/observables\/RefCountObservable.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/observables\/RefCountObservable.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/observables\/RefCountObservable.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/observables\/RefCountObservable.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (T) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[T, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/observables\/RefCountObservable.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (T) â‡’ B)(ev: Ordering[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[T]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/observables\/RefCountObservable.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (T) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (T) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/observables\/RefCountObservable.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/observables\/RefCountObservable.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/observables\/RefCountObservable.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/observables\/RefCountObservable.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (T) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, T]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/observables\/RefCountObservable.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, T) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/observables\/RefCountObservable.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/observables\/RefCountObservable.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/observables\/RefCountObservable.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (T) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/observables\/RefCountObservable.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/observables\/RefCountObservable.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/observables\/RefCountObservable.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (T, Int) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) â‡’ Boolean): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/observables\/RefCountObservable.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (T, Ack) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (T, Ack) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (T) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (T) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/observables\/RefCountObservable.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/observables\/RefCountObservable.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/observables\/RefCountObservable.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (T) â‡’ K): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/observables\/RefCountObservable.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/observables\/RefCountObservable.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[T, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/observables\/RefCountObservable.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/observables\/RefCountObservable.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (T) â‡’ Observable[B]): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/observables\/RefCountObservable.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/observables\/RefCountObservable.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/observables\/RefCountObservable.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/observables\/RefCountObservable.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/observables\/RefCountObservable.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/observables\/RefCountObservable.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[T]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/observables\/RefCountObservable.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/observables\/RefCountObservable.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/observables\/RefCountObservable.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (T) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/observables\/RefCountObservable.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[T, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/observables\/RefCountObservable.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/observables\/RefCountObservable.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (T, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/observables\/RefCountObservable.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(T, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/observables\/RefCountObservable.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/observables\/RefCountObservable.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[T]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/observables\/RefCountObservable.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/observables\/RefCountObservable.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/observables\/RefCountObservable.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/observables\/RefCountObservable.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/observables\/RefCountObservable.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/observables\/RefCountObservable.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/RefCountObservable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/RefCountObservable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/RefCountObservable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/RefCountObservable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/RefCountObservable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/RefCountObservable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/RefCountObservable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/RefCountObservable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/RefCountObservable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/RefCountObservable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/RefCountObservable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/RefCountObservable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/RefCountObservable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/RefCountObservable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/RefCountObservable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/RefCountObservable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/RefCountObservable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/RefCountObservable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/RefCountObservable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(connectable: ConnectableObservable[T]): Observable[T]", "member" : "monix.reactive.observables.RefCountObservable.apply", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#apply[T](connectable:monix.reactive.observables.ConnectableObservable[T]):monix.reactive.Observable[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/observables\/RefCountObservable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/observables\/RefCountObservable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/observables\/RefCountObservable.html", "kind" : "class"}], "monix.reactive.exceptions" : [{"name" : "monix.reactive.exceptions.BufferOverflowException", "shortDescription" : "An exception emitted on buffer overflow, like whenusing OverflowStrategy.Fail.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "monix.reactive.exceptions.BufferOverflowException.toString", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#toString():String", "kind" : "def"}, {"member" : "monix.reactive.exceptions.BufferOverflowException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "monix.execution.exceptions.BufferOverflowException.message", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/BufferOverflowException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/exceptions\/BufferOverflowException.html", "kind" : "class"}, {"name" : "monix.reactive.exceptions.CompositeException", "shortDescription" : "A composite exception represents a list of exceptionsthat were caught while delaying errors in the processingof observables.", "object" : "monix\/reactive\/exceptions\/CompositeException$.html", "members_class" : [{"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "monix.reactive.exceptions.CompositeException.canEqual", "link" : "monix\/reactive\/exceptions\/CompositeException.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "monix.reactive.exceptions.CompositeException.productElement", "link" : "monix\/reactive\/exceptions\/CompositeException.html#productElement(n:Int):Any", "kind" : "def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "monix.reactive.exceptions.CompositeException.productArity", "link" : "monix\/reactive\/exceptions\/CompositeException.html#productArity:Int", "kind" : "def"}, {"label" : "copy", "tail" : "(errors: Seq[Throwable]): CompositeException", "member" : "monix.reactive.exceptions.CompositeException.copy", "link" : "monix\/reactive\/exceptions\/CompositeException.html#copy(errors:Seq[Throwable]):monix.reactive.exceptions.CompositeException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "monix.reactive.exceptions.CompositeException.toString", "link" : "monix\/reactive\/exceptions\/CompositeException.html#toString():String", "kind" : "def"}, {"member" : "monix.reactive.exceptions.CompositeException#<init>", "error" : "unsupported entity"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "monix\/reactive\/exceptions\/CompositeException.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "monix\/reactive\/exceptions\/CompositeException.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "errors", "tail" : ": Seq[Throwable]", "member" : "monix.execution.exceptions.CompositeException.errors", "link" : "monix\/reactive\/exceptions\/CompositeException.html#errors:Seq[Throwable]", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/reactive\/exceptions\/CompositeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/reactive\/exceptions\/CompositeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/reactive\/exceptions\/CompositeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/reactive\/exceptions\/CompositeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/reactive\/exceptions\/CompositeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/CompositeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/CompositeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/CompositeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/reactive\/exceptions\/CompositeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/reactive\/exceptions\/CompositeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/reactive\/exceptions\/CompositeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/reactive\/exceptions\/CompositeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/CompositeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/CompositeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/CompositeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/CompositeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/CompositeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/CompositeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/CompositeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/CompositeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/CompositeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/CompositeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/CompositeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/CompositeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/CompositeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/CompositeException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/CompositeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/CompositeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/CompositeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/CompositeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ref: CompositeException): Option[Seq[Throwable]]", "member" : "monix.reactive.exceptions.CompositeException.unapply", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#unapply(ref:monix.reactive.exceptions.CompositeException):Option[Seq[Throwable]]", "kind" : "def"}, {"label" : "apply", "tail" : "(errors: Seq[Throwable]): CompositeException", "member" : "monix.reactive.exceptions.CompositeException.apply", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#apply(errors:Seq[Throwable]):monix.reactive.exceptions.CompositeException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (CompositeException) â‡’ A): (Seq[Throwable]) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Seq[Throwable]): (A) â‡’ CompositeException", "member" : "scala.Function1.compose", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/CompositeException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/CompositeException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/exceptions\/CompositeException.html", "kind" : "class"}, {"name" : "monix.reactive.exceptions.DownstreamTimeoutException", "shortDescription" : "Moved to monix.execution.exceptions.DownstreamTimeoutException.", "object" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html", "members_class" : [{"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.canEqual", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.productArity", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#productArity:Int", "kind" : "def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.productElement", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#productElement(n:Int):Any", "kind" : "def"}, {"label" : "copy", "tail" : "(timeout: FiniteDuration): DownstreamTimeoutException", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.copy", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#copy(timeout:scala.concurrent.duration.FiniteDuration):monix.reactive.exceptions.DownstreamTimeoutException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.toString", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#toString():String", "kind" : "def"}, {"member" : "monix.reactive.exceptions.DownstreamTimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "timeout", "tail" : ": FiniteDuration", "member" : "monix.execution.exceptions.DownstreamTimeoutException.timeout", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#timeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ex: DownstreamTimeoutException): Option[FiniteDuration]", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.unapply", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#unapply(ex:monix.reactive.exceptions.DownstreamTimeoutException):Option[scala.concurrent.duration.FiniteDuration]", "kind" : "def"}, {"label" : "apply", "tail" : "(timeout: FiniteDuration): DownstreamTimeoutException", "member" : "monix.reactive.exceptions.DownstreamTimeoutException.apply", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#apply(timeout:scala.concurrent.duration.FiniteDuration):monix.reactive.exceptions.DownstreamTimeoutException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (DownstreamTimeoutException) â‡’ A): (FiniteDuration) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ FiniteDuration): (A) â‡’ DownstreamTimeoutException", "member" : "scala.Function1.compose", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/DownstreamTimeoutException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/exceptions\/DownstreamTimeoutException.html", "kind" : "class"}, {"name" : "monix.reactive.exceptions.MultipleSubscribersException", "shortDescription" : "", "object" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html", "members_class" : [{"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "monix.reactive.exceptions.MultipleSubscribersException.canEqual", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "monix.reactive.exceptions.MultipleSubscribersException.productArity", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#productArity:Int", "kind" : "def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "monix.reactive.exceptions.MultipleSubscribersException.productElement", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#productElement(n:Int):Any", "kind" : "def"}, {"label" : "copy", "tail" : "(observableType: String): MultipleSubscribersException", "member" : "monix.reactive.exceptions.MultipleSubscribersException.copy", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#copy(observableType:String):monix.reactive.exceptions.MultipleSubscribersException", "kind" : "def"}, {"member" : "monix.reactive.exceptions.MultipleSubscribersException#<init>", "error" : "unsupported entity"}, {"label" : "observableType", "tail" : ": String", "member" : "monix.reactive.exceptions.MultipleSubscribersException.observableType", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#observableType:String", "kind" : "val"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "message", "tail" : ": String", "member" : "monix.execution.exceptions.APIContractViolationException.message", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ex: MultipleSubscribersException): Option[String]", "member" : "monix.reactive.exceptions.MultipleSubscribersException.unapply", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#unapply(ex:monix.reactive.exceptions.MultipleSubscribersException):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(observableType: String): MultipleSubscribersException", "member" : "monix.reactive.exceptions.MultipleSubscribersException.apply", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#apply(observableType:String):monix.reactive.exceptions.MultipleSubscribersException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (MultipleSubscribersException) â‡’ A): (String) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ String): (A) â‡’ MultipleSubscribersException", "member" : "scala.Function1.compose", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/MultipleSubscribersException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/exceptions\/MultipleSubscribersException.html", "kind" : "class"}, {"name" : "monix.reactive.exceptions.UpstreamTimeoutException", "shortDescription" : "", "object" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html", "members_class" : [{"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "monix.reactive.exceptions.UpstreamTimeoutException.canEqual", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "monix.reactive.exceptions.UpstreamTimeoutException.productArity", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#productArity:Int", "kind" : "def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "monix.reactive.exceptions.UpstreamTimeoutException.productElement", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#productElement(n:Int):Any", "kind" : "def"}, {"label" : "copy", "tail" : "(timeout: FiniteDuration): UpstreamTimeoutException", "member" : "monix.reactive.exceptions.UpstreamTimeoutException.copy", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#copy(timeout:scala.concurrent.duration.FiniteDuration):monix.reactive.exceptions.UpstreamTimeoutException", "kind" : "def"}, {"member" : "monix.reactive.exceptions.UpstreamTimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "timeout", "tail" : ": FiniteDuration", "member" : "monix.execution.exceptions.UpstreamTimeoutException.timeout", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#timeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ex: UpstreamTimeoutException): Option[FiniteDuration]", "member" : "monix.reactive.exceptions.UpstreamTimeoutException.unapply", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#unapply(ex:monix.reactive.exceptions.UpstreamTimeoutException):Option[scala.concurrent.duration.FiniteDuration]", "kind" : "def"}, {"label" : "apply", "tail" : "(timeout: FiniteDuration): UpstreamTimeoutException", "member" : "monix.reactive.exceptions.UpstreamTimeoutException.apply", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#apply(timeout:scala.concurrent.duration.FiniteDuration):monix.reactive.exceptions.UpstreamTimeoutException", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (UpstreamTimeoutException) â‡’ A): (FiniteDuration) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ FiniteDuration): (A) â‡’ UpstreamTimeoutException", "member" : "scala.Function1.compose", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/exceptions\/UpstreamTimeoutException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/exceptions\/UpstreamTimeoutException.html", "kind" : "class"}], "monix.scalaz" : [{"name" : "monix.scalaz.MonixToScalazConversions", "members_trait" : [{"label" : "MonixToScalazBindRec", "tail" : "", "member" : "monix.scalaz.MonixToScalaz10.MonixToScalazBindRec", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazBindRec[F[_]]extendsMonixToScalaz10.this.MonixToScalazMonad[F]withBindRec[F]", "kind" : "class"}, {"label" : "MonixToScalazMonadPlus", "tail" : "", "member" : "monix.scalaz.MonixToScalaz9.MonixToScalazMonadPlus", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazMonadPlus[F[_]]extendsMonixToScalaz9.this.MonixToScalazMonad[F]withMonadPlus[F]", "kind" : "class"}, {"label" : "MonixToScalazPlusEmpty", "tail" : "", "member" : "monix.scalaz.MonixToScalaz8.MonixToScalazPlusEmpty", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazPlusEmpty[F[_]]extendsMonixToScalaz8.this.MonixToScalazPlus[F]withPlusEmpty[F]", "kind" : "class"}, {"label" : "MonixToScalazPlus", "tail" : "", "member" : "monix.scalaz.MonixToScalaz7.MonixToScalazPlus", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazPlus[F[_]]extendsPlus[F]", "kind" : "class"}, {"label" : "MonixToScalazComonad", "tail" : "", "member" : "monix.scalaz.MonixToScalaz6.MonixToScalazComonad", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazComonad[F[_]]extendsMonixToScalaz6.this.MonixToScalazCobind[F]withComonad[F]", "kind" : "class"}, {"label" : "MonixToScalazCobind", "tail" : "", "member" : "monix.scalaz.MonixToScalaz5.MonixToScalazCobind", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazCobind[F[_]]extendsMonixToScalaz5.this.MonixToScalazFunctor[F]withCobind[F]", "kind" : "class"}, {"label" : "MonixToScalazCatchable", "tail" : "", "member" : "monix.scalaz.MonixToScalaz4.MonixToScalazCatchable", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazCatchable[F[_]]extendsMonixToScalaz4.this.MonixToScalazMonad[F]withCatchable[F]", "kind" : "class"}, {"label" : "MonixToScalazMonadError", "tail" : "", "member" : "monix.scalaz.MonixToScalaz3.MonixToScalazMonadError", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazMonadError[F[_],E]extendsMonixToScalaz3.this.MonixToScalazMonad[F]withMonadError[F,E]", "kind" : "class"}, {"label" : "MonixToScalazMonad", "tail" : "", "member" : "monix.scalaz.MonixToScalaz2.MonixToScalazMonad", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazMonad[F[_]]extendsMonad[F]", "kind" : "class"}, {"label" : "MonixToScalazApplicative", "tail" : "", "member" : "monix.scalaz.MonixToScalaz1.MonixToScalazApplicative", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazApplicative[F[_]]extendsApplicative[F]", "kind" : "class"}, {"label" : "MonixToScalazFunctor", "tail" : "", "member" : "monix.scalaz.MonixToScalaz0.MonixToScalazFunctor", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixToScalazFunctor[F[_]]extendsFunctor[F]", "kind" : "class"}, {"label" : "MonixApplicativeHasScalazMonoid", "tail" : "", "member" : "monix.scalaz.MonixToScalazKernel1.MonixApplicativeHasScalazMonoid", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixApplicativeHasScalazMonoid[F[_],A]extendsMonixToScalazKernel1.this.MonixApplicativeHasScalazSemigroup[F,A]withMonoid[F[A]]", "kind" : "class"}, {"label" : "MonixApplicativeHasScalazSemigroup", "tail" : "", "member" : "monix.scalaz.MonixToScalazKernel0.MonixApplicativeHasScalazSemigroup", "link" : "monix\/scalaz\/MonixToScalazConversions.html#MonixApplicativeHasScalazSemigroup[F[_],A]extendsSemigroup[F[A]]", "kind" : "class"}, {"label" : "monixToScalazBindRec", "tail" : "(arg0: MonadRec[F]): Monad[F] with BindRec[F]", "member" : "monix.scalaz.MonixToScalaz10.monixToScalazBindRec", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazBindRec[F[_]](implicitevidence$10:monix.types.MonadRec[F]):scalaz.Monad[F]withscalaz.BindRec[F]", "kind" : "implicit def"}, {"label" : "monixToScalazMonadPlus", "tail" : "(arg0: MonadFilter[F], arg1: MonoidK[F]): MonadPlus[F]", "member" : "monix.scalaz.MonixToScalaz9.monixToScalazMonadPlus", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazMonadPlus[F[_]](implicitevidence$8:monix.types.MonadFilter[F],implicitevidence$9:monix.types.MonoidK[F]):scalaz.MonadPlus[F]", "kind" : "implicit def"}, {"label" : "monixToScalazPlusEmpty", "tail" : "(arg0: MonoidK[F]): PlusEmpty[F]", "member" : "monix.scalaz.MonixToScalaz8.monixToScalazPlusEmpty", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazPlusEmpty[F[_]](implicitevidence$7:monix.types.MonoidK[F]):scalaz.PlusEmpty[F]", "kind" : "implicit def"}, {"label" : "monixToScalazPlus", "tail" : "(arg0: SemigroupK[F]): Plus[F]", "member" : "monix.scalaz.MonixToScalaz7.monixToScalazPlus", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazPlus[F[_]](implicitevidence$6:monix.types.SemigroupK[F]):scalaz.Plus[F]", "kind" : "implicit def"}, {"label" : "monixToScalazComonad", "tail" : "(arg0: Comonad[F]): Comonad[F]", "member" : "monix.scalaz.MonixToScalaz6.monixToScalazComonad", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazComonad[F[_]](implicitevidence$5:monix.types.Comonad[F]):scalaz.Comonad[F]", "kind" : "implicit def"}, {"label" : "monixToScalazCobind", "tail" : "(arg0: Cobind[F]): Cobind[F]", "member" : "monix.scalaz.MonixToScalaz5.monixToScalazCobind", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazCobind[F[_]](implicitevidence$4:monix.types.Cobind[F]):scalaz.Cobind[F]", "kind" : "implicit def"}, {"label" : "monixToScalazCatchable", "tail" : "(F: MonadError[F, Throwable]): Catchable[F]", "member" : "monix.scalaz.MonixToScalaz4.monixToScalazCatchable", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazCatchable[F[_]](implicitF:monix.types.MonadError[F,Throwable]):scalaz.Catchable[F]", "kind" : "implicit def"}, {"label" : "monixToScalazMonadError", "tail" : "(F: MonadError[F, E]): MonadError[F, E]", "member" : "monix.scalaz.MonixToScalaz3.monixToScalazMonadError", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazMonadError[F[_],E](implicitF:monix.types.MonadError[F,E]):scalaz.MonadError[F,E]", "kind" : "implicit def"}, {"label" : "monixToScalazMonad", "tail" : "(arg0: Monad[F]): Monad[F]", "member" : "monix.scalaz.MonixToScalaz2.monixToScalazMonad", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazMonad[F[_]](implicitevidence$3:monix.types.Monad[F]):scalaz.Monad[F]", "kind" : "implicit def"}, {"label" : "monixToScalazApplicative", "tail" : "(arg0: Applicative[F]): Applicative[F]", "member" : "monix.scalaz.MonixToScalaz1.monixToScalazApplicative", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazApplicative[F[_]](implicitevidence$2:monix.types.Applicative[F]):scalaz.Applicative[F]", "kind" : "implicit def"}, {"label" : "monixToScalazFunctor", "tail" : "(arg0: Functor[F]): Functor[F]", "member" : "monix.scalaz.MonixToScalaz0.monixToScalazFunctor", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixToScalazFunctor[F[_]](implicitevidence$1:monix.types.Functor[F]):scalaz.Functor[F]", "kind" : "implicit def"}, {"label" : "monixApplicativeHasScalazMonoid", "tail" : "(F: Applicative[F], A: Monoid[A]): Monoid[F[A]]", "member" : "monix.scalaz.MonixToScalazKernel1.monixApplicativeHasScalazMonoid", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixApplicativeHasScalazMonoid[F[_],A](implicitF:monix.types.Applicative[F],implicitA:scalaz.Monoid[A]):scalaz.Monoid[F[A]]", "kind" : "implicit def"}, {"label" : "monixApplicativeHasScalazSemigroup", "tail" : "(F: Applicative[F], A: Semigroup[A]): Semigroup[F[A]]", "member" : "monix.scalaz.MonixToScalazKernel0.monixApplicativeHasScalazSemigroup", "link" : "monix\/scalaz\/MonixToScalazConversions.html#monixApplicativeHasScalazSemigroup[F[_],A](implicitF:monix.types.Applicative[F],implicitA:scalaz.Semigroup[A]):scalaz.Semigroup[F[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/scalaz\/MonixToScalazConversions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/scalaz\/MonixToScalazConversions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/scalaz\/MonixToScalazConversions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/scalaz\/MonixToScalazConversions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/scalaz\/MonixToScalazConversions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/scalaz\/MonixToScalazConversions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/scalaz\/MonixToScalazConversions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/MonixToScalazConversions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/MonixToScalazConversions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/MonixToScalazConversions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/scalaz\/MonixToScalazConversions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/scalaz\/MonixToScalazConversions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/scalaz\/MonixToScalazConversions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/scalaz\/MonixToScalazConversions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/scalaz\/MonixToScalazConversions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/scalaz\/MonixToScalazConversions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/scalaz\/MonixToScalazConversions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/scalaz\/MonixToScalazConversions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/scalaz\/MonixToScalazConversions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines conversions from the Monix type-classes defined inmonix.types to type-class instances from theLink(http:\/\/www.scalaz.org\/,Text(Scalaz)) library.", "trait" : "monix\/scalaz\/MonixToScalazConversions.html", "kind" : "trait"}, {"name" : "monix.scalaz.reverse", "shortDescription" : "Defines conversions from Link(http:\/\/scalaz.org\/,Text(Scalaz))type-class instances to the Monix type-classes defined inmonix.types.", "object" : "monix\/scalaz\/reverse$.html", "members_object" : [{"label" : "ScalazToMonixMonadRec", "tail" : "", "member" : "monix.scalaz.ScalazToMonix9.ScalazToMonixMonadRec", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonadRec[F[_]]extendsMonadRec.Instance[F]withScalazToMonix9.this.ScalazToMonixMonad[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonoidK", "tail" : "", "member" : "monix.scalaz.ScalazToMonix8.ScalazToMonixMonoidK", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonoidK[F[_]]extendsMonoidK.Instance[F]withScalazToMonix8.this.ScalazToMonixSemigroupK[F]", "kind" : "trait"}, {"label" : "ScalazToMonixSemigroupK", "tail" : "", "member" : "monix.scalaz.ScalazToMonix7.ScalazToMonixSemigroupK", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixSemigroupK[F[_]]extendsSemigroupK.Instance[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonadFilter", "tail" : "", "member" : "monix.scalaz.ScalazToMonix6.ScalazToMonixMonadFilter", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonadFilter[F[_]]extendsMonadFilter.Instance[F]withScalazToMonix6.this.ScalazToMonixMonad[F]", "kind" : "trait"}, {"label" : "ScalazToMonixComonad", "tail" : "", "member" : "monix.scalaz.ScalazToMonix5.ScalazToMonixComonad", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixComonad[F[_]]extendsComonad.Instance[F]withScalazToMonix5.this.ScalazToMonixCobind[F]", "kind" : "trait"}, {"label" : "ScalazToMonixCobind", "tail" : "", "member" : "monix.scalaz.ScalazToMonix4.ScalazToMonixCobind", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixCobind[F[_]]extendsCobind.Instance[F]withScalazToMonix4.this.ScalazToMonixFunctor[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonadError", "tail" : "", "member" : "monix.scalaz.ScalazToMonix3.ScalazToMonixMonadError", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonadError[F[_],E]extendsMonadError.Instance[F,E]withScalazToMonix3.this.ScalazToMonixMonad[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonad", "tail" : "", "member" : "monix.scalaz.ScalazToMonix2.ScalazToMonixMonad", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonad[F[_]]extendsMonad.Instance[F]withScalazToMonix2.this.ScalazToMonixApplicative[F]", "kind" : "trait"}, {"label" : "ScalazToMonixApplicative", "tail" : "", "member" : "monix.scalaz.ScalazToMonix1.ScalazToMonixApplicative", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixApplicative[F[_]]extendsApplicative.Instance[F]withScalazToMonix1.this.ScalazToMonixFunctor[F]", "kind" : "trait"}, {"label" : "ScalazToMonixFunctor", "tail" : "", "member" : "monix.scalaz.ScalazToMonix0.ScalazToMonixFunctor", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixFunctor[F[_]]extendsFunctor.Instance[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonadRec", "tail" : "(ev1: Monad[F], ev2: BindRec[F]): MonadRec[F]", "member" : "monix.scalaz.ScalazToMonix9.ScalazToMonixMonadRec", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonadRec[F[_]](implicitev1:scalaz.Monad[F],implicitev2:scalaz.BindRec[F]):monix.types.MonadRec[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixMonoidK", "tail" : "(ev: PlusEmpty[F]): MonoidK[F]", "member" : "monix.scalaz.ScalazToMonix8.ScalazToMonixMonoidK", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonoidK[F[_]](implicitev:scalaz.PlusEmpty[F]):monix.types.MonoidK[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixSemigroupK", "tail" : "(ev: Plus[F]): SemigroupK[F]", "member" : "monix.scalaz.ScalazToMonix7.ScalazToMonixSemigroupK", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixSemigroupK[F[_]](implicitev:scalaz.Plus[F]):monix.types.SemigroupK[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixMonadFilter", "tail" : "(ev: MonadPlus[F]): MonadFilter[F]", "member" : "monix.scalaz.ScalazToMonix6.ScalazToMonixMonadFilter", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonadFilter[F[_]](implicitev:scalaz.MonadPlus[F]):monix.types.MonadFilter[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixComonad", "tail" : "(ev: Comonad[F]): Comonad[F]", "member" : "monix.scalaz.ScalazToMonix5.ScalazToMonixComonad", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixComonad[F[_]](implicitev:scalaz.Comonad[F]):monix.types.Comonad[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixCoflatMap", "tail" : "(ev: Cobind[F]): Cobind[F]", "member" : "monix.scalaz.ScalazToMonix4.ScalazToMonixCoflatMap", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixCoflatMap[F[_]](implicitev:scalaz.Cobind[F]):monix.types.Cobind[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixMonadError", "tail" : "(ev: MonadError[F, E]): MonadError[F, E]", "member" : "monix.scalaz.ScalazToMonix3.ScalazToMonixMonadError", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixMonadError[F[_],E](implicitev:scalaz.MonadError[F,E]):monix.types.MonadError[F,E]", "kind" : "implicit def"}, {"label" : "convertScalazToMonixMonad", "tail" : "(ev: Monad[F]): Monad[F]", "member" : "monix.scalaz.ScalazToMonix2.convertScalazToMonixMonad", "link" : "monix\/scalaz\/reverse$.html#convertScalazToMonixMonad[F[_]](implicitev:scalaz.Monad[F]):monix.types.Monad[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixApplicative", "tail" : "(ev: Applicative[F]): Applicative[F]", "member" : "monix.scalaz.ScalazToMonix1.ScalazToMonixApplicative", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixApplicative[F[_]](implicitev:scalaz.Applicative[F]):monix.types.Applicative[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixFunctor", "tail" : "(ev: Functor[F]): Functor[F]", "member" : "monix.scalaz.ScalazToMonix0.ScalazToMonixFunctor", "link" : "monix\/scalaz\/reverse$.html#ScalazToMonixFunctor[F[_]](implicitev:scalaz.Functor[F]):monix.types.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/scalaz\/reverse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/scalaz\/reverse$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/scalaz\/reverse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/scalaz\/reverse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/scalaz\/reverse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/scalaz\/reverse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/scalaz\/reverse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/reverse$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/reverse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/reverse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/scalaz\/reverse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/scalaz\/reverse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/scalaz\/reverse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/scalaz\/reverse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/scalaz\/reverse$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/scalaz\/reverse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/scalaz\/reverse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/scalaz\/reverse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/scalaz\/reverse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "monix.scalaz.ScalazToMonixConversions", "members_trait" : [{"label" : "ScalazToMonixMonadRec", "tail" : "", "member" : "monix.scalaz.ScalazToMonix9.ScalazToMonixMonadRec", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonadRec[F[_]]extendsMonadRec.Instance[F]withScalazToMonix9.this.ScalazToMonixMonad[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonoidK", "tail" : "", "member" : "monix.scalaz.ScalazToMonix8.ScalazToMonixMonoidK", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonoidK[F[_]]extendsMonoidK.Instance[F]withScalazToMonix8.this.ScalazToMonixSemigroupK[F]", "kind" : "trait"}, {"label" : "ScalazToMonixSemigroupK", "tail" : "", "member" : "monix.scalaz.ScalazToMonix7.ScalazToMonixSemigroupK", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixSemigroupK[F[_]]extendsSemigroupK.Instance[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonadFilter", "tail" : "", "member" : "monix.scalaz.ScalazToMonix6.ScalazToMonixMonadFilter", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonadFilter[F[_]]extendsMonadFilter.Instance[F]withScalazToMonix6.this.ScalazToMonixMonad[F]", "kind" : "trait"}, {"label" : "ScalazToMonixComonad", "tail" : "", "member" : "monix.scalaz.ScalazToMonix5.ScalazToMonixComonad", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixComonad[F[_]]extendsComonad.Instance[F]withScalazToMonix5.this.ScalazToMonixCobind[F]", "kind" : "trait"}, {"label" : "ScalazToMonixCobind", "tail" : "", "member" : "monix.scalaz.ScalazToMonix4.ScalazToMonixCobind", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixCobind[F[_]]extendsCobind.Instance[F]withScalazToMonix4.this.ScalazToMonixFunctor[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonadError", "tail" : "", "member" : "monix.scalaz.ScalazToMonix3.ScalazToMonixMonadError", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonadError[F[_],E]extendsMonadError.Instance[F,E]withScalazToMonix3.this.ScalazToMonixMonad[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonad", "tail" : "", "member" : "monix.scalaz.ScalazToMonix2.ScalazToMonixMonad", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonad[F[_]]extendsMonad.Instance[F]withScalazToMonix2.this.ScalazToMonixApplicative[F]", "kind" : "trait"}, {"label" : "ScalazToMonixApplicative", "tail" : "", "member" : "monix.scalaz.ScalazToMonix1.ScalazToMonixApplicative", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixApplicative[F[_]]extendsApplicative.Instance[F]withScalazToMonix1.this.ScalazToMonixFunctor[F]", "kind" : "trait"}, {"label" : "ScalazToMonixFunctor", "tail" : "", "member" : "monix.scalaz.ScalazToMonix0.ScalazToMonixFunctor", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixFunctor[F[_]]extendsFunctor.Instance[F]", "kind" : "trait"}, {"label" : "ScalazToMonixMonadRec", "tail" : "(ev1: Monad[F], ev2: BindRec[F]): MonadRec[F]", "member" : "monix.scalaz.ScalazToMonix9.ScalazToMonixMonadRec", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonadRec[F[_]](implicitev1:scalaz.Monad[F],implicitev2:scalaz.BindRec[F]):monix.types.MonadRec[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixMonoidK", "tail" : "(ev: PlusEmpty[F]): MonoidK[F]", "member" : "monix.scalaz.ScalazToMonix8.ScalazToMonixMonoidK", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonoidK[F[_]](implicitev:scalaz.PlusEmpty[F]):monix.types.MonoidK[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixSemigroupK", "tail" : "(ev: Plus[F]): SemigroupK[F]", "member" : "monix.scalaz.ScalazToMonix7.ScalazToMonixSemigroupK", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixSemigroupK[F[_]](implicitev:scalaz.Plus[F]):monix.types.SemigroupK[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixMonadFilter", "tail" : "(ev: MonadPlus[F]): MonadFilter[F]", "member" : "monix.scalaz.ScalazToMonix6.ScalazToMonixMonadFilter", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonadFilter[F[_]](implicitev:scalaz.MonadPlus[F]):monix.types.MonadFilter[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixComonad", "tail" : "(ev: Comonad[F]): Comonad[F]", "member" : "monix.scalaz.ScalazToMonix5.ScalazToMonixComonad", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixComonad[F[_]](implicitev:scalaz.Comonad[F]):monix.types.Comonad[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixCoflatMap", "tail" : "(ev: Cobind[F]): Cobind[F]", "member" : "monix.scalaz.ScalazToMonix4.ScalazToMonixCoflatMap", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixCoflatMap[F[_]](implicitev:scalaz.Cobind[F]):monix.types.Cobind[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixMonadError", "tail" : "(ev: MonadError[F, E]): MonadError[F, E]", "member" : "monix.scalaz.ScalazToMonix3.ScalazToMonixMonadError", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixMonadError[F[_],E](implicitev:scalaz.MonadError[F,E]):monix.types.MonadError[F,E]", "kind" : "implicit def"}, {"label" : "convertScalazToMonixMonad", "tail" : "(ev: Monad[F]): Monad[F]", "member" : "monix.scalaz.ScalazToMonix2.convertScalazToMonixMonad", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#convertScalazToMonixMonad[F[_]](implicitev:scalaz.Monad[F]):monix.types.Monad[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixApplicative", "tail" : "(ev: Applicative[F]): Applicative[F]", "member" : "monix.scalaz.ScalazToMonix1.ScalazToMonixApplicative", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixApplicative[F[_]](implicitev:scalaz.Applicative[F]):monix.types.Applicative[F]", "kind" : "implicit def"}, {"label" : "ScalazToMonixFunctor", "tail" : "(ev: Functor[F]): Functor[F]", "member" : "monix.scalaz.ScalazToMonix0.ScalazToMonixFunctor", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ScalazToMonixFunctor[F[_]](implicitev:scalaz.Functor[F]):monix.types.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/scalaz\/ScalazToMonixConversions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/scalaz\/ScalazToMonixConversions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines conversions from Link(http:\/\/typelevel.org\/cats\/,Text(Cats))type-class instances to the Monix type-classes defined inmonix.types.", "trait" : "monix\/scalaz\/ScalazToMonixConversions.html", "kind" : "trait"}], "monix.execution.cancelables" : [{"name" : "monix.execution.cancelables.AssignableCancelable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : ":=", "tail" : "(value: Cancelable): AssignableCancelable.this.type", "member" : "monix.execution.cancelables.AssignableCancelable.:=", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#:=(value:monix.execution.Cancelable):AssignableCancelable.this.type", "kind" : "abstract def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.Cancelable.cancel", "link" : "monix\/execution\/cancelables\/AssignableCancelable.html#cancel():Unit", "kind" : "abstract def"}], "shortDescription" : "Represents a class of cancelables that can holdan internal reference to another cancelable (and thushas to support the assignment operator).", "object" : "monix\/execution\/cancelables\/AssignableCancelable$.html", "members_object" : [{"label" : "dummy", "tail" : ": AssignableCancelable", "member" : "monix.execution.cancelables.AssignableCancelable.dummy", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#dummy:monix.execution.cancelables.AssignableCancelable", "kind" : "val"}, {"label" : "alreadyCanceled", "tail" : ": Bool", "member" : "monix.execution.cancelables.AssignableCancelable.alreadyCanceled", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#alreadyCanceled:monix.execution.cancelables.AssignableCancelable.Bool", "kind" : "val"}, {"label" : "single", "tail" : "(): AssignableCancelable", "member" : "monix.execution.cancelables.AssignableCancelable.single", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#single():monix.execution.cancelables.AssignableCancelable", "kind" : "def"}, {"label" : "multi", "tail" : "(initial: Cancelable): AssignableCancelable", "member" : "monix.execution.cancelables.AssignableCancelable.multi", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#multi(initial:monix.execution.Cancelable):monix.execution.cancelables.AssignableCancelable", "kind" : "def"}, {"label" : "Multi", "tail" : "", "member" : "monix.execution.cancelables.AssignableCancelable.Multi", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#MultiextendsAssignableCancelable.Bool", "kind" : "trait"}, {"label" : "Bool", "tail" : "", "member" : "monix.execution.cancelables.AssignableCancelable.Bool", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#BoolextendsAssignableCancelablewithBooleanCancelable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/AssignableCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/cancelables\/AssignableCancelable.html", "kind" : "trait"}, {"name" : "monix.execution.cancelables.BooleanCancelable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.BooleanCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#isCanceled:Boolean", "kind" : "abstract def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.Cancelable.cancel", "link" : "monix\/execution\/cancelables\/BooleanCancelable.html#cancel():Unit", "kind" : "abstract def"}], "shortDescription" : "Represents a Cancelable that can be queriedfor the canceled status.", "object" : "monix\/execution\/cancelables\/BooleanCancelable$.html", "members_object" : [{"label" : "dummy", "tail" : ": BooleanCancelable", "member" : "monix.execution.cancelables.BooleanCancelable.dummy", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#dummy:monix.execution.cancelables.BooleanCancelable", "kind" : "final val"}, {"label" : "alreadyCanceled", "tail" : ": BooleanCancelable", "member" : "monix.execution.cancelables.BooleanCancelable.alreadyCanceled", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#alreadyCanceled:monix.execution.cancelables.BooleanCancelable", "kind" : "final val"}, {"label" : "apply", "tail" : "(callback: () â‡’ Unit): BooleanCancelable", "member" : "monix.execution.cancelables.BooleanCancelable.apply", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#apply(callback:()=>Unit):monix.execution.cancelables.BooleanCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(): BooleanCancelable", "member" : "monix.execution.cancelables.BooleanCancelable.apply", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#apply():monix.execution.cancelables.BooleanCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/BooleanCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/execution\/cancelables\/BooleanCancelable.html", "kind" : "trait"}, {"name" : "monix.execution.cancelables.CompositeCancelable", "shortDescription" : "Represents a composite of multiple cancelables.", "object" : "monix\/execution\/cancelables\/CompositeCancelable$.html", "members_class" : [{"label" : "getAndSet", "tail" : "(that: GenTraversableOnce[Cancelable]): Set[Cancelable]", "member" : "monix.execution.cancelables.CompositeCancelable.getAndSet", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#getAndSet(that:scala.collection.GenTraversableOnce[monix.execution.Cancelable]):Set[monix.execution.Cancelable]", "kind" : "def"}, {"label" : "reset", "tail" : "(): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.reset", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#reset():CompositeCancelable.this.type", "kind" : "def"}, {"label" : "removeAll", "tail" : "(that: GenTraversableOnce[Cancelable]): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.removeAll", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#removeAll(that:scala.collection.GenTraversableOnce[monix.execution.Cancelable]):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "--=", "tail" : "(that: GenTraversableOnce[Cancelable]): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.--=", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#--=(that:scala.collection.GenTraversableOnce[monix.execution.Cancelable]):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(s: Cancelable): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.remove", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#remove(s:monix.execution.Cancelable):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(s: Cancelable): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.-=", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#-=(s:monix.execution.Cancelable):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "addAll", "tail" : "(that: GenTraversableOnce[Cancelable]): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.addAll", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#addAll(that:scala.collection.GenTraversableOnce[monix.execution.Cancelable]):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "++=", "tail" : "(that: GenTraversableOnce[Cancelable]): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.++=", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#++=(that:scala.collection.GenTraversableOnce[monix.execution.Cancelable]):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "add", "tail" : "(other: Cancelable): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.add", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#add(other:monix.execution.Cancelable):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(other: Cancelable): CompositeCancelable.this.type", "member" : "monix.execution.cancelables.CompositeCancelable.+=", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#+=(other:monix.execution.Cancelable):CompositeCancelable.this.type", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.cancelables.CompositeCancelable.cancel", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#cancel():Unit", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.CompositeCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/CompositeCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "withPadding", "tail" : "(initial: Set[Cancelable], ps: PaddingStrategy): CompositeCancelable", "member" : "monix.execution.cancelables.CompositeCancelable.withPadding", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#withPadding(initial:Set[monix.execution.Cancelable],ps:monix.execution.atomic.PaddingStrategy):monix.execution.cancelables.CompositeCancelable", "kind" : "def"}, {"label" : "withPadding", "tail" : "(ps: PaddingStrategy): CompositeCancelable", "member" : "monix.execution.cancelables.CompositeCancelable.withPadding", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#withPadding(ps:monix.execution.atomic.PaddingStrategy):monix.execution.cancelables.CompositeCancelable", "kind" : "def"}, {"label" : "fromSet", "tail" : "(initial: Set[Cancelable]): CompositeCancelable", "member" : "monix.execution.cancelables.CompositeCancelable.fromSet", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#fromSet(initial:Set[monix.execution.Cancelable]):monix.execution.cancelables.CompositeCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(initial: Cancelable*): CompositeCancelable", "member" : "monix.execution.cancelables.CompositeCancelable.apply", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#apply(initial:monix.execution.Cancelable*):monix.execution.cancelables.CompositeCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/CompositeCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/cancelables\/CompositeCancelable.html", "kind" : "class"}, {"name" : "monix.execution.cancelables.MultiAssignmentCancelable", "shortDescription" : "Represents a monix.execution.Cancelable whose underlying cancelablereference can be swapped for another.", "object" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html", "members_class" : [{"label" : "orderedUpdate", "tail" : "(value: Cancelable, order: Long): MultiAssignmentCancelable.this.type", "member" : "monix.execution.cancelables.MultiAssignmentCancelable.orderedUpdate", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#orderedUpdate(value:monix.execution.Cancelable,order:Long):MultiAssignmentCancelable.this.type", "kind" : "def"}, {"label" : ":=", "tail" : "(value: Cancelable): MultiAssignmentCancelable.this.type", "member" : "monix.execution.cancelables.MultiAssignmentCancelable.:=", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#:=(value:monix.execution.Cancelable):MultiAssignmentCancelable.this.type", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.cancelables.MultiAssignmentCancelable.cancel", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#cancel():Unit", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.MultiAssignmentCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(s: Cancelable): MultiAssignmentCancelable", "member" : "monix.execution.cancelables.MultiAssignmentCancelable.apply", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#apply(s:monix.execution.Cancelable):monix.execution.cancelables.MultiAssignmentCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(): MultiAssignmentCancelable", "member" : "monix.execution.cancelables.MultiAssignmentCancelable.apply", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#apply():monix.execution.cancelables.MultiAssignmentCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/MultiAssignmentCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/cancelables\/MultiAssignmentCancelable.html", "kind" : "class"}, {"name" : "monix.execution.cancelables.RefCountCancelable", "shortDescription" : "Represents a Cancelable that only executes the canceling logic when alldependent cancelable objects have been canceled.", "object" : "monix\/execution\/cancelables\/RefCountCancelable$.html", "members_class" : [{"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.cancelables.RefCountCancelable.cancel", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#cancel():Unit", "kind" : "def"}, {"label" : "acquire", "tail" : "(): Cancelable", "member" : "monix.execution.cancelables.RefCountCancelable.acquire", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#acquire():monix.execution.Cancelable", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.RefCountCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/RefCountCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(onCancel: () â‡’ Unit): RefCountCancelable", "member" : "monix.execution.cancelables.RefCountCancelable.apply", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#apply(onCancel:()=>Unit):monix.execution.cancelables.RefCountCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/RefCountCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/cancelables\/RefCountCancelable.html", "kind" : "class"}, {"name" : "monix.execution.cancelables.SerialCancelable", "shortDescription" : "Represents a monix.execution.Cancelable whose underlying cancelablecan be swapped for another cancelable which causes the previous underlyingcancelable to be canceled.", "object" : "monix\/execution\/cancelables\/SerialCancelable$.html", "members_class" : [{"label" : "orderedUpdate", "tail" : "(value: Cancelable, order: Long): SerialCancelable.this.type", "member" : "monix.execution.cancelables.SerialCancelable.orderedUpdate", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#orderedUpdate(value:monix.execution.Cancelable,order:Long):SerialCancelable.this.type", "kind" : "def"}, {"label" : ":=", "tail" : "(value: Cancelable): SerialCancelable.this.type", "member" : "monix.execution.cancelables.SerialCancelable.:=", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#:=(value:monix.execution.Cancelable):SerialCancelable.this.type", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.cancelables.SerialCancelable.cancel", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#cancel():Unit", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.SerialCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/SerialCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/SerialCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(initial: Cancelable): SerialCancelable", "member" : "monix.execution.cancelables.SerialCancelable.apply", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#apply(initial:monix.execution.Cancelable):monix.execution.cancelables.SerialCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(): SerialCancelable", "member" : "monix.execution.cancelables.SerialCancelable.apply", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#apply():monix.execution.cancelables.SerialCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/SerialCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/cancelables\/SerialCancelable.html", "kind" : "class"}, {"name" : "monix.execution.cancelables.SingleAssignmentCancelable", "shortDescription" : "Represents a monix.execution.Cancelable that can be assigned onlyonce to another cancelable reference.", "object" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html", "members_class" : [{"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.cancelables.SingleAssignmentCancelable.cancel", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#cancel():Unit", "kind" : "def"}, {"label" : ":=", "tail" : "(value: Cancelable): SingleAssignmentCancelable.this.type", "member" : "monix.execution.cancelables.SingleAssignmentCancelable.:=", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#:=(value:monix.execution.Cancelable):SingleAssignmentCancelable.this.type", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.SingleAssignmentCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "plusOne", "tail" : "(guest: Cancelable): SingleAssignmentCancelable", "member" : "monix.execution.cancelables.SingleAssignmentCancelable.plusOne", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#plusOne(guest:monix.execution.Cancelable):monix.execution.cancelables.SingleAssignmentCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(): SingleAssignmentCancelable", "member" : "monix.execution.cancelables.SingleAssignmentCancelable.apply", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#apply():monix.execution.cancelables.SingleAssignmentCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/SingleAssignmentCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/cancelables\/SingleAssignmentCancelable.html", "kind" : "class"}, {"name" : "monix.execution.cancelables.StackedCancelable", "shortDescription" : "Represents a composite of cancelables that are stacked,so you can push a new reference, or pop an existing one andwhen it gets canceled, then the whole stack gets canceled.", "object" : "monix\/execution\/cancelables\/StackedCancelable$.html", "members_class" : [{"label" : "pop", "tail" : "(): Cancelable", "member" : "monix.execution.cancelables.StackedCancelable.pop", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#pop():monix.execution.Cancelable", "kind" : "def"}, {"label" : "push", "tail" : "(value: Cancelable): Unit", "member" : "monix.execution.cancelables.StackedCancelable.push", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#push(value:monix.execution.Cancelable):Unit", "kind" : "def"}, {"label" : "pushList", "tail" : "(list: List[Cancelable]): Unit", "member" : "monix.execution.cancelables.StackedCancelable.pushList", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#pushList(list:List[monix.execution.Cancelable]):Unit", "kind" : "def"}, {"label" : "popAndPush", "tail" : "(value: Cancelable): Cancelable", "member" : "monix.execution.cancelables.StackedCancelable.popAndPush", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#popAndPush(value:monix.execution.Cancelable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "popAndPushList", "tail" : "(list: List[Cancelable]): Cancelable", "member" : "monix.execution.cancelables.StackedCancelable.popAndPushList", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#popAndPushList(list:List[monix.execution.Cancelable]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "popAndCollapse", "tail" : "(value: StackedCancelable): Cancelable", "member" : "monix.execution.cancelables.StackedCancelable.popAndCollapse", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#popAndCollapse(value:monix.execution.cancelables.StackedCancelable):monix.execution.Cancelable", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "monix.execution.cancelables.StackedCancelable.cancel", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#cancel():Unit", "kind" : "def"}, {"label" : "isCanceled", "tail" : "(): Boolean", "member" : "monix.execution.cancelables.StackedCancelable.isCanceled", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#isCanceled:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/StackedCancelable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/StackedCancelable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(initial: List[Cancelable]): StackedCancelable", "member" : "monix.execution.cancelables.StackedCancelable.apply", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#apply(initial:List[monix.execution.Cancelable]):monix.execution.cancelables.StackedCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(initial: Cancelable): StackedCancelable", "member" : "monix.execution.cancelables.StackedCancelable.apply", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#apply(initial:monix.execution.Cancelable):monix.execution.cancelables.StackedCancelable", "kind" : "def"}, {"label" : "apply", "tail" : "(): StackedCancelable", "member" : "monix.execution.cancelables.StackedCancelable.apply", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#apply():monix.execution.cancelables.StackedCancelable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/execution\/cancelables\/StackedCancelable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/execution\/cancelables\/StackedCancelable.html", "kind" : "class"}], "monix" : [], "monix.execution.internal" : [], "monix.reactive" : [{"name" : "monix.reactive.Consumer", "members_trait" : [{"label" : "mapAsync", "tail" : "(f: (R) â‡’ Task[R2]): Consumer[In, R2]", "member" : "monix.reactive.Consumer.mapAsync", "link" : "monix\/reactive\/Consumer.html#mapAsync[R2](f:R=>monix.eval.Task[R2]):monix.reactive.Consumer[In,R2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (R) â‡’ R2): Consumer[In, R2]", "member" : "monix.reactive.Consumer.map", "link" : "monix\/reactive\/Consumer.html#map[R2](f:R=>R2):monix.reactive.Consumer[In,R2]", "kind" : "def"}, {"label" : "contramap", "tail" : "(f: (In2) â‡’ In): Consumer[In2, R]", "member" : "monix.reactive.Consumer.contramap", "link" : "monix\/reactive\/Consumer.html#contramap[In2](f:In2=>In):monix.reactive.Consumer[In2,R]", "kind" : "def"}, {"label" : "apply", "tail" : "(source: Observable[In]): Task[R]", "member" : "monix.reactive.Consumer.apply", "link" : "monix\/reactive\/Consumer.html#apply(source:monix.reactive.Observable[In]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "monix\/reactive\/Consumer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Task[R]) â‡’ A): (Observable[In]) â‡’ A", "member" : "scala.Function1.andThen", "link" : "monix\/reactive\/Consumer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Observable[In]): (A) â‡’ Task[R]", "member" : "scala.Function1.compose", "link" : "monix\/reactive\/Consumer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Consumer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Consumer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Consumer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Consumer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Consumer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Consumer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Consumer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Consumer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Consumer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Consumer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Consumer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Consumer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Consumer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Consumer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Consumer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Consumer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Consumer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Consumer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createSubscriber", "tail" : "(cb: Callback[R], s: Scheduler): (Subscriber[In], AssignableCancelable)", "member" : "monix.reactive.Consumer.createSubscriber", "link" : "monix\/reactive\/Consumer.html#createSubscriber(cb:monix.eval.Callback[R],s:monix.execution.Scheduler):(monix.reactive.observers.Subscriber[In],monix.execution.cancelables.AssignableCancelable)", "kind" : "abstract def"}], "shortDescription" : "The Consumer is a specification of how to consume an observable.", "object" : "monix\/reactive\/Consumer$.html", "members_object" : [{"label" : "Sync", "tail" : "", "member" : "monix.reactive.Consumer.Sync", "link" : "monix\/reactive\/Consumer$.html#Sync[-In,+R]extendsConsumer[In,R]", "kind" : "trait"}, {"label" : "loadBalance", "tail" : "(consumers: Consumer[A, R]*): Consumer[A, List[R]]", "member" : "monix.reactive.Consumer.loadBalance", "link" : "monix\/reactive\/Consumer$.html#loadBalance[A,R](consumers:monix.reactive.Consumer[A,R]*):monix.reactive.Consumer[A,List[R]]", "kind" : "def"}, {"label" : "loadBalance", "tail" : "(parallelism: Int, consumer: Consumer[A, R]): Consumer[A, List[R]]", "member" : "monix.reactive.Consumer.loadBalance", "link" : "monix\/reactive\/Consumer$.html#loadBalance[A,R](parallelism:Int,consumer:monix.reactive.Consumer[A,R]):monix.reactive.Consumer[A,List[R]]", "kind" : "def"}, {"label" : "foreachParallelAsync", "tail" : "(parallelism: Int)(cb: (A) â‡’ Task[Unit]): Consumer[A, Unit]", "member" : "monix.reactive.Consumer.foreachParallelAsync", "link" : "monix\/reactive\/Consumer$.html#foreachParallelAsync[A](parallelism:Int)(cb:A=>monix.eval.Task[Unit]):monix.reactive.Consumer[A,Unit]", "kind" : "def"}, {"label" : "foreachParallel", "tail" : "(parallelism: Int)(cb: (A) â‡’ Unit): Consumer[A, Unit]", "member" : "monix.reactive.Consumer.foreachParallel", "link" : "monix\/reactive\/Consumer$.html#foreachParallel[A](parallelism:Int)(cb:A=>Unit):monix.reactive.Consumer[A,Unit]", "kind" : "def"}, {"label" : "foreachAsync", "tail" : "(cb: (A) â‡’ Task[Unit]): Consumer[A, Unit]", "member" : "monix.reactive.Consumer.foreachAsync", "link" : "monix\/reactive\/Consumer$.html#foreachAsync[A](cb:A=>monix.eval.Task[Unit]):monix.reactive.Consumer[A,Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(cb: (A) â‡’ Unit): Sync[A, Unit]", "member" : "monix.reactive.Consumer.foreach", "link" : "monix\/reactive\/Consumer$.html#foreach[A](cb:A=>Unit):monix.reactive.Consumer.Sync[A,Unit]", "kind" : "def"}, {"label" : "complete", "tail" : "(): Sync[A, Unit]", "member" : "monix.reactive.Consumer.complete", "link" : "monix\/reactive\/Consumer$.html#complete[A]:monix.reactive.Consumer.Sync[A,Unit]", "kind" : "def"}, {"label" : "firstNotification", "tail" : "(): Sync[A, Notification[A]]", "member" : "monix.reactive.Consumer.firstNotification", "link" : "monix\/reactive\/Consumer$.html#firstNotification[A]:monix.reactive.Consumer.Sync[A,monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Sync[A, Option[A]]", "member" : "monix.reactive.Consumer.headOption", "link" : "monix\/reactive\/Consumer$.html#headOption[A]:monix.reactive.Consumer.Sync[A,Option[A]]", "kind" : "def"}, {"label" : "head", "tail" : "(): Sync[A, A]", "member" : "monix.reactive.Consumer.head", "link" : "monix\/reactive\/Consumer$.html#head[A]:monix.reactive.Consumer.Sync[A,A]", "kind" : "def"}, {"label" : "foldLeftAsync", "tail" : "(initial: â‡’ S)(f: (S, A) â‡’ Task[S]): Consumer[A, S]", "member" : "monix.reactive.Consumer.foldLeftAsync", "link" : "monix\/reactive\/Consumer$.html#foldLeftAsync[S,A](initial:=>S)(f:(S,A)=>monix.eval.Task[S]):monix.reactive.Consumer[A,S]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(initial: â‡’ S)(f: (S, A) â‡’ S): Sync[A, S]", "member" : "monix.reactive.Consumer.foldLeft", "link" : "monix\/reactive\/Consumer$.html#foldLeft[S,A](initial:=>S)(f:(S,A)=>S):monix.reactive.Consumer.Sync[A,S]", "kind" : "def"}, {"label" : "raiseError", "tail" : "(ex: Throwable): Sync[In, R]", "member" : "monix.reactive.Consumer.raiseError", "link" : "monix\/reactive\/Consumer$.html#raiseError[In,R](ex:Throwable):monix.reactive.Consumer.Sync[In,R]", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Sync[A, Unit]", "member" : "monix.reactive.Consumer.cancel", "link" : "monix\/reactive\/Consumer$.html#cancel[A]:monix.reactive.Consumer.Sync[A,Unit]", "kind" : "def"}, {"label" : "fromObserver", "tail" : "(f: (Scheduler) â‡’ Observer[In]): Consumer[In, Unit]", "member" : "monix.reactive.Consumer.fromObserver", "link" : "monix\/reactive\/Consumer$.html#fromObserver[In](f:monix.execution.Scheduler=>monix.reactive.Observer[In]):monix.reactive.Consumer[In,Unit]", "kind" : "def"}, {"label" : "create", "tail" : "(f: (Scheduler, Cancelable, Callback[Out]) â‡’ Observer[In]): Consumer[In, Out]", "member" : "monix.reactive.Consumer.create", "link" : "monix\/reactive\/Consumer$.html#create[In,Out](f:(monix.execution.Scheduler,monix.execution.Cancelable,monix.eval.Callback[Out])=>monix.reactive.Observer[In]):monix.reactive.Consumer[In,Out]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Consumer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Consumer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Consumer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Consumer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Consumer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Consumer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Consumer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Consumer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Consumer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Consumer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Consumer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Consumer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Consumer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Consumer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Consumer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Consumer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Consumer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Consumer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Consumer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/Consumer.html", "kind" : "trait"}, {"name" : "monix.reactive.MulticastStrategy", "shortDescription" : "The MulticastStrategy specifies the strategy forbuilding data-sources that are shared between multiple subscribers.", "object" : "monix\/reactive\/MulticastStrategy$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/MulticastStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/MulticastStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/MulticastStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/MulticastStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/MulticastStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/MulticastStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/MulticastStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/MulticastStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/MulticastStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/MulticastStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/MulticastStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/MulticastStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/MulticastStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/MulticastStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/MulticastStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/MulticastStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/MulticastStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/MulticastStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/MulticastStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ReplayLimited", "tail" : "", "member" : "monix.reactive.MulticastStrategy.ReplayLimited", "link" : "monix\/reactive\/MulticastStrategy$.html#ReplayLimited[A]extendsMulticastStrategy[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "replayLimited", "tail" : "(capacity: Int, initial: Seq[A]): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.replayLimited", "link" : "monix\/reactive\/MulticastStrategy$.html#replayLimited[A](capacity:Int,initial:Seq[A]):monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "replayLimited", "tail" : "(capacity: Int): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.replayLimited", "link" : "monix\/reactive\/MulticastStrategy$.html#replayLimited[A](capacity:Int):monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "Replay", "tail" : "", "member" : "monix.reactive.MulticastStrategy.Replay", "link" : "monix\/reactive\/MulticastStrategy$.html#Replay[A]extendsMulticastStrategy[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "replay", "tail" : "(initial: Seq[A]): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.replay", "link" : "monix\/reactive\/MulticastStrategy$.html#replay[A](initial:Seq[A]):monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.replay", "link" : "monix\/reactive\/MulticastStrategy$.html#replay[A]:monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "Async", "tail" : "", "member" : "monix.reactive.MulticastStrategy.Async", "link" : "monix\/reactive\/MulticastStrategy$.html#Async", "kind" : "object"}, {"label" : "async", "tail" : "(): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.async", "link" : "monix\/reactive\/MulticastStrategy$.html#async[A]:monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "Behavior", "tail" : "", "member" : "monix.reactive.MulticastStrategy.Behavior", "link" : "monix\/reactive\/MulticastStrategy$.html#Behavior[A]extendsMulticastStrategy[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "behavior", "tail" : "(initial: A): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.behavior", "link" : "monix\/reactive\/MulticastStrategy$.html#behavior[A](initial:A):monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "Publish", "tail" : "", "member" : "monix.reactive.MulticastStrategy.Publish", "link" : "monix\/reactive\/MulticastStrategy$.html#Publish", "kind" : "object"}, {"label" : "publish", "tail" : "(): MulticastStrategy[A]", "member" : "monix.reactive.MulticastStrategy.publish", "link" : "monix\/reactive\/MulticastStrategy$.html#publish[A]:monix.reactive.MulticastStrategy[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/MulticastStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/MulticastStrategy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/MulticastStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/MulticastStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/MulticastStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/MulticastStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/MulticastStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/MulticastStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/MulticastStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/MulticastStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/MulticastStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/MulticastStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/MulticastStrategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/MulticastStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/MulticastStrategy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/MulticastStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/MulticastStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/MulticastStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/MulticastStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/MulticastStrategy.html", "kind" : "class"}, {"name" : "monix.reactive.Notification", "shortDescription" : "Used by Observable.materialize.", "object" : "monix\/reactive\/Notification$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Notification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Notification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Notification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Notification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Notification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Notification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Notification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Notification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Notification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Notification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Notification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Notification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Notification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Notification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Notification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Notification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Notification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Notification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Notification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "OnComplete", "tail" : "", "member" : "monix.reactive.Notification.OnComplete", "link" : "monix\/reactive\/Notification$.html#OnComplete", "kind" : "object"}, {"label" : "OnError", "tail" : "", "member" : "monix.reactive.Notification.OnError", "link" : "monix\/reactive\/Notification$.html#OnErrorextendsNotification[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "OnNext", "tail" : "", "member" : "monix.reactive.Notification.OnNext", "link" : "monix\/reactive\/Notification$.html#OnNext[+T]extendsNotification[T]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Notification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Notification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Notification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Notification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Notification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Notification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Notification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Notification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Notification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Notification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Notification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Notification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Notification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Notification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Notification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Notification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Notification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Notification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Notification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/Notification.html", "kind" : "class"}, {"name" : "monix.reactive.Observable", "members_trait" : [{"label" : "foreach", "tail" : "(cb: (A) â‡’ Unit)(s: Scheduler): CancelableFuture[Unit]", "member" : "monix.reactive.Observable.foreach", "link" : "monix\/reactive\/Observable.html#foreach(cb:A=>Unit)(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Unit]", "kind" : "def"}, {"label" : "foreachL", "tail" : "(cb: (A) â‡’ Unit): Task[Unit]", "member" : "monix.reactive.Observable.foreachL", "link" : "monix\/reactive\/Observable.html#foreachL(cb:A=>Unit):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "toListL", "tail" : "(): Task[List[A]]", "member" : "monix.reactive.Observable.toListL", "link" : "monix\/reactive\/Observable.html#toListL:monix.eval.Task[List[A]]", "kind" : "def"}, {"label" : "sumL", "tail" : "(B: Numeric[B]): Task[B]", "member" : "monix.reactive.Observable.sumL", "link" : "monix\/reactive\/Observable.html#sumL[B>:A](implicitB:Numeric[B]):monix.eval.Task[B]", "kind" : "def"}, {"label" : "nonEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.nonEmptyL", "link" : "monix\/reactive\/Observable.html#nonEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "minByL", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Task[Option[A]]", "member" : "monix.reactive.Observable.minByL", "link" : "monix\/reactive\/Observable.html#minByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "minL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.minL", "link" : "monix\/reactive\/Observable.html#minL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "maxByL", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Task[Option[A]]", "member" : "monix.reactive.Observable.maxByL", "link" : "monix\/reactive\/Observable.html#maxByL[B](f:A=>B)(implicitev:Ordering[B]):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "maxL", "tail" : "(ev: Ordering[B]): Task[Option[B]]", "member" : "monix.reactive.Observable.maxL", "link" : "monix\/reactive\/Observable.html#maxL[B>:A](implicitev:Ordering[B]):monix.eval.Task[Option[B]]", "kind" : "def"}, {"label" : "completedL", "tail" : "(): Task[Unit]", "member" : "monix.reactive.Observable.completedL", "link" : "monix\/reactive\/Observable.html#completedL:monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "isEmptyL", "tail" : "(): Task[Boolean]", "member" : "monix.reactive.Observable.isEmptyL", "link" : "monix\/reactive\/Observable.html#isEmptyL:monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "lastL", "tail" : "(): Task[A]", "member" : "monix.reactive.Observable.lastL", "link" : "monix\/reactive\/Observable.html#lastL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "lastOptionL", "tail" : "(): Task[Option[A]]", "member" : "monix.reactive.Observable.lastOptionL", "link" : "monix\/reactive\/Observable.html#lastOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "lastOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.lastOrElseL", "link" : "monix\/reactive\/Observable.html#lastOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.headOrElseL", "link" : "monix\/reactive\/Observable.html#headOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "headL", "tail" : "(): Task[A]", "member" : "monix.reactive.Observable.headL", "link" : "monix\/reactive\/Observable.html#headL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "headOptionL", "tail" : "(): Task[Option[A]]", "member" : "monix.reactive.Observable.headOptionL", "link" : "monix\/reactive\/Observable.html#headOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstOrElseL", "tail" : "(default: â‡’ B): Task[B]", "member" : "monix.reactive.Observable.firstOrElseL", "link" : "monix\/reactive\/Observable.html#firstOrElseL[B>:A](default:=>B):monix.eval.Task[B]", "kind" : "def"}, {"label" : "firstOptionL", "tail" : "(): Task[Option[A]]", "member" : "monix.reactive.Observable.firstOptionL", "link" : "monix\/reactive\/Observable.html#firstOptionL:monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "firstL", "tail" : "(): Task[A]", "member" : "monix.reactive.Observable.firstL", "link" : "monix\/reactive\/Observable.html#firstL:monix.eval.Task[A]", "kind" : "def"}, {"label" : "forAllL", "tail" : "(p: (A) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.forAllL", "link" : "monix\/reactive\/Observable.html#forAllL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "foldWhileL", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ (Boolean, R)): Task[R]", "member" : "monix.reactive.Observable.foldWhileL", "link" : "monix\/reactive\/Observable.html#foldWhileL[R](initial:=>R)(op:(R,A)=>(Boolean,R)):monix.eval.Task[R]", "kind" : "def"}, {"label" : "foldLeftL", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ R): Task[R]", "member" : "monix.reactive.Observable.foldLeftL", "link" : "monix\/reactive\/Observable.html#foldLeftL[R](initial:=>R)(op:(R,A)=>R):monix.eval.Task[R]", "kind" : "def"}, {"label" : "findL", "tail" : "(p: (A) â‡’ Boolean): Task[Option[A]]", "member" : "monix.reactive.Observable.findL", "link" : "monix\/reactive\/Observable.html#findL(p:A=>Boolean):monix.eval.Task[Option[A]]", "kind" : "def"}, {"label" : "existsL", "tail" : "(p: (A) â‡’ Boolean): Task[Boolean]", "member" : "monix.reactive.Observable.existsL", "link" : "monix\/reactive\/Observable.html#existsL(p:A=>Boolean):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "countL", "tail" : "(): Task[Long]", "member" : "monix.reactive.Observable.countL", "link" : "monix\/reactive\/Observable.html#countL:monix.eval.Task[Long]", "kind" : "def"}, {"label" : "runAsyncGetLast", "tail" : "(s: Scheduler): CancelableFuture[Option[A]]", "member" : "monix.reactive.Observable.runAsyncGetLast", "link" : "monix\/reactive\/Observable.html#runAsyncGetLast(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "runAsyncGetFirst", "tail" : "(s: Scheduler): CancelableFuture[Option[A]]", "member" : "monix.reactive.Observable.runAsyncGetFirst", "link" : "monix\/reactive\/Observable.html#runAsyncGetFirst(implicits:monix.execution.Scheduler):monix.execution.CancelableFuture[Option[A]]", "kind" : "def"}, {"label" : "publishLast", "tail" : "(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.publishLast", "link" : "monix\/reactive\/Observable.html#publishLast(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(bufferSize: Int)(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/Observable.html#replay(bufferSize:Int)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "replay", "tail" : "(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.replay", "link" : "monix\/reactive\/Observable.html#replay(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initialValue: B)(s: Scheduler): ConnectableObservable[B]", "member" : "monix.reactive.Observable.behavior", "link" : "monix\/reactive\/Observable.html#behavior[B>:A](initialValue:B)(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[B]", "kind" : "def"}, {"label" : "cache", "tail" : "(maxCapacity: Int): Observable[A]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/Observable.html#cache(maxCapacity:Int):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cache", "tail" : "(): Observable[A]", "member" : "monix.reactive.Observable.cache", "link" : "monix\/reactive\/Observable.html#cache:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "share", "tail" : "(s: Scheduler): Observable[A]", "member" : "monix.reactive.Observable.share", "link" : "monix\/reactive\/Observable.html#share(implicits:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "publish", "tail" : "(s: Scheduler): ConnectableObservable[A]", "member" : "monix.reactive.Observable.publish", "link" : "monix\/reactive\/Observable.html#publish(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(pipe: Pipe[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/Observable.html#multicast[B>:A,R](pipe:monix.reactive.Pipe[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "unsafeMulticast", "tail" : "(processor: Subject[B, R])(s: Scheduler): ConnectableObservable[R]", "member" : "monix.reactive.Observable.unsafeMulticast", "link" : "monix\/reactive\/Observable.html#unsafeMulticast[B>:A,R](processor:monix.reactive.subjects.Subject[B,R])(implicits:monix.execution.Scheduler):monix.reactive.observables.ConnectableObservable[R]", "kind" : "def"}, {"label" : "toReactivePublisher", "tail" : "(s: Scheduler): Publisher[B]", "member" : "monix.reactive.Observable.toReactivePublisher", "link" : "monix\/reactive\/Observable.html#toReactivePublisher[B>:A](implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[B]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: Transformer[A, B]): Observable[B]", "member" : "monix.reactive.Observable.transform", "link" : "monix\/reactive\/Observable.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(operator: Operator[A, B]): Observable[B]", "member" : "monix.reactive.Observable.liftByOperator", "link" : "monix\/reactive\/Observable.html#liftByOperator[B](operator:monix.reactive.observables.ObservableLike.Operator[A,B]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "runWith", "tail" : "(f: Consumer[A, R]): Task[R]", "member" : "monix.reactive.Observable.runWith", "link" : "monix\/reactive\/Observable.html#runWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "consumeWith", "tail" : "(f: Consumer[A, R]): Task[R]", "member" : "monix.reactive.Observable.consumeWith", "link" : "monix\/reactive\/Observable.html#consumeWith[R](f:monix.reactive.Consumer[A,R]):monix.eval.Task[R]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (A) â‡’ Future[Ack])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/Observable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "()(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/Observable.html#subscribe()(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (A) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/Observable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(nextFn: (A) â‡’ Future[Ack], errorFn: (Throwable) â‡’ Unit, completedFn: () â‡’ Unit)(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/Observable.html#subscribe(nextFn:A=>scala.concurrent.Future[monix.execution.Ack],errorFn:Throwable=>Unit,completedFn:()=>Unit)(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(observer: Observer[A])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/Observable.html#subscribe(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "subscribe", "tail" : "(subscriber: Subscriber[A]): Cancelable", "member" : "monix.reactive.Observable.subscribe", "link" : "monix\/reactive\/Observable.html#subscribe(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "unsafeSubscribeFn", "tail" : "(observer: Observer[A])(s: Scheduler): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/Observable.html#unsafeSubscribeFn(observer:monix.reactive.Observer[A])(implicits:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Observable[(A, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/Observable.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/Observable.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Observable[(A, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/Observable.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (A, B1, B2, B3, B4, B5, B6) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/Observable.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (A, B1, B2, B3, B4, B5) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/Observable.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (A, B1, B2, B3, B4) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/Observable.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (A, B1, B2, B3) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/Observable.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (A, B1, B2) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/Observable.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/Observable.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/Observable.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/Observable.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/Observable.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/Observable.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/Observable.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/Observable.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/Observable.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/Observable.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/Observable.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/Observable.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/Observable.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/Observable.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/Observable.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/Observable.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/Observable.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/Observable.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/Observable.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/Observable.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/Observable.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/Observable.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/Observable.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/Observable.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/Observable.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, A) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/Observable.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/Observable.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/Observable.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/Observable.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/Observable.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/Observable.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/Observable.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/Observable.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[A]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/Observable.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/Observable.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/Observable.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/Observable.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/Observable.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/Observable.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/Observable.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/Observable.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/Observable.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/Observable.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/Observable.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/Observable.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/Observable.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/Observable.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/Observable.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/Observable.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/Observable.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/Observable.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/Observable.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (A) â‡’ Observable[B])(os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/Observable.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[A, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/Observable.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[A, Observable[B]], os: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/Observable.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (A) â‡’ B)(ev: Ordering[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/Observable.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/Observable.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Observable[Notification[A]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/Observable.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (A) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/Observable.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (A) â‡’ Future[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/Observable.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (A) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/Observable.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (A) â‡’ Task[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/Observable.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/Observable.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/Observable.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/Observable.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/Observable.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/Observable.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/Observable.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/Observable.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (A) â‡’ K)(keysBuffer: Synchronous[Nothing]): Observable[GroupedObservable[K, A]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/Observable.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (A) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/Observable.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ (Boolean, R)): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/Observable.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/Observable.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/Observable.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/Observable.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/Observable.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/Observable.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, A) â‡’ Observable[R]): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/Observable.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/Observable.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/Observable.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/Observable.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/Observable.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/Observable.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/Observable.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Observable[Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/Observable.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (A) â‡’ Boolean): Observable[Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/Observable.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/Observable.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/Observable.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/Observable.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/Observable.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/Observable.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (A, Int) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/Observable.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) â‡’ Boolean): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/Observable.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/Observable.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/Observable.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/Observable.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/Observable.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/Observable.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/Observable.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (A) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/Observable.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (A, Ack) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/Observable.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (A, Ack) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/Observable.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (A) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/Observable.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (A) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/Observable.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/Observable.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/Observable.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/Observable.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/Observable.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/Observable.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/Observable.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/Observable.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/Observable.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/Observable.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/Observable.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/Observable.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (A) â‡’ K): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/Observable.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/Observable.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (A) â‡’ K): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/Observable.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/Observable.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[A, Notification[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/Observable.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/Observable.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/Observable.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (A) â‡’ Observable[B]): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/Observable.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/Observable.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/Observable.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/Observable.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/Observable.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/Observable.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Observable[A]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/Observable.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Observable[Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/Observable.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/Observable.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/Observable.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (A) â‡’ Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/Observable.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[A, Observable[B]]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/Observable.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/Observable.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (A, B) â‡’ R): Observable[R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/Observable.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Observable[(A, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/Observable.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/Observable.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Observable[List[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/Observable.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/Observable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/Observable.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/Observable.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/Observable.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/Observable.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/Observable.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Observable[Seq[A]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/Observable.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/Observable.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/Observable.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/Observable.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/Observable.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Observable[B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/Observable.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Observable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Observable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Observable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Observable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Observable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Observable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Observable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Observable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Observable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Observable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Observable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Observable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Observable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Observable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Observable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Observable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unsafeSubscribeFn", "tail" : "(subscriber: Subscriber[A]): Cancelable", "member" : "monix.reactive.Observable.unsafeSubscribeFn", "link" : "monix\/reactive\/Observable.html#unsafeSubscribeFn(subscriber:monix.reactive.observers.Subscriber[A]):monix.execution.Cancelable", "kind" : "abstract def"}], "shortDescription" : "The Observable type that implements the Reactive Pattern.", "object" : "monix\/reactive\/Observable$.html", "members_object" : [{"label" : "TypeClassInstances", "tail" : "", "member" : "monix.reactive.Observable.TypeClassInstances", "link" : "monix\/reactive\/Observable$.html#TypeClassInstancesextendsSuspendable.Instance[monix.reactive.Observable]withMemoizable.Instance[monix.reactive.Observable]withMonadError.Instance[monix.reactive.Observable,Throwable]withMonadFilter.Instance[monix.reactive.Observable]withMonoidK.Instance[monix.reactive.Observable]withCobind.Instance[monix.reactive.Observable]withMonadRec.Instance[monix.reactive.Observable]", "kind" : "class"}, {"label" : "typeClassInstances", "tail" : ": TypeClassInstances", "member" : "monix.reactive.Observable.typeClassInstances", "link" : "monix\/reactive\/Observable$.html#typeClassInstances:monix.reactive.Observable.TypeClassInstances", "kind" : "implicit val"}, {"label" : "firstStartedOf", "tail" : "(source: Observable[A]*): Observable[A]", "member" : "monix.reactive.Observable.firstStartedOf", "link" : "monix\/reactive\/Observable$.html#firstStartedOf[A](source:monix.reactive.Observable[A]*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "combineLatestList", "tail" : "(sources: Observable[A]*): Observable[Seq[A]]", "member" : "monix.reactive.Observable.combineLatestList", "link" : "monix\/reactive\/Observable$.html#combineLatestList[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[Seq[A]]", "kind" : "def"}, {"label" : "combineLatestMap6", "tail" : "(a1: Observable[A1], a2: Observable[A2], a3: Observable[A3], a4: Observable[A4], a5: Observable[A5], a6: Observable[A6])(f: (A1, A2, A3, A4, A5, A6) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.combineLatestMap6", "link" : "monix\/reactive\/Observable$.html#combineLatestMap6[A1,A2,A3,A4,A5,A6,R](a1:monix.reactive.Observable[A1],a2:monix.reactive.Observable[A2],a3:monix.reactive.Observable[A3],a4:monix.reactive.Observable[A4],a5:monix.reactive.Observable[A5],a6:monix.reactive.Observable[A6])(f:(A1,A2,A3,A4,A5,A6)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "combineLatest6", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4], oa5: Observable[A5], oa6: Observable[A6]): Observable[(A1, A2, A3, A4, A5, A6)]", "member" : "monix.reactive.Observable.combineLatest6", "link" : "monix\/reactive\/Observable$.html#combineLatest6[A1,A2,A3,A4,A5,A6](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4],oa5:monix.reactive.Observable[A5],oa6:monix.reactive.Observable[A6]):monix.reactive.Observable[(A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "combineLatestMap5", "tail" : "(a1: Observable[A1], a2: Observable[A2], a3: Observable[A3], a4: Observable[A4], a5: Observable[A5])(f: (A1, A2, A3, A4, A5) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.combineLatestMap5", "link" : "monix\/reactive\/Observable$.html#combineLatestMap5[A1,A2,A3,A4,A5,R](a1:monix.reactive.Observable[A1],a2:monix.reactive.Observable[A2],a3:monix.reactive.Observable[A3],a4:monix.reactive.Observable[A4],a5:monix.reactive.Observable[A5])(f:(A1,A2,A3,A4,A5)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "combineLatest5", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4], oa5: Observable[A5]): Observable[(A1, A2, A3, A4, A5)]", "member" : "monix.reactive.Observable.combineLatest5", "link" : "monix\/reactive\/Observable$.html#combineLatest5[A1,A2,A3,A4,A5](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4],oa5:monix.reactive.Observable[A5]):monix.reactive.Observable[(A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "combineLatestMap4", "tail" : "(a1: Observable[A1], a2: Observable[A2], a3: Observable[A3], a4: Observable[A4])(f: (A1, A2, A3, A4) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.combineLatestMap4", "link" : "monix\/reactive\/Observable$.html#combineLatestMap4[A1,A2,A3,A4,R](a1:monix.reactive.Observable[A1],a2:monix.reactive.Observable[A2],a3:monix.reactive.Observable[A3],a4:monix.reactive.Observable[A4])(f:(A1,A2,A3,A4)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "combineLatest4", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4]): Observable[(A1, A2, A3, A4)]", "member" : "monix.reactive.Observable.combineLatest4", "link" : "monix\/reactive\/Observable$.html#combineLatest4[A1,A2,A3,A4](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4]):monix.reactive.Observable[(A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "combineLatestMap3", "tail" : "(a1: Observable[A1], a2: Observable[A2], a3: Observable[A3])(f: (A1, A2, A3) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.combineLatestMap3", "link" : "monix\/reactive\/Observable$.html#combineLatestMap3[A1,A2,A3,R](a1:monix.reactive.Observable[A1],a2:monix.reactive.Observable[A2],a3:monix.reactive.Observable[A3])(f:(A1,A2,A3)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "combineLatest3", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3]): Observable[(A1, A2, A3)]", "member" : "monix.reactive.Observable.combineLatest3", "link" : "monix\/reactive\/Observable$.html#combineLatest3[A1,A2,A3](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3]):monix.reactive.Observable[(A1,A2,A3)]", "kind" : "def"}, {"label" : "combineLatestMap2", "tail" : "(oa1: Observable[A1], oa2: Observable[A2])(f: (A1, A2) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.combineLatestMap2", "link" : "monix\/reactive\/Observable$.html#combineLatestMap2[A1,A2,R](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2])(f:(A1,A2)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "combineLatest2", "tail" : "(oa1: Observable[A1], oa2: Observable[A2]): Observable[(A1, A2)]", "member" : "monix.reactive.Observable.combineLatest2", "link" : "monix\/reactive\/Observable$.html#combineLatest2[A1,A2](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2]):monix.reactive.Observable[(A1,A2)]", "kind" : "def"}, {"label" : "zipList", "tail" : "(sources: Observable[A]*): Observable[Seq[A]]", "member" : "monix.reactive.Observable.zipList", "link" : "monix\/reactive\/Observable$.html#zipList[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[Seq[A]]", "kind" : "def"}, {"label" : "zipMap6", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4], oa5: Observable[A5], oa6: Observable[A6])(f: (A1, A2, A3, A4, A5, A6) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.zipMap6", "link" : "monix\/reactive\/Observable$.html#zipMap6[A1,A2,A3,A4,A5,A6,R](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4],oa5:monix.reactive.Observable[A5],oa6:monix.reactive.Observable[A6])(f:(A1,A2,A3,A4,A5,A6)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "zip6", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4], oa5: Observable[A5], oa6: Observable[A6]): Observable[(A1, A2, A3, A4, A5, A6)]", "member" : "monix.reactive.Observable.zip6", "link" : "monix\/reactive\/Observable$.html#zip6[A1,A2,A3,A4,A5,A6](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4],oa5:monix.reactive.Observable[A5],oa6:monix.reactive.Observable[A6]):monix.reactive.Observable[(A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "zipMap5", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4], oa5: Observable[A5])(f: (A1, A2, A3, A4, A5) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.zipMap5", "link" : "monix\/reactive\/Observable$.html#zipMap5[A1,A2,A3,A4,A5,R](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4],oa5:monix.reactive.Observable[A5])(f:(A1,A2,A3,A4,A5)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "zip5", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4], oa5: Observable[A5]): Observable[(A1, A2, A3, A4, A5)]", "member" : "monix.reactive.Observable.zip5", "link" : "monix\/reactive\/Observable$.html#zip5[A1,A2,A3,A4,A5](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4],oa5:monix.reactive.Observable[A5]):monix.reactive.Observable[(A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "zipMap4", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4])(f: (A1, A2, A3, A4) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.zipMap4", "link" : "monix\/reactive\/Observable$.html#zipMap4[A1,A2,A3,A4,R](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4])(f:(A1,A2,A3,A4)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "zip4", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3], oa4: Observable[A4]): Observable[(A1, A2, A3, A4)]", "member" : "monix.reactive.Observable.zip4", "link" : "monix\/reactive\/Observable$.html#zip4[A1,A2,A3,A4](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3],oa4:monix.reactive.Observable[A4]):monix.reactive.Observable[(A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "zipMap3", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3])(f: (A1, A2, A3) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.zipMap3", "link" : "monix\/reactive\/Observable$.html#zipMap3[A1,A2,A3,R](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3])(f:(A1,A2,A3)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "zip3", "tail" : "(oa1: Observable[A1], oa2: Observable[A2], oa3: Observable[A3]): Observable[(A1, A2, A3)]", "member" : "monix.reactive.Observable.zip3", "link" : "monix\/reactive\/Observable$.html#zip3[A1,A2,A3](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2],oa3:monix.reactive.Observable[A3]):monix.reactive.Observable[(A1,A2,A3)]", "kind" : "def"}, {"label" : "zipMap2", "tail" : "(oa1: Observable[A1], oa2: Observable[A2])(f: (A1, A2) â‡’ R): Observable[R]", "member" : "monix.reactive.Observable.zipMap2", "link" : "monix\/reactive\/Observable$.html#zipMap2[A1,A2,R](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2])(f:(A1,A2)=>R):monix.reactive.Observable[R]", "kind" : "def"}, {"label" : "zip2", "tail" : "(oa1: Observable[A1], oa2: Observable[A2]): Observable[(A1, A2)]", "member" : "monix.reactive.Observable.zip2", "link" : "monix\/reactive\/Observable$.html#zip2[A1,A2](oa1:monix.reactive.Observable[A1],oa2:monix.reactive.Observable[A2]):monix.reactive.Observable[(A1,A2)]", "kind" : "def"}, {"label" : "switch", "tail" : "(sources: Observable[A]*): Observable[A]", "member" : "monix.reactive.Observable.switch", "link" : "monix\/reactive\/Observable$.html#switch[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "concatDelayError", "tail" : "(sources: Observable[A]*): Observable[A]", "member" : "monix.reactive.Observable.concatDelayError", "link" : "monix\/reactive\/Observable$.html#concatDelayError[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "concat", "tail" : "(sources: Observable[A]*): Observable[A]", "member" : "monix.reactive.Observable.concat", "link" : "monix\/reactive\/Observable$.html#concat[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "mergeDelayError", "tail" : "(sources: Observable[A]*)(os: OverflowStrategy[A]): Observable[A]", "member" : "monix.reactive.Observable.mergeDelayError", "link" : "monix\/reactive\/Observable$.html#mergeDelayError[A](sources:monix.reactive.Observable[A]*)(implicitos:monix.reactive.OverflowStrategy[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(sources: Observable[A]*)(os: OverflowStrategy[A]): Observable[A]", "member" : "monix.reactive.Observable.merge", "link" : "monix\/reactive\/Observable$.html#merge[A](sources:monix.reactive.Observable[A]*)(implicitos:monix.reactive.OverflowStrategy[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "flattenDelayError", "tail" : "(sources: Observable[A]*): Observable[A]", "member" : "monix.reactive.Observable.flattenDelayError", "link" : "monix\/reactive\/Observable$.html#flattenDelayError[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "flatten", "tail" : "(sources: Observable[A]*): Observable[A]", "member" : "monix.reactive.Observable.flatten", "link" : "monix\/reactive\/Observable$.html#flatten[A](sources:monix.reactive.Observable[A]*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "timerRepeated", "tail" : "(initialDelay: FiniteDuration, period: FiniteDuration, unit: A): Observable[A]", "member" : "monix.reactive.Observable.timerRepeated", "link" : "monix\/reactive\/Observable$.html#timerRepeated[A](initialDelay:scala.concurrent.duration.FiniteDuration,period:scala.concurrent.duration.FiniteDuration,unit:A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "toReactive", "tail" : "(source: Observable[A])(s: Scheduler): Publisher[A]", "member" : "monix.reactive.Observable.toReactive", "link" : "monix\/reactive\/Observable$.html#toReactive[A](source:monix.reactive.Observable[A])(implicits:monix.execution.Scheduler):org.reactivestreams.Publisher[A]", "kind" : "def"}, {"label" : "fromAsyncStateAction", "tail" : "(f: (S) â‡’ Task[(A, S)])(initialState: â‡’ S): Observable[A]", "member" : "monix.reactive.Observable.fromAsyncStateAction", "link" : "monix\/reactive\/Observable$.html#fromAsyncStateAction[S,A](f:S=>monix.eval.Task[(A,S)])(initialState:=>S):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromStateAction", "tail" : "(f: (S) â‡’ (A, S))(initialState: â‡’ S): Observable[A]", "member" : "monix.reactive.Observable.fromStateAction", "link" : "monix\/reactive\/Observable$.html#fromStateAction[S,A](f:S=>(A,S))(initialState:=>S):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "range", "tail" : "(from: Long, until: Long, step: Long): Observable[Long]", "member" : "monix.reactive.Observable.range", "link" : "monix\/reactive\/Observable$.html#range(from:Long,until:Long,step:Long):monix.reactive.Observable[Long]", "kind" : "def"}, {"label" : "repeatEval", "tail" : "(task: â‡’ A): Observable[A]", "member" : "monix.reactive.Observable.repeatEval", "link" : "monix\/reactive\/Observable$.html#repeatEval[A](task:=>A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(elems: A*): Observable[A]", "member" : "monix.reactive.Observable.repeat", "link" : "monix\/reactive\/Observable$.html#repeat[A](elems:A*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "intervalAtFixedRate", "tail" : "(initialDelay: FiniteDuration, period: FiniteDuration): Observable[Long]", "member" : "monix.reactive.Observable.intervalAtFixedRate", "link" : "monix\/reactive\/Observable$.html#intervalAtFixedRate(initialDelay:scala.concurrent.duration.FiniteDuration,period:scala.concurrent.duration.FiniteDuration):monix.reactive.Observable[Long]", "kind" : "def"}, {"label" : "intervalAtFixedRate", "tail" : "(period: FiniteDuration): Observable[Long]", "member" : "monix.reactive.Observable.intervalAtFixedRate", "link" : "monix\/reactive\/Observable$.html#intervalAtFixedRate(period:scala.concurrent.duration.FiniteDuration):monix.reactive.Observable[Long]", "kind" : "def"}, {"label" : "interval", "tail" : "(delay: FiniteDuration): Observable[Long]", "member" : "monix.reactive.Observable.interval", "link" : "monix\/reactive\/Observable$.html#interval(delay:scala.concurrent.duration.FiniteDuration):monix.reactive.Observable[Long]", "kind" : "def"}, {"label" : "intervalWithFixedDelay", "tail" : "(initialDelay: FiniteDuration, delay: FiniteDuration): Observable[Long]", "member" : "monix.reactive.Observable.intervalWithFixedDelay", "link" : "monix\/reactive\/Observable$.html#intervalWithFixedDelay(initialDelay:scala.concurrent.duration.FiniteDuration,delay:scala.concurrent.duration.FiniteDuration):monix.reactive.Observable[Long]", "kind" : "def"}, {"label" : "intervalWithFixedDelay", "tail" : "(delay: FiniteDuration): Observable[Long]", "member" : "monix.reactive.Observable.intervalWithFixedDelay", "link" : "monix\/reactive\/Observable$.html#intervalWithFixedDelay(delay:scala.concurrent.duration.FiniteDuration):monix.reactive.Observable[Long]", "kind" : "def"}, {"label" : "interleave2", "tail" : "(oa1: Observable[A], oa2: Observable[A]): Observable[A]", "member" : "monix.reactive.Observable.interleave2", "link" : "monix\/reactive\/Observable$.html#interleave2[A](oa1:monix.reactive.Observable[A],oa2:monix.reactive.Observable[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "cons", "tail" : "(head: A, tail: Observable[A]): Observable[A]", "member" : "monix.reactive.Observable.cons", "link" : "monix\/reactive\/Observable$.html#cons[A](head:A,tail:monix.reactive.Observable[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(fa: â‡’ Observable[A]): Observable[A]", "member" : "monix.reactive.Observable.suspend", "link" : "monix\/reactive\/Observable$.html#suspend[A](fa:=>monix.reactive.Observable[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: â‡’ Observable[A]): Observable[A]", "member" : "monix.reactive.Observable.defer", "link" : "monix\/reactive\/Observable$.html#defer[A](fa:=>monix.reactive.Observable[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromTask", "tail" : "(task: Task[A]): Observable[A]", "member" : "monix.reactive.Observable.fromTask", "link" : "monix\/reactive\/Observable$.html#fromTask[A](task:monix.eval.Task[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(factory: â‡’ Future[A]): Observable[A]", "member" : "monix.reactive.Observable.fromFuture", "link" : "monix\/reactive\/Observable$.html#fromFuture[A](factory:=>scala.concurrent.Future[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromReactivePublisher", "tail" : "(publisher: Publisher[A]): Observable[A]", "member" : "monix.reactive.Observable.fromReactivePublisher", "link" : "monix\/reactive\/Observable$.html#fromReactivePublisher[A](publisher:org.reactivestreams.Publisher[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromLinesReader", "tail" : "(in: BufferedReader): Observable[String]", "member" : "monix.reactive.Observable.fromLinesReader", "link" : "monix\/reactive\/Observable$.html#fromLinesReader(in:java.io.BufferedReader):monix.reactive.Observable[String]", "kind" : "def"}, {"label" : "fromCharsReader", "tail" : "(in: Reader, chunkSize: Int): Observable[Array[Char]]", "member" : "monix.reactive.Observable.fromCharsReader", "link" : "monix\/reactive\/Observable$.html#fromCharsReader(in:java.io.Reader,chunkSize:Int):monix.reactive.Observable[Array[Char]]", "kind" : "def"}, {"label" : "fromCharsReader", "tail" : "(in: Reader): Observable[Array[Char]]", "member" : "monix.reactive.Observable.fromCharsReader", "link" : "monix\/reactive\/Observable$.html#fromCharsReader(in:java.io.Reader):monix.reactive.Observable[Array[Char]]", "kind" : "def"}, {"label" : "fromInputStream", "tail" : "(in: InputStream, chunkSize: Int): Observable[Array[Byte]]", "member" : "monix.reactive.Observable.fromInputStream", "link" : "monix\/reactive\/Observable$.html#fromInputStream(in:java.io.InputStream,chunkSize:Int):monix.reactive.Observable[Array[Byte]]", "kind" : "def"}, {"label" : "fromInputStream", "tail" : "(in: InputStream): Observable[Array[Byte]]", "member" : "monix.reactive.Observable.fromInputStream", "link" : "monix\/reactive\/Observable$.html#fromInputStream(in:java.io.InputStream):monix.reactive.Observable[Array[Byte]]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(iterable: Iterable[A]): Observable[A]", "member" : "monix.reactive.Observable.fromIterable", "link" : "monix\/reactive\/Observable$.html#fromIterable[A](iterable:Iterable[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromIterator", "tail" : "(iterator: Iterator[A], onFinish: () â‡’ Unit): Observable[A]", "member" : "monix.reactive.Observable.fromIterator", "link" : "monix\/reactive\/Observable$.html#fromIterator[A](iterator:Iterator[A],onFinish:()=>Unit):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fromIterator", "tail" : "(iterator: Iterator[A]): Observable[A]", "member" : "monix.reactive.Observable.fromIterator", "link" : "monix\/reactive\/Observable$.html#fromIterator[A](iterator:Iterator[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "multicast", "tail" : "(multicast: MulticastStrategy[A], overflow: Synchronous[A])(s: Scheduler): (Sync[A], Observable[A])", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/Observable$.html#multicast[A](multicast:monix.reactive.MulticastStrategy[A],overflow:monix.reactive.OverflowStrategy.Synchronous[A])(implicits:monix.execution.Scheduler):(monix.reactive.Observer.Sync[A],monix.reactive.Observable[A])", "kind" : "def"}, {"label" : "multicast", "tail" : "(multicast: MulticastStrategy[A])(s: Scheduler): (Sync[A], Observable[A])", "member" : "monix.reactive.Observable.multicast", "link" : "monix\/reactive\/Observable$.html#multicast[A](multicast:monix.reactive.MulticastStrategy[A])(implicits:monix.execution.Scheduler):(monix.reactive.Observer.Sync[A],monix.reactive.Observable[A])", "kind" : "def"}, {"label" : "create", "tail" : "(overflowStrategy: Synchronous[A])(f: (Sync[A]) â‡’ Cancelable): Observable[A]", "member" : "monix.reactive.Observable.create", "link" : "monix\/reactive\/Observable$.html#create[A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[A])(f:monix.reactive.observers.Subscriber.Sync[A]=>monix.execution.Cancelable):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "unsafeCreate", "tail" : "(f: (Subscriber[A]) â‡’ Cancelable): Observable[A]", "member" : "monix.reactive.Observable.unsafeCreate", "link" : "monix\/reactive\/Observable$.html#unsafeCreate[A](f:monix.reactive.observers.Subscriber[A]=>monix.execution.Cancelable):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) â‡’ Observable[Either[A, B]]): Observable[B]", "member" : "monix.reactive.Observable.tailRecM", "link" : "monix\/reactive\/Observable$.html#tailRecM[A,B](a:A)(f:A=>monix.reactive.Observable[Either[A,B]]):monix.reactive.Observable[B]", "kind" : "def"}, {"label" : "fork", "tail" : "(fa: Observable[A], scheduler: Scheduler): Observable[A]", "member" : "monix.reactive.Observable.fork", "link" : "monix\/reactive\/Observable$.html#fork[A](fa:monix.reactive.Observable[A],scheduler:monix.execution.Scheduler):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "fork", "tail" : "(fa: Observable[A]): Observable[A]", "member" : "monix.reactive.Observable.fork", "link" : "monix\/reactive\/Observable$.html#fork[A](fa:monix.reactive.Observable[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "never", "tail" : "(): Observable[Nothing]", "member" : "monix.reactive.Observable.never", "link" : "monix\/reactive\/Observable$.html#never:monix.reactive.Observable[Nothing]", "kind" : "def"}, {"label" : "raiseError", "tail" : "(ex: Throwable): Observable[Nothing]", "member" : "monix.reactive.Observable.raiseError", "link" : "monix\/reactive\/Observable$.html#raiseError(ex:Throwable):monix.reactive.Observable[Nothing]", "kind" : "def"}, {"label" : "evalDelayed", "tail" : "(delay: FiniteDuration, a: â‡’ A): Observable[A]", "member" : "monix.reactive.Observable.evalDelayed", "link" : "monix\/reactive\/Observable$.html#evalDelayed[A](delay:scala.concurrent.duration.FiniteDuration,a:=>A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "coeval", "tail" : "(value: Coeval[A]): Observable[A]", "member" : "monix.reactive.Observable.coeval", "link" : "monix\/reactive\/Observable$.html#coeval[A](value:monix.eval.Coeval[A]):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "evalOnce", "tail" : "(f: â‡’ A): Observable[A]", "member" : "monix.reactive.Observable.evalOnce", "link" : "monix\/reactive\/Observable$.html#evalOnce[A](f:=>A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(a: â‡’ A): Observable[A]", "member" : "monix.reactive.Observable.delay", "link" : "monix\/reactive\/Observable$.html#delay[A](a:=>A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "eval", "tail" : "(a: â‡’ A): Observable[A]", "member" : "monix.reactive.Observable.eval", "link" : "monix\/reactive\/Observable$.html#eval[A](a:=>A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "pure", "tail" : "(elem: A): Observable[A]", "member" : "monix.reactive.Observable.pure", "link" : "monix\/reactive\/Observable$.html#pure[A](elem:A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "now", "tail" : "(elem: A): Observable[A]", "member" : "monix.reactive.Observable.now", "link" : "monix\/reactive\/Observable$.html#now[A](elem:A):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Observable[A]", "member" : "monix.reactive.Observable.empty", "link" : "monix\/reactive\/Observable$.html#empty[A]:monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: A*): Observable[A]", "member" : "monix.reactive.Observable.apply", "link" : "monix\/reactive\/Observable$.html#apply[A](elems:A*):monix.reactive.Observable[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Observable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Observable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Observable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Observable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Observable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Observable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Observable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Observable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Observable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Observable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Observable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Observable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Observable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Observable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Observable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Observable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/Observable.html", "kind" : "trait"}, {"name" : "monix.reactive.Observer", "members_trait" : [{"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "monix\/reactive\/Observer.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Observer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Observer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "monix\/reactive\/Observer.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Any.hashCode", "link" : "monix\/reactive\/Observer.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.equals", "link" : "monix\/reactive\/Observer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "monix\/reactive\/Observer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "monix\/reactive\/Observer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "monix.reactive.Observer.onComplete", "link" : "monix\/reactive\/Observer.html#onComplete():Unit", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "monix.reactive.Observer.onError", "link" : "monix\/reactive\/Observer.html#onError(ex:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onNext", "tail" : "(elem: T): Future[Ack]", "member" : "monix.reactive.Observer.onNext", "link" : "monix\/reactive\/Observer.html#onNext(elem:T):scala.concurrent.Future[monix.execution.Ack]", "kind" : "abstract def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.Any.getClass", "link" : "monix\/reactive\/Observer.html#getClass():Class[_]", "kind" : "abstract def"}], "shortDescription" : "The Observer from the Rx pattern is the trio of callbacks thatget subscribed to an Observablefor receiving events.", "object" : "monix\/reactive\/Observer$.html", "members_object" : [{"label" : "Extensions", "tail" : "", "member" : "monix.reactive.Observer.Extensions", "link" : "monix\/reactive\/Observer$.html#Extensions[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "feed", "tail" : "(target: Observer[T], subscription: BooleanCancelable, iterator: Iterator[T])(s: Scheduler): Future[Ack]", "member" : "monix.reactive.Observer.feed", "link" : "monix\/reactive\/Observer$.html#feed[T](target:monix.reactive.Observer[T],subscription:monix.execution.cancelables.BooleanCancelable,iterator:Iterator[T])(implicits:monix.execution.Scheduler):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "feed", "tail" : "(target: Observer[T], iterator: Iterator[T])(s: Scheduler): Future[Ack]", "member" : "monix.reactive.Observer.feed", "link" : "monix\/reactive\/Observer$.html#feed[T](target:monix.reactive.Observer[T],iterator:Iterator[T])(implicits:monix.execution.Scheduler):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "feed", "tail" : "(target: Observer[T], subscription: BooleanCancelable, iterable: Iterable[T])(s: Scheduler): Future[Ack]", "member" : "monix.reactive.Observer.feed", "link" : "monix\/reactive\/Observer$.html#feed[T](target:monix.reactive.Observer[T],subscription:monix.execution.cancelables.BooleanCancelable,iterable:Iterable[T])(implicits:monix.execution.Scheduler):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "feed", "tail" : "(target: Observer[T], iterable: Iterable[T])(s: Scheduler): Future[Ack]", "member" : "monix.reactive.Observer.feed", "link" : "monix\/reactive\/Observer$.html#feed[T](target:monix.reactive.Observer[T],iterable:Iterable[T])(implicits:monix.execution.Scheduler):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "toReactiveSubscriber", "tail" : "(observer: Observer[T], bufferSize: Int)(s: Scheduler): Subscriber[T]", "member" : "monix.reactive.Observer.toReactiveSubscriber", "link" : "monix\/reactive\/Observer$.html#toReactiveSubscriber[T](observer:monix.reactive.Observer[T],bufferSize:Int)(implicits:monix.execution.Scheduler):org.reactivestreams.Subscriber[T]", "kind" : "def"}, {"label" : "toReactiveSubscriber", "tail" : "(observer: Observer[T])(s: Scheduler): Subscriber[T]", "member" : "monix.reactive.Observer.toReactiveSubscriber", "link" : "monix\/reactive\/Observer$.html#toReactiveSubscriber[T](observer:monix.reactive.Observer[T])(implicits:monix.execution.Scheduler):org.reactivestreams.Subscriber[T]", "kind" : "def"}, {"label" : "fromReactiveSubscriber", "tail" : "(subscriber: Subscriber[T], subscription: Cancelable)(s: Scheduler): Observer[T]", "member" : "monix.reactive.Observer.fromReactiveSubscriber", "link" : "monix\/reactive\/Observer$.html#fromReactiveSubscriber[T](subscriber:org.reactivestreams.Subscriber[T],subscription:monix.execution.Cancelable)(implicits:monix.execution.Scheduler):monix.reactive.Observer[T]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Sync[A]", "member" : "monix.reactive.Observer.dump", "link" : "monix\/reactive\/Observer$.html#dump[A](prefix:String,out:java.io.PrintStream):monix.reactive.Observer.Sync[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(r: UncaughtExceptionReporter): Sync[A]", "member" : "monix.reactive.Observer.empty", "link" : "monix\/reactive\/Observer$.html#empty[A](implicitr:monix.execution.UncaughtExceptionReporter):monix.reactive.Observer.Sync[A]", "kind" : "def"}, {"label" : "Sync", "tail" : "", "member" : "monix.reactive.Observer.Sync", "link" : "monix\/reactive\/Observer$.html#Sync[-T]extendsObserver[T]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Observer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Observer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Observer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Observer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Observer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Observer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Observer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Observer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Observer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Observer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Observer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Observer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Observer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Observer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Observer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Observer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Observer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "monix\/reactive\/Observer.html", "kind" : "trait"}, {"name" : "monix.reactive.OverflowStrategy", "shortDescription" : "Represents the buffering overflowStrategy chosen for actions thatneed buffering, instructing the pipeline what to do whenthe buffer is full.", "object" : "monix\/reactive\/OverflowStrategy$.html", "members_class" : [{"label" : "isSynchronous", "tail" : ": Boolean", "member" : "monix.reactive.OverflowStrategy.isSynchronous", "link" : "monix\/reactive\/OverflowStrategy.html#isSynchronous:Boolean", "kind" : "val"}, {"label" : "isEvicted", "tail" : ": Boolean", "member" : "monix.reactive.OverflowStrategy.isEvicted", "link" : "monix\/reactive\/OverflowStrategy.html#isEvicted:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/OverflowStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/OverflowStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/OverflowStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/OverflowStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/OverflowStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/OverflowStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/OverflowStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/OverflowStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/OverflowStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/OverflowStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/OverflowStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/OverflowStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/OverflowStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/OverflowStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/OverflowStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/OverflowStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/OverflowStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/OverflowStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/OverflowStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Default", "tail" : "(): OverflowStrategy[A]", "member" : "monix.reactive.OverflowStrategy.Default", "link" : "monix\/reactive\/OverflowStrategy$.html#Default[A]:monix.reactive.OverflowStrategy[A]", "kind" : "final def"}, {"label" : "Evicted", "tail" : "", "member" : "monix.reactive.OverflowStrategy.Evicted", "link" : "monix\/reactive\/OverflowStrategy$.html#Evicted[A]extendsOverflowStrategy.Synchronous[A]", "kind" : "sealed abstract class"}, {"label" : "Synchronous", "tail" : "", "member" : "monix.reactive.OverflowStrategy.Synchronous", "link" : "monix\/reactive\/OverflowStrategy$.html#Synchronous[+A]extendsOverflowStrategy[A]", "kind" : "sealed abstract class"}, {"label" : "ClearBufferAndSignal", "tail" : "", "member" : "monix.reactive.OverflowStrategy.ClearBufferAndSignal", "link" : "monix\/reactive\/OverflowStrategy$.html#ClearBufferAndSignal[A]extendsOverflowStrategy.Evicted[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ClearBuffer", "tail" : "", "member" : "monix.reactive.OverflowStrategy.ClearBuffer", "link" : "monix\/reactive\/OverflowStrategy$.html#ClearBufferextendsOverflowStrategy.Evicted[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "DropOldAndSignal", "tail" : "", "member" : "monix.reactive.OverflowStrategy.DropOldAndSignal", "link" : "monix\/reactive\/OverflowStrategy$.html#DropOldAndSignal[A]extendsOverflowStrategy.Evicted[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "DropOld", "tail" : "", "member" : "monix.reactive.OverflowStrategy.DropOld", "link" : "monix\/reactive\/OverflowStrategy$.html#DropOldextendsOverflowStrategy.Evicted[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "DropNewAndSignal", "tail" : "", "member" : "monix.reactive.OverflowStrategy.DropNewAndSignal", "link" : "monix\/reactive\/OverflowStrategy$.html#DropNewAndSignal[A]extendsOverflowStrategy.Evicted[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "DropNew", "tail" : "", "member" : "monix.reactive.OverflowStrategy.DropNew", "link" : "monix\/reactive\/OverflowStrategy$.html#DropNewextendsOverflowStrategy.Evicted[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "BackPressure", "tail" : "", "member" : "monix.reactive.OverflowStrategy.BackPressure", "link" : "monix\/reactive\/OverflowStrategy$.html#BackPressureextendsOverflowStrategy[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Fail", "tail" : "", "member" : "monix.reactive.OverflowStrategy.Fail", "link" : "monix\/reactive\/OverflowStrategy$.html#FailextendsOverflowStrategy.Synchronous[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Unbounded", "tail" : "", "member" : "monix.reactive.OverflowStrategy.Unbounded", "link" : "monix\/reactive\/OverflowStrategy$.html#Unbounded", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/OverflowStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/OverflowStrategy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/OverflowStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/OverflowStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/OverflowStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/OverflowStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/OverflowStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/OverflowStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/OverflowStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/OverflowStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/OverflowStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/OverflowStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/OverflowStrategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/OverflowStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/OverflowStrategy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/OverflowStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/OverflowStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/OverflowStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/OverflowStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/OverflowStrategy.html", "kind" : "class"}, {"name" : "monix.reactive.Pipe", "shortDescription" : "Represents a factory for an input\/output channel forbroadcasting input to multiple subscribers.", "object" : "monix\/reactive\/Pipe$.html", "members_class" : [{"label" : "transform", "tail" : "(transformer: Transformer[O, B]): Pipe[I, B]", "member" : "monix.reactive.Pipe.transform", "link" : "monix\/reactive\/Pipe.html#transform[B](transformer:monix.reactive.observables.ObservableLike.Transformer[O,B]):monix.reactive.Pipe[I,B]", "kind" : "def"}, {"label" : "liftByOperator", "tail" : "(op: Operator[O, B]): Pipe[I, B]", "member" : "monix.reactive.Pipe.liftByOperator", "link" : "monix\/reactive\/Pipe.html#liftByOperator[B](op:monix.reactive.observables.ObservableLike.Operator[O,B]):monix.reactive.Pipe[I,B]", "kind" : "def"}, {"label" : "concurrent", "tail" : "(strategy: Synchronous[I])(s: Scheduler): (Sync[I], Observable[O])", "member" : "monix.reactive.Pipe.concurrent", "link" : "monix\/reactive\/Pipe.html#concurrent(strategy:monix.reactive.OverflowStrategy.Synchronous[I])(implicits:monix.execution.Scheduler):(monix.reactive.Observer.Sync[I],monix.reactive.Observable[O])", "kind" : "def"}, {"label" : "concurrent", "tail" : "(s: Scheduler): (Sync[I], Observable[O])", "member" : "monix.reactive.Pipe.concurrent", "link" : "monix\/reactive\/Pipe.html#concurrent(implicits:monix.execution.Scheduler):(monix.reactive.Observer.Sync[I],monix.reactive.Observable[O])", "kind" : "def"}, {"label" : "multicast", "tail" : "(s: Scheduler): (Observer[I], Observable[O])", "member" : "monix.reactive.Pipe.multicast", "link" : "monix\/reactive\/Pipe.html#multicast(implicits:monix.execution.Scheduler):(monix.reactive.Observer[I],monix.reactive.Observable[O])", "kind" : "def"}, {"member" : "monix.reactive.Pipe#<init>", "error" : "unsupported entity"}, {"label" : "zipWithIndex", "tail" : "(): Pipe[I, (O, Long)]", "member" : "monix.reactive.observables.ObservableLike.zipWithIndex", "link" : "monix\/reactive\/Pipe.html#zipWithIndex:Self[(A,Long)]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.zipMap", "link" : "monix\/reactive\/Pipe.html#zipMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Observable[B]): Pipe[I, (O, B)]", "member" : "monix.reactive.observables.ObservableLike.zip", "link" : "monix\/reactive\/Pipe.html#zip[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "withLatestFrom6", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5], o6: Observable[B6])(f: (O, B1, B2, B3, B4, B5, B6) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom6", "link" : "monix\/reactive\/Pipe.html#withLatestFrom6[B1,B2,B3,B4,B5,B6,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5],o6:monix.reactive.Observable[B6])(f:(A,B1,B2,B3,B4,B5,B6)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom5", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4], o5: Observable[B5])(f: (O, B1, B2, B3, B4, B5) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom5", "link" : "monix\/reactive\/Pipe.html#withLatestFrom5[B1,B2,B3,B4,B5,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4],o5:monix.reactive.Observable[B5])(f:(A,B1,B2,B3,B4,B5)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom4", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3], o4: Observable[B4])(f: (O, B1, B2, B3, B4) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom4", "link" : "monix\/reactive\/Pipe.html#withLatestFrom4[B1,B2,B3,B4,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3],o4:monix.reactive.Observable[B4])(f:(A,B1,B2,B3,B4)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom3", "tail" : "(o1: Observable[B1], o2: Observable[B2], o3: Observable[B3])(f: (O, B1, B2, B3) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom3", "link" : "monix\/reactive\/Pipe.html#withLatestFrom3[B1,B2,B3,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2],o3:monix.reactive.Observable[B3])(f:(A,B1,B2,B3)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom2", "tail" : "(o1: Observable[B1], o2: Observable[B2])(f: (O, B1, B2) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom2", "link" : "monix\/reactive\/Pipe.html#withLatestFrom2[B1,B2,R](o1:monix.reactive.Observable[B1],o2:monix.reactive.Observable[B2])(f:(A,B1,B2)=>R):Self[R]", "kind" : "def"}, {"label" : "withLatestFrom", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.withLatestFrom", "link" : "monix\/reactive\/Pipe.html#withLatestFrom[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "whileBusyDropEventsAndSignal", "tail" : "(onOverflow: (Long) â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEventsAndSignal", "link" : "monix\/reactive\/Pipe.html#whileBusyDropEventsAndSignal[B>:A](onOverflow:Long=>B):Self[B]", "kind" : "def"}, {"label" : "whileBusyDropEvents", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.whileBusyDropEvents", "link" : "monix\/reactive\/Pipe.html#whileBusyDropEvents:Self[A]", "kind" : "def"}, {"label" : "whileBusyBuffer", "tail" : "(overflowStrategy: Synchronous[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.whileBusyBuffer", "link" : "monix\/reactive\/Pipe.html#whileBusyBuffer[B>:A](overflowStrategy:monix.reactive.OverflowStrategy.Synchronous[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstreamTo", "tail" : "(timeout: FiniteDuration, backup: Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstreamTo", "link" : "monix\/reactive\/Pipe.html#timeoutOnSlowUpstreamTo[B>:A](timeout:scala.concurrent.duration.FiniteDuration,backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "timeoutOnSlowUpstream", "tail" : "(timeout: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowUpstream", "link" : "monix\/reactive\/Pipe.html#timeoutOnSlowUpstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "timeoutOnSlowDownstream", "tail" : "(timeout: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.timeoutOnSlowDownstream", "link" : "monix\/reactive\/Pipe.html#timeoutOnSlowDownstream(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleWithTimeout", "tail" : "(timeout: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.throttleWithTimeout", "link" : "monix\/reactive\/Pipe.html#throttleWithTimeout(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleLast", "tail" : "(period: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.throttleLast", "link" : "monix\/reactive\/Pipe.html#throttleLast(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "throttleFirst", "tail" : "(interval: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.throttleFirst", "link" : "monix\/reactive\/Pipe.html#throttleFirst(interval:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "takeWhileNotCanceled", "tail" : "(c: BooleanCancelable): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.takeWhileNotCanceled", "link" : "monix\/reactive\/Pipe.html#takeWhileNotCanceled(c:monix.execution.cancelables.BooleanCancelable):Self[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.takeWhile", "link" : "monix\/reactive\/Pipe.html#takeWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(trigger: Observable[Any]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.takeUntil", "link" : "monix\/reactive\/Pipe.html#takeUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "takeLast", "tail" : "(n: Int): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.takeLast", "link" : "monix\/reactive\/Pipe.html#takeLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeEveryNth", "tail" : "(n: Int): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.takeEveryNth", "link" : "monix\/reactive\/Pipe.html#takeEveryNth(n:Int):Self[A]", "kind" : "def"}, {"label" : "takeByTimespan", "tail" : "(timespan: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.takeByTimespan", "link" : "monix\/reactive\/Pipe.html#takeByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Long): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.take", "link" : "monix\/reactive\/Pipe.html#take(n:Long):Self[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.tail", "link" : "monix\/reactive\/Pipe.html#tail:Self[A]", "kind" : "def"}, {"label" : "switchIfEmpty", "tail" : "(backup: Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.switchIfEmpty", "link" : "monix\/reactive\/Pipe.html#switchIfEmpty[B>:A](backup:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switchMap", "tail" : "(f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.switchMap", "link" : "monix\/reactive\/Pipe.html#switchMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "switch", "tail" : "(ev: <:<[O, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.switch", "link" : "monix\/reactive\/Pipe.html#switch[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "sumF", "tail" : "(arg0: Numeric[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.sumF", "link" : "monix\/reactive\/Pipe.html#sumF[B>:A](implicitevidence$1:Numeric[B]):Self[B]", "kind" : "def"}, {"label" : "subscribeOn", "tail" : "(scheduler: Scheduler): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.subscribeOn", "link" : "monix\/reactive\/Pipe.html#subscribeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "startWith", "tail" : "(elems: Seq[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.startWith", "link" : "monix\/reactive\/Pipe.html#startWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(initial: â‡’ R)(f: (R, O) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.scan", "link" : "monix\/reactive\/Pipe.html#scan[R](initial:=>R)(f:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "sampleRepeatedBy", "tail" : "(sampler: Observable[B]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeatedBy", "link" : "monix\/reactive\/Pipe.html#sampleRepeatedBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sampleRepeated", "tail" : "(period: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.sampleRepeated", "link" : "monix\/reactive\/Pipe.html#sampleRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(sampler: Observable[B]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.sampleBy", "link" : "monix\/reactive\/Pipe.html#sampleBy[B](sampler:monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(period: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.sample", "link" : "monix\/reactive\/Pipe.html#sample(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "restartUntil", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.restartUntil", "link" : "monix\/reactive\/Pipe.html#restartUntil(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.repeat", "link" : "monix\/reactive\/Pipe.html#repeat:Self[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.reduce", "link" : "monix\/reactive\/Pipe.html#reduce[B>:A](op:(B,B)=>B):Self[B]", "kind" : "def"}, {"label" : "publishSelector", "tail" : "(f: (Observable[O]) â‡’ Observable[R]): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.publishSelector", "link" : "monix\/reactive\/Pipe.html#publishSelector[R](f:monix.reactive.Observable[A]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThroughSelector", "tail" : "(pipe: Pipe[S, B], f: (Observable[B]) â‡’ Observable[R]): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.pipeThroughSelector", "link" : "monix\/reactive\/Pipe.html#pipeThroughSelector[S>:A,B,R](pipe:monix.reactive.Pipe[S,B],f:monix.reactive.Observable[B]=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(pipe: Pipe[I, B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.pipeThrough", "link" : "monix\/reactive\/Pipe.html#pipeThrough[I>:A,B](pipe:monix.reactive.Pipe[I,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorRestartUnlimited", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartUnlimited", "link" : "monix\/reactive\/Pipe.html#onErrorRestartUnlimited:Self[A]", "kind" : "def"}, {"label" : "onErrorRestartIf", "tail" : "(p: (Throwable) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestartIf", "link" : "monix\/reactive\/Pipe.html#onErrorRestartIf(p:Throwable=>Boolean):Self[A]", "kind" : "def"}, {"label" : "onErrorRestart", "tail" : "(maxRetries: Long): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.onErrorRestart", "link" : "monix\/reactive\/Pipe.html#onErrorRestart(maxRetries:Long):Self[A]", "kind" : "def"}, {"label" : "onErrorRecoverWith", "tail" : "(pf: PartialFunction[Throwable, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecoverWith", "link" : "monix\/reactive\/Pipe.html#onErrorRecoverWith[B>:A](pf:PartialFunction[Throwable,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "onErrorRecover", "tail" : "(pf: PartialFunction[Throwable, B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.onErrorRecover", "link" : "monix\/reactive\/Pipe.html#onErrorRecover[B>:A](pf:PartialFunction[Throwable,B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandleWith", "tail" : "(f: (Throwable) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandleWith", "link" : "monix\/reactive\/Pipe.html#onErrorHandleWith[B>:A](f:Throwable=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onErrorHandle", "tail" : "(f: (Throwable) â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.onErrorHandle", "link" : "monix\/reactive\/Pipe.html#onErrorHandle[B>:A](f:Throwable=>B):Self[B]", "kind" : "def"}, {"label" : "onErrorFallbackTo", "tail" : "(that: Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.onErrorFallbackTo", "link" : "monix\/reactive\/Pipe.html#onErrorFallbackTo[B>:A](that:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "onCancelTriggerError", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.onCancelTriggerError", "link" : "monix\/reactive\/Pipe.html#onCancelTriggerError:Self[A]", "kind" : "def"}, {"label" : "executeWithModel", "tail" : "(em: ExecutionModel): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.executeWithModel", "link" : "monix\/reactive\/Pipe.html#executeWithModel(em:monix.execution.ExecutionModel):Self[A]", "kind" : "def"}, {"label" : "executeWithFork", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.executeWithFork", "link" : "monix\/reactive\/Pipe.html#executeWithFork:Self[A]", "kind" : "def"}, {"label" : "executeOn", "tail" : "(scheduler: Scheduler): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.executeOn", "link" : "monix\/reactive\/Pipe.html#executeOn(scheduler:monix.execution.Scheduler):Self[A]", "kind" : "def"}, {"label" : "nonEmptyF", "tail" : "(): Pipe[I, Boolean]", "member" : "monix.reactive.observables.ObservableLike.nonEmptyF", "link" : "monix\/reactive\/Pipe.html#nonEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "minByF", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.minByF", "link" : "monix\/reactive\/Pipe.html#minByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "minF", "tail" : "(ev: Ordering[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.minF", "link" : "monix\/reactive\/Pipe.html#minF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B])(os: OverflowStrategy[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mergeMapDelayErrors", "link" : "monix\/reactive\/Pipe.html#mergeMapDelayErrors[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeMap", "tail" : "(f: (O) â‡’ Observable[B])(os: OverflowStrategy[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mergeMap", "link" : "monix\/reactive\/Pipe.html#mergeMap[B](f:A=>monix.reactive.Observable[B])(implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "mergeDelayErrors", "tail" : "(ev: <:<[O, Observable[B]], os: OverflowStrategy[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mergeDelayErrors", "link" : "monix\/reactive\/Pipe.html#mergeDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev: <:<[O, Observable[B]], os: OverflowStrategy[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.merge", "link" : "monix\/reactive\/Pipe.html#merge[B](implicitev:<:<[A,monix.reactive.Observable[B]],implicitos:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "maxByF", "tail" : "(f: (O) â‡’ B)(ev: Ordering[B]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.maxByF", "link" : "monix\/reactive\/Pipe.html#maxByF[B](f:A=>B)(implicitev:Ordering[B]):Self[A]", "kind" : "def"}, {"label" : "maxF", "tail" : "(ev: Ordering[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.maxF", "link" : "monix\/reactive\/Pipe.html#maxF[B>:A](implicitev:Ordering[B]):Self[B]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Pipe[I, Notification[O]]", "member" : "monix.reactive.observables.ObservableLike.materialize", "link" : "monix\/reactive\/Pipe.html#materialize:Self[monix.reactive.Notification[A]]", "kind" : "def"}, {"label" : "mapTask", "tail" : "(f: (O) â‡’ Task[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mapTask", "link" : "monix\/reactive\/Pipe.html#mapTask[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapFuture", "tail" : "(f: (O) â‡’ Future[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mapFuture", "link" : "monix\/reactive\/Pipe.html#mapFuture[B](f:A=>scala.concurrent.Future[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(parallelism: Int)(f: (O) â‡’ Task[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/Pipe.html#mapAsync[B](parallelism:Int)(f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "mapAsync", "tail" : "(f: (O) â‡’ Task[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.mapAsync", "link" : "monix\/reactive\/Pipe.html#mapAsync[B](f:A=>monix.eval.Task[B]):Self[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (O) â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.map", "link" : "monix\/reactive\/Pipe.html#map[B](f:A=>B):Self[B]", "kind" : "def"}, {"label" : "lastF", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.lastF", "link" : "monix\/reactive\/Pipe.html#lastF:Self[A]", "kind" : "def"}, {"label" : "interleave", "tail" : "(other: Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.interleave", "link" : "monix\/reactive\/Pipe.html#interleave[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "isEmptyF", "tail" : "(): Pipe[I, Boolean]", "member" : "monix.reactive.observables.ObservableLike.isEmptyF", "link" : "monix\/reactive\/Pipe.html#isEmptyF:Self[Boolean]", "kind" : "def"}, {"label" : "ignoreElements", "tail" : "(): Pipe[I, Nothing]", "member" : "monix.reactive.observables.ObservableLike.ignoreElements", "link" : "monix\/reactive\/Pipe.html#ignoreElements:Self[Nothing]", "kind" : "def"}, {"label" : "headOrElseF", "tail" : "(default: â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.headOrElseF", "link" : "monix\/reactive\/Pipe.html#headOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "headF", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.headF", "link" : "monix\/reactive\/Pipe.html#headF:Self[A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(keySelector: (O) â‡’ K)(keysBuffer: Synchronous[Nothing]): Pipe[I, GroupedObservable[K, O]]", "member" : "monix.reactive.observables.ObservableLike.groupBy", "link" : "monix\/reactive\/Pipe.html#groupBy[K](keySelector:A=>K)(implicitkeysBuffer:monix.reactive.OverflowStrategy.Synchronous[Nothing]):Self[monix.reactive.observables.GroupedObservable[K,A]]", "kind" : "def"}, {"label" : "forAllF", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, Boolean]", "member" : "monix.reactive.observables.ObservableLike.forAllF", "link" : "monix\/reactive\/Pipe.html#forAllF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "foldWhileF", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ (Boolean, R)): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.foldWhileF", "link" : "monix\/reactive\/Pipe.html#foldWhileF[R](initial:=>R)(op:(R,A)=>(Boolean,R)):Self[R]", "kind" : "def"}, {"label" : "foldLeftF", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.foldLeftF", "link" : "monix\/reactive\/Pipe.html#foldLeftF[R](initial:=>R)(op:(R,A)=>R):Self[R]", "kind" : "def"}, {"label" : "flattenLatest", "tail" : "(ev: <:<[O, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.flattenLatest", "link" : "monix\/reactive\/Pipe.html#flattenLatest[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flattenDelayErrors", "tail" : "(ev: <:<[O, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.flattenDelayErrors", "link" : "monix\/reactive\/Pipe.html#flattenDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[O, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.flatten", "link" : "monix\/reactive\/Pipe.html#flatten[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "flatScanDelayErrors", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ Observable[R]): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.flatScanDelayErrors", "link" : "monix\/reactive\/Pipe.html#flatScanDelayErrors[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatScan", "tail" : "(initial: â‡’ R)(op: (R, O) â‡’ Observable[R]): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.flatScan", "link" : "monix\/reactive\/Pipe.html#flatScan[R](initial:=>R)(op:(R,A)=>monix.reactive.Observable[R]):Self[R]", "kind" : "def"}, {"label" : "flatMapLatest", "tail" : "(f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.flatMapLatest", "link" : "monix\/reactive\/Pipe.html#flatMapLatest[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.flatMapDelayErrors", "link" : "monix\/reactive\/Pipe.html#flatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.flatMap", "link" : "monix\/reactive\/Pipe.html#flatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "firstOrElseF", "tail" : "(default: â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.firstOrElseF", "link" : "monix\/reactive\/Pipe.html#firstOrElseF[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "findF", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.findF", "link" : "monix\/reactive\/Pipe.html#findF(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.filter", "link" : "monix\/reactive\/Pipe.html#filter(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(): Pipe[I, Throwable]", "member" : "monix.reactive.observables.ObservableLike.failed", "link" : "monix\/reactive\/Pipe.html#failed:Self[Throwable]", "kind" : "def"}, {"label" : "existsF", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, Boolean]", "member" : "monix.reactive.observables.ObservableLike.existsF", "link" : "monix\/reactive\/Pipe.html#existsF(p:A=>Boolean):Self[Boolean]", "kind" : "def"}, {"label" : "endWithError", "tail" : "(error: Throwable): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.endWithError", "link" : "monix\/reactive\/Pipe.html#endWithError(error:Throwable):Self[A]", "kind" : "def"}, {"label" : "endWith", "tail" : "(elems: Seq[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.endWith", "link" : "monix\/reactive\/Pipe.html#endWith[B>:A](elems:Seq[B]):Self[B]", "kind" : "def"}, {"label" : "echoRepeated", "tail" : "(timeout: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.echoRepeated", "link" : "monix\/reactive\/Pipe.html#echoRepeated(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "echoOnce", "tail" : "(timeout: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.echoOnce", "link" : "monix\/reactive\/Pipe.html#echoOnce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "dump", "tail" : "(prefix: String, out: PrintStream): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.dump", "link" : "monix\/reactive\/Pipe.html#dump(prefix:String,out:java.io.PrintStream):Self[A]", "kind" : "def"}, {"label" : "dropWhileWithIndex", "tail" : "(p: (O, Int) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.dropWhileWithIndex", "link" : "monix\/reactive\/Pipe.html#dropWhileWithIndex(p:(A,Int)=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (O) â‡’ Boolean): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.dropWhile", "link" : "monix\/reactive\/Pipe.html#dropWhile(p:A=>Boolean):Self[A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(trigger: Observable[Any]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.dropUntil", "link" : "monix\/reactive\/Pipe.html#dropUntil(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "dropLast", "tail" : "(n: Int): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.dropLast", "link" : "monix\/reactive\/Pipe.html#dropLast(n:Int):Self[A]", "kind" : "def"}, {"label" : "dropByTimespan", "tail" : "(timespan: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.dropByTimespan", "link" : "monix\/reactive\/Pipe.html#dropByTimespan(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.drop", "link" : "monix\/reactive\/Pipe.html#drop(n:Int):Self[A]", "kind" : "def"}, {"label" : "doAfterSubscribe", "tail" : "(cb: () â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doAfterSubscribe", "link" : "monix\/reactive\/Pipe.html#doAfterSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscribe", "tail" : "(cb: () â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscribe", "link" : "monix\/reactive\/Pipe.html#doOnSubscribe(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnStart", "tail" : "(cb: (O) â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnStart", "link" : "monix\/reactive\/Pipe.html#doOnStart(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextAckEval", "tail" : "(cb: (O, Ack) â‡’ Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAckEval", "link" : "monix\/reactive\/Pipe.html#doOnNextAckEval(cb:(A,monix.execution.Ack)=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNextAck", "tail" : "(cb: (O, Ack) â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextAck", "link" : "monix\/reactive\/Pipe.html#doOnNextAck(cb:(A,monix.execution.Ack)=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnNextEval", "tail" : "(cb: (O) â‡’ Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnNextEval", "link" : "monix\/reactive\/Pipe.html#doOnNextEval(cb:A=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnNext", "tail" : "(cb: (O) â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnNext", "link" : "monix\/reactive\/Pipe.html#doOnNext(cb:A=>Unit):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminateEval", "link" : "monix\/reactive\/Pipe.html#doAfterTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doAfterTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doAfterTerminate", "link" : "monix\/reactive\/Pipe.html#doAfterTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnTerminateEval", "tail" : "(cb: (Option[Throwable]) â‡’ Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminateEval", "link" : "monix\/reactive\/Pipe.html#doOnTerminateEval(cb:Option[Throwable]=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnTerminate", "tail" : "(cb: (Option[Throwable]) â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnTerminate", "link" : "monix\/reactive\/Pipe.html#doOnTerminate(cb:Option[Throwable]=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnErrorEval", "tail" : "(cb: (Throwable) â‡’ Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnErrorEval", "link" : "monix\/reactive\/Pipe.html#doOnErrorEval(cb:Throwable=>monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnError", "tail" : "(cb: (Throwable) â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnError", "link" : "monix\/reactive\/Pipe.html#doOnError(cb:Throwable=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnCompleteEval", "tail" : "(task: Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnCompleteEval", "link" : "monix\/reactive\/Pipe.html#doOnCompleteEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnComplete", "tail" : "(cb: () â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnComplete", "link" : "monix\/reactive\/Pipe.html#doOnComplete(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnSubscriptionCancel", "tail" : "(cb: () â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnSubscriptionCancel", "link" : "monix\/reactive\/Pipe.html#doOnSubscriptionCancel(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStopEval", "tail" : "(task: Task[Unit]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStopEval", "link" : "monix\/reactive\/Pipe.html#doOnEarlyStopEval(task:monix.eval.Task[Unit]):Self[A]", "kind" : "def"}, {"label" : "doOnEarlyStop", "tail" : "(cb: () â‡’ Unit): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.doOnEarlyStop", "link" : "monix\/reactive\/Pipe.html#doOnEarlyStop(cb:()=>Unit):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChangedByKey", "tail" : "(key: (O) â‡’ K): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChangedByKey", "link" : "monix\/reactive\/Pipe.html#distinctUntilChangedByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinctUntilChanged", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.distinctUntilChanged", "link" : "monix\/reactive\/Pipe.html#distinctUntilChanged:Self[A]", "kind" : "def"}, {"label" : "distinctByKey", "tail" : "(key: (O) â‡’ K): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.distinctByKey", "link" : "monix\/reactive\/Pipe.html#distinctByKey[K](key:A=>K):Self[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.distinct", "link" : "monix\/reactive\/Pipe.html#distinct:Self[A]", "kind" : "def"}, {"label" : "dematerialize", "tail" : "(ev: <:<[O, Notification[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.dematerialize", "link" : "monix\/reactive\/Pipe.html#dematerialize[B](implicitev:<:<[A,monix.reactive.Notification[B]]):Self[B]", "kind" : "def"}, {"label" : "delaySubscriptionWith", "tail" : "(trigger: Observable[Any]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.delaySubscriptionWith", "link" : "monix\/reactive\/Pipe.html#delaySubscriptionWith(trigger:monix.reactive.Observable[Any]):Self[A]", "kind" : "def"}, {"label" : "delaySubscription", "tail" : "(timespan: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.delaySubscription", "link" : "monix\/reactive\/Pipe.html#delaySubscription(timespan:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnNextBySelector", "tail" : "(selector: (O) â‡’ Observable[B]): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.delayOnNextBySelector", "link" : "monix\/reactive\/Pipe.html#delayOnNextBySelector[B](selector:A=>monix.reactive.Observable[B]):Self[A]", "kind" : "def"}, {"label" : "delayOnNext", "tail" : "(duration: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.delayOnNext", "link" : "monix\/reactive\/Pipe.html#delayOnNext(duration:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "delayOnComplete", "tail" : "(delay: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.delayOnComplete", "link" : "monix\/reactive\/Pipe.html#delayOnComplete(delay:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "defaultIfEmpty", "tail" : "(default: â‡’ B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.defaultIfEmpty", "link" : "monix\/reactive\/Pipe.html#defaultIfEmpty[B>:A](default:=>B):Self[B]", "kind" : "def"}, {"label" : "debounceRepeated", "tail" : "(period: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.debounceRepeated", "link" : "monix\/reactive\/Pipe.html#debounceRepeated(period:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "debounceTo", "tail" : "(timeout: FiniteDuration, f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.debounceTo", "link" : "monix\/reactive\/Pipe.html#debounceTo[B](timeout:scala.concurrent.duration.FiniteDuration,f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "debounce", "tail" : "(timeout: FiniteDuration): Pipe[I, O]", "member" : "monix.reactive.observables.ObservableLike.debounce", "link" : "monix\/reactive\/Pipe.html#debounce(timeout:scala.concurrent.duration.FiniteDuration):Self[A]", "kind" : "def"}, {"label" : "countF", "tail" : "(): Pipe[I, Long]", "member" : "monix.reactive.observables.ObservableLike.countF", "link" : "monix\/reactive\/Pipe.html#countF:Self[Long]", "kind" : "def"}, {"label" : "concatMapDelayErrors", "tail" : "(f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.concatMapDelayErrors", "link" : "monix\/reactive\/Pipe.html#concatMapDelayErrors[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concatDelayErrors", "tail" : "(ev: <:<[O, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.concatDelayErrors", "link" : "monix\/reactive\/Pipe.html#concatDelayErrors[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "concatMap", "tail" : "(f: (O) â‡’ Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.concatMap", "link" : "monix\/reactive\/Pipe.html#concatMap[B](f:A=>monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "concat", "tail" : "(ev: <:<[O, Observable[B]]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.concat", "link" : "monix\/reactive\/Pipe.html#concat[B](implicitev:<:<[A,monix.reactive.Observable[B]]):Self[B]", "kind" : "def"}, {"label" : "completed", "tail" : "(): Pipe[I, Nothing]", "member" : "monix.reactive.observables.ObservableLike.completed", "link" : "monix\/reactive\/Pipe.html#completed:Self[Nothing]", "kind" : "def"}, {"label" : "combineLatestMap", "tail" : "(other: Observable[B])(f: (O, B) â‡’ R): Pipe[I, R]", "member" : "monix.reactive.observables.ObservableLike.combineLatestMap", "link" : "monix\/reactive\/Pipe.html#combineLatestMap[B,R](other:monix.reactive.Observable[B])(f:(A,B)=>R):Self[R]", "kind" : "def"}, {"label" : "combineLatest", "tail" : "(other: Observable[B]): Pipe[I, (O, B)]", "member" : "monix.reactive.observables.ObservableLike.combineLatest", "link" : "monix\/reactive\/Pipe.html#combineLatest[B](other:monix.reactive.Observable[B]):Self[(A,B)]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.collect", "link" : "monix\/reactive\/Pipe.html#collect[B](pf:PartialFunction[A,B]):Self[B]", "kind" : "def"}, {"label" : "bufferIntrospective", "tail" : "(maxSize: Int): Pipe[I, List[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferIntrospective", "link" : "monix\/reactive\/Pipe.html#bufferIntrospective(maxSize:Int):Self[List[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S], maxSize: Int): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/Pipe.html#bufferWithSelector[S](selector:monix.reactive.Observable[S],maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferWithSelector", "tail" : "(selector: Observable[S]): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferWithSelector", "link" : "monix\/reactive\/Pipe.html#bufferWithSelector[S](selector:monix.reactive.Observable[S]):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedWithPressure", "tail" : "(period: FiniteDuration, maxSize: Int): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedWithPressure", "link" : "monix\/reactive\/Pipe.html#bufferTimedWithPressure(period:scala.concurrent.duration.FiniteDuration,maxSize:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimedAndCounted", "tail" : "(timespan: FiniteDuration, maxCount: Int): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimedAndCounted", "link" : "monix\/reactive\/Pipe.html#bufferTimedAndCounted(timespan:scala.concurrent.duration.FiniteDuration,maxCount:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTimed", "tail" : "(timespan: FiniteDuration): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTimed", "link" : "monix\/reactive\/Pipe.html#bufferTimed(timespan:scala.concurrent.duration.FiniteDuration):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(count: Int, skip: Int): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferSliding", "link" : "monix\/reactive\/Pipe.html#bufferSliding(count:Int,skip:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "bufferTumbling", "tail" : "(count: Int): Pipe[I, Seq[O]]", "member" : "monix.reactive.observables.ObservableLike.bufferTumbling", "link" : "monix\/reactive\/Pipe.html#bufferTumbling(count:Int):Self[Seq[A]]", "kind" : "def"}, {"label" : "asyncBoundary", "tail" : "(overflowStrategy: OverflowStrategy[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.asyncBoundary", "link" : "monix\/reactive\/Pipe.html#asyncBoundary[B>:A](overflowStrategy:monix.reactive.OverflowStrategy[B]):Self[B]", "kind" : "def"}, {"label" : "ambWith", "tail" : "(other: Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.ambWith", "link" : "monix\/reactive\/Pipe.html#ambWith[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.:+", "link" : "monix\/reactive\/Pipe.html#:+[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.+:", "link" : "monix\/reactive\/Pipe.html#+:[B>:A](elem:B):Self[B]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Observable[B]): Pipe[I, B]", "member" : "monix.reactive.observables.ObservableLike.++", "link" : "monix\/reactive\/Pipe.html#++[B>:A](other:monix.reactive.Observable[B]):Self[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Pipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Pipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Pipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Pipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Pipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Pipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Pipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Pipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Pipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Pipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Pipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Pipe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Pipe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Pipe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Pipe.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Pipe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Pipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Pipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Pipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unicast", "tail" : "(): (Observer[I], Observable[O])", "member" : "monix.reactive.Pipe.unicast", "link" : "monix\/reactive\/Pipe.html#unicast:(monix.reactive.Observer[I],monix.reactive.Observable[O])", "kind" : "abstract def"}], "members_object" : [{"label" : "replayLimited", "tail" : "(capacity: Int, initial: Seq[A]): Pipe[A, A]", "member" : "monix.reactive.Pipe.replayLimited", "link" : "monix\/reactive\/Pipe$.html#replayLimited[A](capacity:Int,initial:Seq[A]):monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "replayLimited", "tail" : "(capacity: Int): Pipe[A, A]", "member" : "monix.reactive.Pipe.replayLimited", "link" : "monix\/reactive\/Pipe$.html#replayLimited[A](capacity:Int):monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "replay", "tail" : "(initial: Seq[A]): Pipe[A, A]", "member" : "monix.reactive.Pipe.replay", "link" : "monix\/reactive\/Pipe$.html#replay[A](initial:Seq[A]):monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "replay", "tail" : "(): Pipe[A, A]", "member" : "monix.reactive.Pipe.replay", "link" : "monix\/reactive\/Pipe$.html#replay[A]:monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "async", "tail" : "(): Pipe[A, A]", "member" : "monix.reactive.Pipe.async", "link" : "monix\/reactive\/Pipe$.html#async[A]:monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "behavior", "tail" : "(initial: A): Pipe[A, A]", "member" : "monix.reactive.Pipe.behavior", "link" : "monix\/reactive\/Pipe$.html#behavior[A](initial:A):monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "publishToOne", "tail" : "(): Pipe[A, A]", "member" : "monix.reactive.Pipe.publishToOne", "link" : "monix\/reactive\/Pipe$.html#publishToOne[A]:monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "publish", "tail" : "(): Pipe[A, A]", "member" : "monix.reactive.Pipe.publish", "link" : "monix\/reactive\/Pipe$.html#publish[A]:monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(strategy: MulticastStrategy[A]): Pipe[A, A]", "member" : "monix.reactive.Pipe.apply", "link" : "monix\/reactive\/Pipe$.html#apply[A](strategy:monix.reactive.MulticastStrategy[A]):monix.reactive.Pipe[A,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "monix\/reactive\/Pipe$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "monix\/reactive\/Pipe$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "monix\/reactive\/Pipe$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "monix\/reactive\/Pipe$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "monix\/reactive\/Pipe$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "monix\/reactive\/Pipe$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "monix\/reactive\/Pipe$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Pipe$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Pipe$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "monix\/reactive\/Pipe$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "monix\/reactive\/Pipe$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "monix\/reactive\/Pipe$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "monix\/reactive\/Pipe$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "monix\/reactive\/Pipe$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "monix\/reactive\/Pipe$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "monix\/reactive\/Pipe$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "monix\/reactive\/Pipe$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "monix\/reactive\/Pipe$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "monix\/reactive\/Pipe$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "monix\/reactive\/Pipe.html", "kind" : "class"}]};